{"version":3,"sources":["enums/ResponseObjectTypes.enum.ts","stores/DirectionsStore.ts","stores/SearchStore.ts","stores/MapglStore.ts","stores/RootStore.ts","contexts/StoreContext.tsx","hooks/store.ts","assets/images/burger.svg","assets/images/search.svg","assets/images/back-arrow.svg","assets/images/cancel.svg","components/SearchInput.tsx","assets/images/marker.svg","assets/images/building.svg","assets/images/branch.svg","assets/images/geo-object.svg","enums/PostMessageType.enum.ts","components/Results.tsx","assets/data/places.ts","assets/images/arrow-left.svg","components/CompaniesList.tsx","assets/images/green-marker.svg","assets/images/building-icon.svg","assets/images/buildings-green.svg","assets/images/arrow-right.svg","assets/images/work-time.svg","assets/images/phone.svg","assets/images/internet.svg","assets/images/arrow-down.svg","assets/images/share.svg","assets/images/icon-button.svg","assets/images/entrance.svg","assets/images/facebook.svg","assets/images/instagram.svg","styles/cardStyles.ts","components/BuildingCard.tsx","enums/ContactTypes.enum.ts","components/AdministarativeDivisionCard.tsx","components/OrganizationCart.tsx","components/DirectionCard.tsx","components/ObjectsCard.tsx","assets/images/myLocation.svg","assets/images/location.svg","components/DirectionInput.tsx","assets/images/check.svg","api/enums/api-versions.enum.ts","components/Mapgl.tsx","api/base.ts","api/directions.ts","api/search.ts","api/index.ts","hooks/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResponseObjectTypes","parse","require","DirectionsStore","rootStore","api","this","makeObservable","mapgl","directionsAPI","Directions","directionsApiKey","process","endPoint","type","directions","getDirections","getDirection","then","res","parsedDirection","data","route","mapglStore","buildDirection","coordinates","destroyDirection","observable","SearchStore","inputValue","sortPoint","search","getSearchResults","searchResults","runInAction","id","getObjectById","result","currentObject","getBranchesByBuildingId","branchesInBuilding","item","address","building_id","getObjectByGeo","action","MapglStore","load","mapglAPI","divId","options","Map","zoomControl","addZoomControl","directionsStore","loadDirections","ZoomControl","position","currentMarker","Marker","markers","push","polygon","destroy","Polygon","interactive","polyline","Polyline","forEach","marker","setCenter","getZoom","zoom","setZoom","RootStore","searchStore","StoreContext","React","createContext","StoreProvider","children","store","Provider","value","useRootStore","useContext","useMapglStore","useSearchStore","SearchInputWrapper","styled","div","BurgerWrapper","BurgerIcon","Burger","SearchIcon","Search","Input","input","BackArrowIcon","BackArrow","CancelIcon","Cancel","SearchInput","searchInputRef","setOpenObjectCard","setIsEnterPressed","destroyAll","useState","setIsInputFocused","setInputValue","onKeyDown","event","key","style","justifyContent","display","onClick","placeholder","onChange","current","target","ref","onFocus","destroyMarkers","marginLeft","onBlur","PostMessageTypeEnum","Wrapper","ItemWrapper","ResultIcon","p","TextWrapper","ItemName","ItemDescription","NotFoundWrapper","NotFoundTitle","NotFoundDescription","Results","observer","isEnterPressed","isResultsOpen","setIsResultsOpen","useEffect","items","length","map","buildMarker","point","lon","lat","blur","onfocus","name","setCurrentObject","handleClick","backgroundImage","branch","Branch","admDiv","admDivCity","admDivCountry","admDivDistrict","admDivDistrictArea","admDivPlace","admDivRegion","admDivSettlement","building","Building","GeoObject","split","slice","address_name","postcode","full_name","meta","code","Places","title","Header","HeaderTitle","ArrowLeftIcon","ArrowLeft","CompanyContainer","CompanyName","CompanyAdditionalInfo","CompaniesContainer","CompanyButton","setIsOpen","address_comment","purpose_name","CompaniesList","Divider","UpperInfo","BottomInfo","PlaceTitle","PlaceInfoWrapper","PlaceInfo","BottomText","GreenMarkerIcon","GreenMarker","BuildingIcon","BuildingsIcon","Buildings","ArrowRightIcon","ArrowRight","WorkTimeIcon","WorkTime","PhoneIcon","Phone","InternetIcon","Internet","EntranceIcon","Entrance","ArrowDownIcon","ArrowDown","ShareIcon","Share","InstagramIcon","Instagram","FacebookIcon","Facebook","SocialNetworkIconsContainer","IconButtonContainer","IconButton","Button","SwipeIndicator","AdditionalInfo","Title","AllBranchesContainer","BranchesTitle","BranchesCount","CategoriesItem","CategoriesItemText","CategoriesContainer","ContactTypes","BuildingCard","isOpen","setCompaniesListIsOpen","routTime","shareData","SHARE_INFO","links","branches","count","floors","ground_count","height","width","borderBottom","alignItems","margin","AdministrativeDivisionCard","DirectionType","OrganizationCart","isSwipeOpen","setSwipeIsOpen","instagramLink","facebookLink","contactTypeChecker","contactType","contact_groups","contacts","some","Contacts","arr","contact","url","index","Website","URL","text","workingTime","setWorkingTime","days","n","Date","getDay","schedule","working_hours","from","to","getCurrentDay","flexDirection","overflow","entrances","entrance","geometry","points","showEntrance","color","rubrics","ObjectCard","setIsDirectionCard","isCompaniesListOpen","console","log","window","ReactNativeWebView","postMessage","JSON","stringify","canBeSwiped","cardHeight","onSwipeUp","onSwipeDown","top","transition","subtype","setType","street","DirectionInputWrapper","StartPointWrapper","LocationIcon","Location","LocationInputWrapper","Line","EndPointWrapper","EndPoint","DirectionInput","onDirectionInputBack","DirectionCardWrapper","DirectionButtonsWrapper","DirectionButton","RouteTime","Distance","LetsGoButton","button","DirectionsLength","CheckIcon","Check","API_VERSIONS","DirectionCard","faster","selectedDirection","setSelectedDirection","setFaster","shortest","setShortest","shorter","destroyPolygon","border","background","borderRadius","duration","toFixed","distance","MyLocationButton","myLocation","MapWrapper","memo","Mapgl","useRef","setMapgl","isObjectCardOpen","setIsObjectCardOpen","isDirectionCard","loadMapglAPI","loadMapgl","center","getContainer","document","getElementById","marginTop","left","handleMapClick","off","setSelectedObjects","on","lngLat","parsedPolygon","selection","buildPolygon","BaseAPI","axios","DirectionsAPI","startPoint","a","lon1","lat1","lon2","lat2","output","post","SearchAPI","get","V3","V2","makeApi","client","useApi","create","baseURL","timeout","headers","Accept","App","StoreWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.474a959d.chunk.js","sourcesContent":["export enum ResponseObjectTypes {\n    branch = 'branch',\n    building = 'building',\n    street = 'street',\n    parking = 'parking',\n    station = 'station',\n    stationMetro = 'station.metro',\n    stationEntrance = 'station_entrance',\n    stationPlatform = 'station_platform',\n    attraction = 'attraction',\n    crossroad = 'crossroad',\n    gate = 'gate',\n    road = 'road',\n    route = 'route',\n    admDiv = 'adm_div',\n    admDivCity = 'adm_div.city',\n    admDivCountry = 'adm_div.country',\n    admDivDistrictArea = 'adm_div.district_area',\n    admDivDistrict = 'adm_div.district',\n    admDivDivision = 'adm_div.division',\n    admDivLivingArea = 'adm_div.living_area',\n    admDivPlace = 'adm_div.place',\n    admDivRegion = 'adm_div.region',\n    admDivSettlement = 'adm_div.settlement',\n    coordinates = 'coordinates',\n}\n","import mapglTypes from \"@2gis/mapgl/types/index\";\nimport { API } from \"api/index\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { Directions } from \"@2gis/mapgl-directions\";\nvar parse = require(\"wellknown\");\n\nexport class DirectionsStore {\n    rootStore: RootStore;\n    api: API;\n\n    @observable directionsAPI: Directions | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    loadDirections(mapgl: mapglTypes.Map) {\n        this.directionsAPI = new Directions(mapgl, {\n            directionsApiKey: process.env.REACT_APP_SEARCH_KEY as string,\n        });\n    }\n\n    getDirection(endPoint: number[], type: string) {\n        return this.api.directions\n            .getDirections([33.36166, 35.15753], endPoint, type)\n    }\n\n    buildDirection(endPoint: number[], type: string): Promise<any> {\n        return this.getDirection(endPoint, type).then((res) => {\n            const parsedDirection = parse(res.data[0].route);\n            this.rootStore.mapglStore.buildDirection(parsedDirection.coordinates);\n            return res;\n        });\n\n    }\n\n    destroyDirection() {\n        this.rootStore.mapglStore.destroyDirection();\n    }\n}\n","import {API} from \"api/index\";\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\nimport {RootStore} from \"./RootStore\";\nimport {ResultItem, SearchResponse} from \"api/interfaces/search.interface\"\n\nexport class SearchStore {\n    rootStore: RootStore;\n    api: API;\n    @observable searchResults: SearchResponse | null = null;\n    @observable currentObject: ResultItem | null = null;\n    //TODO: Replace any with the type\n    @observable branchesInBuilding: any | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    @action\n    async getSearchResults(\n        inputValue: string,\n        sortPoint: [number, number]\n    ) {\n        const searchResults = await this.api.search.getSearchResults(\n            inputValue,\n            sortPoint\n        );\n\n        runInAction(() => {\n            this.searchResults = searchResults.data as SearchResponse;\n        });\n        return this.searchResults;\n    }\n\n    @action\n    async getObjectById(\n        id: string\n    ) {\n        const result = await this.api.search.getObjectById(id)\n\n        runInAction(() => {\n            this.currentObject = result.data as any;\n        });\n\n        return this.currentObject;\n    }\n\n    @action\n    async getBranchesByBuildingId(id: string) {\n        const result = await this.api.search.getBranchesByBuildingId(id)\n\n        runInAction(() => {\n            this.branchesInBuilding = result.data as any;\n        })\n        return this.branchesInBuilding;\n    }\n\n    @action setCurrentObject(item: ResultItem): ResultItem {\n        if(item && item.address) {\n          this.getBranchesByBuildingId(item.address.building_id);\n        }\n        return this.currentObject = item;\n    }\n\n    // TODO: refactored this\n    getObjectByGeo(sortPoint: [number, number]): any {\n        return this.api.search.getObjectByGeo(sortPoint);\n    }\n}\n\n","import { action, observable, toJS } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { load } from \"@2gis/mapgl\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nexport class MapglStore {\n  rootStore: RootStore;\n  @observable mapglAPI: typeof mapglTypes | null = null;\n  @observable mapgl: mapglTypes.Map | null = null;\n  @observable markers: mapglTypes.Marker[] | [] = [];\n  @observable zoomControl: mapglTypes.ZoomControl | null = null;\n  @observable polygon: mapglTypes.Polygon | null = null;\n  @observable polyline: mapglTypes.Polyline | null = null;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action async loadMapglAPI(): Promise<any> {\n    this.mapglAPI = await load();\n  }\n\n  @action loadMapgl(\n    divId: string,\n    options: mapglTypes.MapOptions\n  ): mapglTypes.Map | null {\n    this.mapgl = this.mapglAPI\n      ? new this.mapglAPI.Map(divId, { ...options, zoomControl: false })\n      : null;\n    this.addZoomControl();\n    this.mapgl && this.rootStore.directionsStore.loadDirections(this.mapgl);\n    return this.mapgl;\n  }\n\n  addZoomControl(): void {\n    this.zoomControl =\n      this.mapglAPI &&\n      this.mapgl &&\n      new this.mapglAPI.ZoomControl(this.mapgl, {\n        position: \"topRight\",\n      });\n\n\n  }\n\n  buildMarker(\n    options: mapglTypes.MarkerOptions\n  ): mapglTypes.Marker | null {\n    if (this.mapgl && this.mapglAPI) {\n      const currentMarker = new this.mapglAPI.Marker(this.mapgl, options);\n      this.markers.push(currentMarker as never);\n      return currentMarker;\n    }\n    return null;\n  }\n\n  buildPolygon(coordinates: number[][][]) {\n    this.polygon && this.polygon.destroy();\n\n    if (this.mapglAPI && this.mapgl) {\n      this.polygon = new this.mapglAPI.Polygon(this.mapgl, {\n        coordinates: coordinates,\n        interactive: false,\n      });\n    }\n  }\n\n  buildDirection(coordinates: number[][]) {\n    this.destroyDirection();\n    if (this.mapglAPI && this.mapgl) {\n      this.polyline = new this.mapglAPI.Polyline(this.mapgl, {\n        coordinates: coordinates,\n      })\n    }\n  }\n\n  destroyDirection() {\n    this.polyline?.destroy();\n  }\n\n  destroyPolygon() {\n    this.polygon?.destroy();\n  }\n\n  destroyMarkers() {\n    this.markers.forEach(marker => {\n      marker.destroy();\n    });\n    this.markers = []\n  }\n\n  setCenter(coordinates: [number, number]) {\n    this.mapgl?.setCenter(coordinates);\n  }\n\n  getZoom(): number | undefined {\n    return this.mapgl?.getZoom();\n  }\n\n  setZoom(zoom: number) {\n    this.mapgl?.setZoom(zoom);\n  }\n}\n","import { DirectionsStore } from './DirectionsStore';\nimport { SearchStore } from './SearchStore';\nimport { MapglStore } from \"./MapglStore\";\nimport { API } from 'api';\n\nexport class RootStore {\n  api: API;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  directionsStore: DirectionsStore;\n\n\n  constructor(api: API) {\n    this.api = api;\n    this.mapglStore = new MapglStore(this);\n    this.searchStore = new SearchStore(this, api);\n    this.directionsStore = new DirectionsStore(this, api);\n  }\n}\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\n\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\n\nexport type StoreComponent = React.FC<{\n  store: RootStore;\n  children: React.ReactNode;\n}>;\n\nexport const StoreProvider: StoreComponent = ({\n  children,\n  store,\n}): React.ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"contexts/StoreContext\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const useRootStore = (): RootStore => useContext(StoreContext);\n\nexport const useMapglStore = () => {\n    const { mapglStore } = useRootStore();\n    return mapglStore;\n};\n\nexport const useSearchStore = () => {\n    const { searchStore } = useRootStore();\n    return searchStore;\n};\n\nexport const useDirectionsStore = () => {\n    const { directionsStore } = useRootStore();\n    return directionsStore;\n};","export default __webpack_public_path__ + \"static/media/burger.e78eec97.svg\";","export default __webpack_public_path__ + \"static/media/search.7e6201e0.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.ecccce44.svg\";","export default __webpack_public_path__ + \"static/media/cancel.140bb64c.svg\";","import Burger from \"assets/images/burger.svg\";\nimport Search from \"assets/images/search.svg\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Cancel from \"assets/images/cancel.svg\";\nimport { useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 95%;\n  height: 48px;\n  background: #ffffff;\n  border-radius: 30px;\n  border: #fffff;\n  display: flex;\n  margin: 0 auto;\n  margin-top: 50px;\n  left: 0;\n  right: 0;\n  margin-top: 50px;\n`;\n\nconst BurgerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 40px;\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 20px;\n  margin: 4px;\n`;\n\nconst BurgerIcon = styled.div`\n  background-image: url(${Burger});\n  width: 18px;\n  height: 12px;\n`;\n\nconst SearchIcon = styled.div`\n  background-image: url(${Search});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  margin-left: 27px;\n  margin-top: 10px;\n  border: 0;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst CancelIcon = styled.div`\n  background-image: url(${Cancel});\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  margin-top: 17px;\n`;\n\ninterface SeacrhInputProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  destroyAll: () => void;\n}\n\nexport const SearchInput = ({\n  searchStore,\n  mapglStore,\n  searchInputRef,\n  setOpenObjectCard,\n  setIsEnterPressed,\n  destroyAll,\n}: SeacrhInputProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    searchInputRef.current && setInputValue(searchInputRef.current?.value);\n    searchStore.getSearchResults(event.target.value, [33.36166, 35.15753]);\n  };\n\n  return (\n    <SearchInputWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          setIsEnterPressed(true);\n        } else {\n          setIsEnterPressed(false);\n        }\n      }}\n      style={{\n        justifyContent: inputValue ? \"space-around\" : \"\",\n      }}\n    >\n      {inputValue === \"\" && (\n        <BurgerWrapper>\n          <BurgerIcon></BurgerIcon>\n        </BurgerWrapper>\n      )}\n      {inputValue === \"\" && <SearchIcon></SearchIcon>}\n      <div style={{ display: \"flex\" }}>\n        {inputValue && (\n          <BackArrowIcon\n            onClick={() => {\n              setOpenObjectCard(false);\n            }}\n          />\n        )}\n        <Input\n          placeholder=\"Search\"\n          onChange={handleChange}\n          ref={searchInputRef}\n          onFocus={() => {\n            setIsInputFocused(true);\n            setOpenObjectCard(false);\n            mapglStore.destroyMarkers();\n          }}\n          style={{\n            marginLeft: inputValue ? \"24px\" : \"27px\",\n          }}\n          onBlur={() => setIsInputFocused(false)}\n        ></Input>\n      </div>\n      {inputValue && (\n        <CancelIcon\n          onClick={() => {\n            if (searchInputRef.current?.value) {\n              searchInputRef.current.value = \"\";\n              destroyAll();\n              setOpenObjectCard(false);\n            }\n          }}\n        />\n      )}\n    </SearchInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/marker.953d3c77.svg\";","export default __webpack_public_path__ + \"static/media/building.33b84d52.svg\";","export default __webpack_public_path__ + \"static/media/branch.267d7457.svg\";","export default __webpack_public_path__ + \"static/media/geo-object.ccba00f5.svg\";","export enum PostMessageTypeEnum {\n    URL = 'url',\n    SHARE_INFO = 'share_info',\n}\n","import Marker from \"assets/images/marker.svg\";\nimport Building from \"assets/images/building.svg\";\nimport Branch from \"assets/images/branch.svg\";\nimport GeoObject from \"assets/images/geo-object.svg\";\nimport { ResponseObjectTypes } from \"enums/ResponseObjectTypes.enum\";\nimport { observer } from \"mobx-react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport { useEffect, useState } from \"react\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  position: absolute;\n  top: 120px;\n  z-index: 60;\n  width: 100%;\n  height: 1000px;\n  border-radius: 20px 20px 0px 0px;\n  overflow: scroll;\n`;\n\nconst ItemWrapper = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  border-top: 3px solid #fafafafa;\n`;\n\nconst ResultIcon = styled.p`\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-left: 22px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemName = styled.div`\n  margin-left: 29px;\n`;\n\nconst ItemDescription = styled.div`\n  margin-left: 29px;\n  color: rgba(0, 0, 0, 0.6);\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  font-size: 14px;\n`;\n\nconst NotFoundWrapper = styled.div`\n  margin-left: 16px;\n  margin-top: 39px;\n`;\n\nconst NotFoundTitle = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #000000;\n`;\n\nconst NotFoundDescription = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #000000;\n`;\n\ninterface ResultsProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  isEnterPressed: boolean;\n  destroyAll: () => void;\n  isResultsOpen: boolean;\n  setIsResultsOpen: (val: boolean) => void;\n}\n\nexport const Results = observer(\n  ({\n    searchStore,\n    setOpenObjectCard,\n    mapglStore,\n    searchInputRef,\n    isEnterPressed,\n    destroyAll,\n    isResultsOpen,\n    setIsResultsOpen\n  }: ResultsProps) => {\n\n    const getIcon = (type: ResponseObjectTypes) => {\n      if (type === ResponseObjectTypes.branch) {\n        return Branch;\n      } else if (\n        type === ResponseObjectTypes.admDiv ||\n        type === ResponseObjectTypes.admDivCity ||\n        type === ResponseObjectTypes.admDivCountry ||\n        type === ResponseObjectTypes.admDivDistrict ||\n        type === ResponseObjectTypes.admDivDistrictArea ||\n        type === ResponseObjectTypes.admDivPlace ||\n        type === ResponseObjectTypes.admDivRegion ||\n        type === ResponseObjectTypes.admDivSettlement\n      ) {\n        return Marker;\n      } else if (type === ResponseObjectTypes.building) {\n        return Building;\n      } else {\n        return GeoObject;\n      }\n    };\n\n    const formatName = (name: string) => {\n      const MAX_NAME_LENGTH = 40;\n      const length = name.split(\"\").length;\n      return length >= MAX_NAME_LENGTH\n        ? name.slice(0, MAX_NAME_LENGTH) + \"...\"\n        : name;\n    };\n\n    const handleClick = (item: any) => {\n      destroyAll();\n\n      searchStore.setCurrentObject(item);\n      mapglStore.buildMarker({\n        coordinates: [item.point.lon, item.point.lat],\n      });\n      mapglStore.setCenter([item.point.lon, item.point.lat]);\n      setOpenObjectCard(true);\n    };\n\n    useEffect(() => {\n      if (isEnterPressed && searchStore.searchResults?.result?.items.length) {\n        searchStore.searchResults?.result?.items.map((item: ResultItem) => {\n          mapglStore.buildMarker({\n            coordinates: [item.point.lon, item.point.lat],\n          });\n        });\n        setIsResultsOpen(false);\n        searchInputRef.current?.blur();\n      }\n    }, [isEnterPressed]);\n\n    useEffect(() => {\n      if (!isResultsOpen && searchInputRef.current?.onfocus) {\n        searchInputRef.current.onfocus = () => {\n          !isResultsOpen && setIsResultsOpen(true);\n        };\n      }\n    }, [isResultsOpen, searchInputRef]);\n    return (\n      <>\n        {isResultsOpen && (\n          <Wrapper\n            style={{\n              display: searchInputRef?.current?.value ? \"flex\" : \"none\",\n            }}\n          >\n            {searchStore.searchResults?.result?.items.map(\n              (item: ResultItem) => {\n                return (\n                  <ItemWrapper key={item.id} onClick={() => handleClick(item)}>\n                    <ResultIcon\n                      style={{\n                        backgroundImage: `url(${getIcon(item.type)})`,\n                      }}\n                    ></ResultIcon>\n                    <TextWrapper>\n                      <ItemName>{formatName(item.name)}</ItemName>\n                      <ItemDescription>\n                        {(item.address_name &&\n                          item.address?.postcode &&\n                          item.address_name + \", \" + item.address?.postcode) ||\n                          item.name ||\n                          item.full_name}\n                      </ItemDescription>\n                    </TextWrapper>\n                  </ItemWrapper>\n                );\n              }\n            )}\n            {isEnterPressed && searchStore.searchResults?.meta.code === 404 && (\n              <NotFoundWrapper>\n                <NotFoundTitle>No Results Found</NotFoundTitle>\n                <NotFoundDescription>\n                  Try searching for something else, check for typos or rephrase\n                  it\n                </NotFoundDescription>\n              </NotFoundWrapper>\n            )}\n          </Wrapper>\n        )}\n      </>\n    );\n  }\n);\n","export const Places = [\n    {title: 'Company', type: 'branch'},\n    {title: 'Building', type: 'building'},\n    {title: 'Street', type: 'street'},\n    {title: 'Parking', type: 'parking'},\n    {title: 'Station', type: 'station'},\n    {title: 'Attraction', type: 'attraction'},\n    {title: 'Crossroad', type: 'crossroad'},\n    {title: 'Gate', type: 'gate'},\n    {title: 'Road', type: 'road'},\n    {title: 'Route', type: 'route'},\n    {title: 'Administrative Division', type: 'adm_div'},\n    {title: 'City', type: 'adm_div.city'},\n    {title: 'Country', type: 'adm_div.country'},\n    {title: 'District Area', type: 'adm_div.district_area'},\n    {title: 'District', type: 'adm_div.district'},\n    {title: 'Division', type: 'adm_div.division'},\n    {title: 'Living Area', type: 'adm_div.living_area'},\n    {title: 'Place', type: 'adm_div.place'},\n    {title: 'Region', type: 'adm_div.region'},\n    {title: 'Settlement', type: 'adm_div.settlement'},\n    {title: 'Coordinates', type: 'coordinates'},\n]\n","export default __webpack_public_path__ + \"static/media/arrow-left.5503f9f6.svg\";","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"assets/images/arrow-left.svg\";\nimport {useMapglStore, useSearchStore} from \"../hooks/store\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {ResultItem} from \"../api/interfaces/search.interface\";\nimport {MapglStore} from \"../stores/MapglStore\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: absolute;\n  z-index: 900;\n  background-color: #ffffff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 375px;\n  height: 64px;\n  margin-top: 10px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst HeaderTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst ArrowLeftIcon = styled.p`\n  background-image: url(${ArrowLeft});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin: 0 32px;\n`;\n\nconst CompanyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  height: 64px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst CompanyName = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-left: 16px;\n`;\n\nconst CompanyAdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-left: 16px;\n`;\n\nconst CompaniesContainer = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: scroll;\n`;\n\ninterface CompanyButton {\n    setIsOpen: (arg0: boolean) => void;\n    searchStore: SearchStore;\n    item: ResultItem;\n    mapglStore: MapglStore\n}\n\nconst CompanyButton: FC<CompanyButton> = ({setIsOpen, searchStore, item, mapglStore}) => {\n    const openCompanyCard = () => {\n        searchStore.getObjectById(item.id).then((res: any) => {\n            res &&\n            searchStore.setCurrentObject(res.result?.items[0]);\n            setIsOpen(false);\n        });\n    }\n    return (\n        <CompanyContainer onClick={() => openCompanyCard()}>\n            <CompanyName>{`${item.name}`}</CompanyName>\n            <CompanyAdditionalInfo>{`${item.address_comment || item.purpose_name}`}</CompanyAdditionalInfo>\n        </CompanyContainer>\n    );\n};\n\ninterface CompaniesListProps {\n    setIsOpen: (arg0: boolean) => void;\n}\n\nexport const CompaniesList: FC<CompaniesListProps> = ({setIsOpen}) => {\n    const searchStore = useSearchStore();\n    const mapglStore = useMapglStore();\n    return (\n        <Wrapper>\n            <Header>\n                <ArrowLeftIcon onClick={() => setIsOpen(false)}/>\n                <HeaderTitle>Companies</HeaderTitle>\n            </Header>\n            <CompaniesContainer>\n                {searchStore.branchesInBuilding.result.items.map((item: any) => (\n                    <CompanyButton key={item.id} item={item} setIsOpen={setIsOpen} searchStore={searchStore}\n                                   mapglStore={mapglStore}/>))}\n            </CompaniesContainer>\n        </Wrapper>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/green-marker.30aab809.svg\";","export default __webpack_public_path__ + \"static/media/building-icon.ba15730a.svg\";","export default __webpack_public_path__ + \"static/media/buildings-green.d86a6822.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.a70d4ef3.svg\";","export default __webpack_public_path__ + \"static/media/work-time.056843a8.svg\";","export default __webpack_public_path__ + \"static/media/phone.0d461ee9.svg\";","export default __webpack_public_path__ + \"static/media/internet.dab33b8c.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.cc14feef.svg\";","export default __webpack_public_path__ + \"static/media/share.4a856fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-button.510f85c7.svg\";","export default __webpack_public_path__ + \"static/media/entrance.4362b935.svg\";","export default __webpack_public_path__ + \"static/media/facebook.5e19df6c.svg\";","export default __webpack_public_path__ + \"static/media/instagram.a062d315.svg\";","import styled from \"styled-components\";\nimport GreenMarker from \"../assets/images/green-marker.svg\";\nimport Building from \"../assets/images/building-icon.svg\";\nimport Buildings from \"../assets/images/buildings-green.svg\";\nimport ArrowRight from \"../assets/images/arrow-right.svg\";\nimport WorkTime from \"../assets/images/work-time.svg\";\nimport Phone from \"../assets/images/phone.svg\";\nimport Internet from \"../assets/images/internet.svg\";\nimport ArrowDown from \"../assets/images/arrow-down.svg\";\nimport Share from \"../assets/images/share.svg\";\nimport Button from \"../assets/images/icon-button.svg\";\nimport Entrance from \"../assets/images/entrance.svg\";\nimport Facebook from \"../assets/images/facebook.svg\";\nimport Instagram from \"../assets/images/instagram.svg\";\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  justify-content: flex-start;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  border-radius: 20px 20px 0px 0px;\n  transition-property: height;\n  transition-duration: 0.3s;\n  z-index: 60;\n`;\n\nexport const Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: rgba(33, 33, 33, 0.08);\n`;\n\nexport const UpperInfo = styled.div`\n  display: flex;\n  margin: 9px 24px 11px 24px;\n`;\n\nexport const BottomInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 18px 24px;\n`;\n\nexport const PlaceTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  margin-bottom: 1px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 250px\n`;\n\nexport const PlaceInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const PlaceInfo = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const BottomText = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 68%;\n  margin-right: 11px;\n`;\n\nexport const GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-right: 16px;\n`;\n\nexport const BuildingIcon = styled.p`\n  background-image: url(${Building});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const BuildingsIcon = styled.p`\n  background-image: url(${Buildings});\n  height: 19px;\n  width: 22px;\n  margin-right: 16px;\n  margin-left: 27px;\n  margin-bottom: 7%;\n`;\n\nexport const ArrowRightIcon = styled.p`\n  background-image: url(${ArrowRight});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin-right: 24px;\n`;\n\nexport const WorkTimeIcon = styled.p`\n  background-image: url(${WorkTime});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const PhoneIcon = styled.p`\n  background-image: url(${Phone});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const InternetIcon = styled.p`\n  background-image: url(${Internet});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const EntranceIcon = styled.p`\n  background-image: url(${Entrance});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const ArrowDownIcon = styled.p`\n  background-image: url(${ArrowDown});\n  background-repeat: no-repeat;\n  width: 14px;\n  height: 12px;\n  margin-right: 28px;\n`;\n\nexport const ShareIcon = styled.p`\n  background-image: url(${Share});\n  height: 18px;\n  width: 18px;\n`;\n\nexport const InstagramIcon = styled.p`\n  background-image: url(${Instagram});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const FacebookIcon = styled.p`\n  background-image: url(${Facebook});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const SocialNetworkIconsContainer = styled.div`\ndisplay: flex;\n`;\n\nexport const IconButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const IconButton = styled.p`\n  background-image: url(${Button});\n  width: 70px;\n  height: 70px;\n  display: flex;\n  position: absolute;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  margin-right: 13px;\n`;\n\nexport const SwipeIndicator = styled.div`\nwidth: 36px;\nmin-height: 4px;\nborder-radius: 4px;\nbackground: #DBDBDB;\nmargin: 8px auto;\n`;\n\nexport const AdditionalInfo = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 14px;\nline-height: 20px;\nletter-spacing: 0.25px;\ncolor: rgba(0, 0, 0, 0.6);\n`\n\nexport const Title = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 16px;\nletter-spacing: 1.25px;\ntext-transform: uppercase;\ncolor: rgba(0, 0, 0, 0.6);\nmargin: 16px;\n`\n\nexport const CompanyContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 32px;\n`\nexport const AllBranchesContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n  border-bottom: solid 2px rgba(33,33,33,0.08);\n`\nexport const BranchesTitle = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 16px;\nline-height: 24px;\nletter-spacing: 0.15px;\ncolor: rgba(0, 0, 0, 0.87);\n  margin: 6px 16px 11px 16px;\n`\nexport const BranchesCount = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 24px;\nletter-spacing: 0.1px;\ncolor: rgba(0, 0, 0, 0.87);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nexport const CategoriesItem = styled.div`\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 16px;\n  height: 32px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n`\n\nexport const CategoriesItemText = styled.div`\n  font-family: Intel;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 6px 12px;\n`\n\nexport const CategoriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 16px 100px 16px;\n`\n\n","import React, {FC} from \"react\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {\n    AdditionalInfo,\n    ArrowRightIcon,\n    BottomInfo,\n    BottomText,\n    BuildingIcon,\n    BuildingsIcon,\n    Divider,\n    GreenMarkerIcon,\n    ShareIcon,\n    Title\n} from \"../styles/cardStyles\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface BuildingCardProps {\n    isOpen: boolean;\n    searchStore: SearchStore;\n    routTime?: string;\n    setCompaniesListIsOpen: (arg0: boolean) => void;\n    shareData: (arg0: PostMessageData) => void;\n    mapglStore: MapglStore;\n    coordinates: [number, number];\n}\n\nexport const BuildingCard: FC<BuildingCardProps> = ({\n                                                        isOpen,\n                                                        searchStore,\n                                                        routTime,\n                                                        setCompaniesListIsOpen,\n                                                        shareData,\n                                                        mapglStore,\n                                                        coordinates\n                                                    }) => {\n    return (\n        <>\n            {searchStore.currentObject?.address ? <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\"})}/> : null}\n            </BottomInfo> : <BottomInfo>\n                <GreenMarkerIcon/>\n                <BottomText>\n                    {searchStore.currentObject?.full_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\"})}/> : null}\n            </BottomInfo>}\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {searchStore.currentObject?.links?.branches?.count && isOpen ?\n                (\n                    <div>\n                        <Divider style={{\n                            height: \"2px\",\n                        }}/>\n                        <Title>Сompanies</Title>\n                        <BottomInfo onClick={() => setCompaniesListIsOpen(true)} style={{\n                            height: \"72px\",\n                            width: \"100%\",\n                            borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                            alignItems: \"center\",\n                            margin: \"18px 0\",\n                        }}>\n                            <BuildingsIcon/>\n                            <div style={{\n                                width: \"360px\",\n                            }}>\n                                <BottomText>All Companies</BottomText>\n                                <AdditionalInfo>{`${searchStore.currentObject?.links?.branches?.count} companies`}</AdditionalInfo>\n                            </div>\n                            <ArrowRightIcon/>\n                        </BottomInfo>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n","export enum ContactTypes {\n    Email = 'email',\n    Website = 'website',\n    Phone = 'phone',\n    Fax = 'fax',\n    Icq = 'icq',\n    Jabber = 'jabber',\n    Skype = 'skype',\n    Vkontakte = 'vkontakte',\n    Twitter = 'twitter',\n    Instagram = 'instagram',\n    Facebook = 'facebook',\n    Pobox = 'pobox',\n    Youtube = 'youtube',\n    Odnoklassniki = 'odnoklassniki',\n    Googleplus = 'googleplus',\n    Linkedin = 'linkedin',\n    Pinterest = 'pinterest',\n    Whatsapp = 'whatsapp',\n    Telegram = 'telegram',\n    Viber = 'viber'\n}\n","import {BottomInfo, BottomText, GreenMarkerIcon, ShareIcon,} from \"../styles/cardStyles\";\nimport {FC} from \"react\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface AdministrativeDivisionCardProps {\n  isOpen: boolean;\n  searchStore: SearchStore;\n  shareData: (arg0: PostMessageData) => void;\n  mapglStore: MapglStore;\n  coordinates: [number, number];\n}\n\nexport const AdministrativeDivisionCard: FC<AdministrativeDivisionCardProps> =\n  ({ isOpen, searchStore, shareData, mapglStore,coordinates }) => {\n    return (\n      <>\n        {searchStore.currentObject?.address ? (\n          <BottomInfo>\n            <GreenMarkerIcon />\n            <BottomText>\n              {searchStore.currentObject?.address?.postcode &&\n                searchStore.currentObject.address?.postcode + \", \"}\n              {searchStore.currentObject?.address_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareData(\n                      {type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject\n                            ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                            : \"\"}\n                  )\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        ) : (\n          <BottomInfo>\n            <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)} />\n            <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n              {searchStore.currentObject?.full_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareData(\n                      {type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject\n                            ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                            : \"\"}\n                  )\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        )}\n      </>\n    );\n  };\n","import {FC, useEffect, useState} from \"react\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {\n    AllBranchesContainer,\n    ArrowDownIcon,\n    ArrowRightIcon,\n    BottomInfo,\n    BottomText,\n    BranchesCount,\n    BranchesTitle,\n    BuildingIcon,\n    BuildingsIcon,\n    CategoriesContainer,\n    CategoriesItem,\n    CategoriesItemText,\n    CompanyContainer,\n    Divider,\n    EntranceIcon,\n    FacebookIcon,\n    GreenMarkerIcon,\n    InstagramIcon,\n    InternetIcon,\n    PhoneIcon,\n    ShareIcon,\n    SocialNetworkIconsContainer,\n    Title,\n    WorkTimeIcon\n} from \"../styles/cardStyles\";\nimport {MapglStore} from \"../stores/MapglStore\";\nimport {ContactTypes} from \"../enums/ContactTypes.enum\";\nimport {Contact, ResultItem} from \"../api/interfaces/search.interface\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\nvar parse = require('wellknown');\n\ninterface OrganizationCartProps {\n    searchStore: SearchStore;\n    isSwipeOpen: boolean;\n    setSwipeIsOpen: (arg0: boolean) => void;\n    setCompaniesListIsOpen: (arg0: boolean) => void;\n    mapglStore: MapglStore;\n    shareData: (arg0: PostMessageData) => void;\n    coordinates: [number, number];\n}\n\nexport const OrganizationCart: FC<OrganizationCartProps> = ({searchStore, isSwipeOpen, setCompaniesListIsOpen, mapglStore, setSwipeIsOpen, shareData,coordinates}) => {\n    let instagramLink = '';\n    let facebookLink = '';\n    const showEntrance = () => {\n        let entrance = parse(searchStore.currentObject?.links?.entrances[0].geometry.points[0]).coordinates;\n        mapglStore.buildMarker({\n            coordinates: entrance,\n        });\n        mapglStore.setCenter(entrance);\n        mapglStore.setZoom(18);\n        setSwipeIsOpen(false);\n    }\n\n    const contactTypeChecker = (contactType: ContactTypes) => {\n        if(searchStore.currentObject?.contact_groups)\n        return searchStore.currentObject?.contact_groups[0].contacts.some(item => item.type === contactType)\n    }\n\n    const Contacts = (contactType: ContactTypes) => {\n        //TODO:: Refactor this function\n        let arr: Contact[] = [];\n        if(!!searchStore.currentObject?.contact_groups) {\n            searchStore.currentObject?.contact_groups.forEach(item => item.contacts.forEach(contact => {\n                if(contact.type === ContactTypes.Instagram) {\n                    instagramLink = contact.url\n                }\n                if(contact.type === ContactTypes.Facebook) {\n                    facebookLink = contact.url\n                }\n                arr.push(contact)}))\n            return arr.map((item: any, index) => {\n                    if (item.type === contactType) {\n                        if(item.type === ContactTypes.Website) {\n                            return <BottomText onClick={() => shareData({type: PostMessageTypeEnum.URL, data: item.url})} key={item.value}>{`${item.text}`}</BottomText>\n                        }\n                        return <BottomText key={item.value}>{`${item.text}`}</BottomText>;\n                    }\n                })\n        }\n    }\n\n    const openCompanyCard = (id: string) => {\n        searchStore.getObjectById(id).then((res: any) => {\n            res &&\n            searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n            setSwipeIsOpen(false);\n        });\n    }\n\n    const [workingTime, setWorkingTime] = useState([]);\n\n    const getCurrentDay = () => {\n        let days = [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ];\n        let d = new Date();\n        let n = d.getDay();\n\n        // @ts-ignore\n        searchStore.currentObject?.schedule && setWorkingTime([searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.from, searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.to])\n    }\n\n    useEffect(() => {\n        getCurrentDay();\n    }, [searchStore.currentObject?.schedule])\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: isSwipeOpen ? \"scroll\" : \"hidden\"\n        }}>\n            <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.full_name ? searchStore.currentObject?.full_name + \", \" : null}\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isSwipeOpen ? <ShareIcon onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject.id : \"\"})}/> : null}\n            </BottomInfo>\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {isSwipeOpen ?\n                <>\n                    {searchStore.currentObject?.links?.entrances ? <BottomInfo onClick={() => showEntrance()}>\n                        <EntranceIcon/>\n                        <BottomText style={{\n                            color: \"#23B064\"\n                        }}>Show entrance on map</BottomText>\n                    </BottomInfo> : null}\n                    {searchStore.currentObject?.schedule ? <BottomInfo>\n                        <WorkTimeIcon/>\n                        <BottomText>{`Daily ${workingTime[0]} — \n                        ${workingTime[1]} Open`}</BottomText>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Phone) ? <BottomInfo>\n                        <PhoneIcon/>\n                        <div style={{\n                            width: \"100%\",\n                        }}>\n                            {Contacts(ContactTypes.Phone)}\n                        </div>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Website) ? <BottomInfo>\n                        <InternetIcon/>\n                        <div>\n                            {Contacts(ContactTypes.Website)}\n                            <SocialNetworkIconsContainer>\n                                {contactTypeChecker(ContactTypes.Instagram) ? <InstagramIcon onClick={() => shareData({type: PostMessageTypeEnum.URL, data: instagramLink})}/> : null}\n                                {contactTypeChecker(ContactTypes.Facebook) ? <FacebookIcon onClick={() => shareData({type: PostMessageTypeEnum.URL, data: facebookLink})}/> : null}\n                            </SocialNetworkIconsContainer>\n                        </div>\n                    </BottomInfo> : null}\n                    {!!searchStore.currentObject?.links?.branches?.count ? <>\n                        <div>\n                            <Divider style={{\n                                height: \"2px\",\n                            }}/>\n                            <Title>other companies</Title>\n                            <BottomInfo style={{\n                                width: \"100%\",\n                                borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                                margin: \"18px 0 6px 0\",\n                            }}>\n                                <BuildingsIcon/>\n                                <div style={{\n                                    width: \"100%\",\n                                }}>\n                                    {searchStore.branchesInBuilding.result.items.slice(0, 5).map((item: any) => {\n                                        return (\n                                            <CompanyContainer key={item.id} onClick={() => {\n                                                openCompanyCard(item.id);\n                                            }}>\n                                                <BottomText>{item.name}</BottomText>\n                                                <ArrowRightIcon/>\n                                            </CompanyContainer>\n                                        );\n                                    })}\n                                </div>\n                            </BottomInfo>\n                        </div>\n                        <AllBranchesContainer onClick={() => {\n                            setCompaniesListIsOpen(true);\n                            setSwipeIsOpen(false);\n                        }}>\n                            <BranchesTitle>All companies</BranchesTitle>\n                            <BranchesCount>\n                                <div style={{\n                                    margin: \"0 8px\"\n                                }}>{searchStore.currentObject?.links?.branches?.count}</div>\n                                <ArrowDownIcon/>\n                            </BranchesCount>\n                        </AllBranchesContainer>\n                        </> : null}\n                    <Title>categories</Title>\n                    {searchStore.currentObject?.rubrics ? <CategoriesContainer>\n                        {searchStore.currentObject.rubrics.map((item) => {\n                            return (\n                                <CategoriesItem key={item.id}>\n                                    <CategoriesItemText>{item.name}</CategoriesItemText>\n                                </CategoriesItem>\n                            )\n                        })}\n                    </CategoriesContainer> : null}\n                </> : null}\n        </div>\n    );\n}\n","import styled from \"styled-components\";\nimport Check from \"assets/images/check.svg\";\nimport { useEffect, useState } from \"react\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst DirectionCardWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 52;\n  width: 100%;\n  height: 220px;\n  text-align: center;\n`;\n\nconst DirectionButtonsWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: 10px 16px 0 16px;\n  margin-bottom: 24px;\n`;\n\nconst DirectionButton = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 50% 50;\n  padding: 9px;\n`;\n\nconst RouteTime = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst Distance = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst LetsGoButton = styled.button`\n  width: 315px;\n  height: 48px;\n  background: #23b064;\n  border-radius: 12px;\n  margin-bottom: 10px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst DirectionsLength = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst CheckIcon = styled.div`\n  background-image: url(${Check});\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100%;\n  height: 20px;\n`;\n\nenum DirectionType {\n  faster = \"jam\",\n  shorter = \"shortest\",\n}\n\ninterface DirectionCardProps {\n  directionsStore: DirectionsStore;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n}\n\nexport const DirectionCard = observer(\n  ({ directionsStore, searchStore, mapglStore }: DirectionCardProps) => {\n    const [selectedDirection, setSelectedDirection] = useState(\n      DirectionType.faster\n    );\n\n    const [faster, setFaster] = useState<any>(null);\n    const [shortest, setShortest] = useState<any>(null);\n\n    const buildDirection = (endPoint: number[], type: string): Promise<any> => {\n      return directionsStore.buildDirection(endPoint, type);\n    };\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        buildDirection(\n          [\n            searchStore.currentObject.point.lon,\n            searchStore.currentObject.point.lat,\n          ],\n          selectedDirection\n        ).then((res) => {\n          searchStore.currentObject &&\n            directionsStore\n              .getDirection(\n                [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.faster\n              )\n              .then((res) => {\n                setFaster(res.data[0]);\n              });\n\n          searchStore.currentObject &&\n            directionsStore\n              .getDirection(\n                [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.shorter\n              )\n              .then((res) => {\n                setShortest(res.data[0]);\n              });\n        });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedDirection, directionsStore, searchStore.currentObject]);\n\n    return (\n      <DirectionCardWrapper>\n        <DirectionButtonsWrapper>\n          <DirectionButton\n            onClick={() => {\n              mapglStore.destroyPolygon();\n              mapglStore.destroyMarkers();\n              mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.faster);\n            }}\n            style={\n              selectedDirection === DirectionType.faster\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(shortest?.duration / 60).toFixed(1)} min</RouteTime>\n            <CheckIcon />\n            <Distance>{(shortest?.distance / 1000).toFixed(1)} km</Distance>\n            <div>shorter </div>\n          </DirectionButton>\n          <DirectionButton\n            onClick={() => {\n              mapglStore.destroyPolygon();\n              mapglStore.destroyMarkers();\n              mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.shorter);\n            }}\n            style={\n              selectedDirection === DirectionType.shorter\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(faster?.duration / 60).toFixed(1)} min</RouteTime>\n            <div></div>\n            <Distance>{(faster?.distance / 1000).toFixed(1)} km</Distance>\n            <div>faster </div>\n          </DirectionButton>\n        </DirectionButtonsWrapper>\n        <LetsGoButton>Let`s go</LetsGoButton>\n        <DirectionsLength>You have 28 routes left</DirectionsLength>\n      </DirectionCardWrapper>\n    );\n  }\n);\n","import {FC, useState} from \"react\";\nimport {SearchStore} from \"stores/SearchStore\";\nimport Swipe from \"react-easy-swipe\";\nimport {Places} from \"../assets/data/places\";\nimport {CompaniesList} from \"./CompaniesList\";\nimport {ResponseObjectTypes} from \"../enums/ResponseObjectTypes.enum\";\nimport {BuildingCard} from \"./BuildingCard\";\nimport {AdministrativeDivisionCard} from \"./AdministarativeDivisionCard\";\nimport {\n    ArrowDownIcon,\n    Divider,\n    IconButton,\n    IconButtonContainer,\n    PlaceInfo,\n    PlaceInfoWrapper,\n    PlaceTitle,\n    ShareIcon,\n    SwipeIndicator,\n    UpperInfo,\n    Wrapper\n} from \"../styles/cardStyles\";\nimport {OrganizationCart} from \"./OrganizationCart\";\nimport {observer} from \"mobx-react\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface ObjectCardProps {\n    searchStore: SearchStore;\n    mapglStore: MapglStore;\n    routTime?: string;\n    setIsDirectionCard: (value: boolean) => void;\n}\n\nexport const ObjectCard: FC<ObjectCardProps> = observer(\n  ({\n    searchStore,\n    mapglStore,\n    routTime,\n    setIsDirectionCard,\n  }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isCompaniesListOpen, setCompaniesListIsOpen] = useState(false);\n\n    const shareData = (data: PostMessageData) => {\n        console.log(data.data)\n      window.ReactNativeWebView &&\n        window.ReactNativeWebView.postMessage(JSON.stringify(data));\n    };\n\n    const canBeSwiped =\n      searchStore.currentObject?.type === ResponseObjectTypes.branch ||\n      searchStore.currentObject?.type === ResponseObjectTypes.building;\n\n    const setType = (type?: string) => {\n      for (let item of Places) {\n        if (type === item.type) {\n          return item.title;\n        }\n      }\n      return \"\";\n    };\n\n    const cardHeight = searchStore.currentObject?.floors || searchStore.currentObject?.links?.branches?.count ? \"28%\" : \"21%\"\n\n    return (\n      <>\n        <Wrapper\n          style={{\n            display: searchStore.currentObject ? \"flex\" : \"none\",\n            height: isOpen ? \"95%\" : cardHeight,\n          }}\n        >\n          <Swipe\n            onSwipeUp={() => {\n              setIsOpen(canBeSwiped);\n            }}\n            onSwipeDown={() => {\n              setIsOpen(false);\n            }}\n          >\n            <IconButtonContainer\n              onClick={() => {\n                setIsDirectionCard(true);\n              }}\n            >\n              <IconButton\n                style={{\n                  top: isOpen ? \"75vh\" : \"-35px\",\n                  transition: \"top 0.3s\",\n                }}\n              />\n            </IconButtonContainer>\n            {canBeSwiped ? <SwipeIndicator /> : null}\n            <UpperInfo\n              style={{\n                flexDirection: isOpen ? \"row\" : \"column\",\n                justifyContent: isOpen ? \"space-around\" : \"\",\n                alignItems: isOpen ? \"center\" : \"\",\n              }}\n            >\n              {isOpen ? (\n                <ArrowDownIcon onClick={() => setIsOpen(false)} />\n              ) : null}\n              <PlaceTitle>\n                {searchStore.currentObject?.name\n                  ? searchStore.currentObject?.name\n                  : \"Utility structure\"}\n              </PlaceTitle>\n              {!isOpen ? (\n                <PlaceInfoWrapper>\n                  <PlaceInfo>\n                    {searchStore.currentObject?.subtype ||\n                      searchStore.currentObject?.purpose_name ||\n                      setType(searchStore.currentObject?.type)}\n                  </PlaceInfo>\n                  <PlaceInfo>{routTime}</PlaceInfo>\n                </PlaceInfoWrapper>\n              ) : (\n                <ShareIcon\n                  onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ?\n                          searchStore.currentObject.type === ResponseObjectTypes.building ? searchStore.currentObject?.address.building_id : searchStore.currentObject.id\n                          : \"\"})}\n                  style={{ marginLeft: \"11px\" }}\n                />\n              )}\n            </UpperInfo>\n            <Divider />\n          </Swipe>\n          {searchStore.currentObject?.type === ResponseObjectTypes.building ? (\n            <BuildingCard\n              shareData={shareData}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[searchStore.currentObject.point.lon, searchStore.currentObject.point.lat]}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.admDiv ||\n          searchStore.currentObject?.type === ResponseObjectTypes.street ? (\n            <AdministrativeDivisionCard\n              shareData={shareData}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[searchStore.currentObject.point.lon, searchStore.currentObject.point.lat]}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.branch ? (\n            <OrganizationCart\n              shareData={shareData}\n              setSwipeIsOpen={setIsOpen}\n              mapglStore={mapglStore}\n              searchStore={searchStore}\n              isSwipeOpen={isOpen}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n              coordinates={[searchStore.currentObject.point.lon, searchStore.currentObject.point.lat]}\n            />\n          ) : null}\n        </Wrapper>\n        {isCompaniesListOpen && (\n          <CompaniesList setIsOpen={setCompaniesListIsOpen} />\n        )}\n      </>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/myLocation.ff902024.svg\";","export default __webpack_public_path__ + \"static/media/location.d2150911.svg\";","import styled from \"styled-components\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Location from \"assets/images/location.svg\";\nimport GreenMarker from \"assets/images/green-marker.svg\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\n\nconst DirectionInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 144px;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StartPointWrapper = styled.div`\n  display: flex;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 10px;\n  margin-top: 40px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  border: 0;\n  margin-left: 19px;\n`;\n\nconst LocationIcon = styled.div`\n  background-image: url(${Location});\n  width: 24px;\n  height: 24px;\n`;\n\nconst LocationInputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 16px;\n  margin-top: 36px;\n  max-height: 40px;\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  top: 87px;\n  left: 90px;\n  height: 1px;\n  width: 100%;\n  background: rgba(33, 33, 33, 0.08);\n`;\n\nconst EndPointWrapper = styled.div`\n  margin-top: 42px;\n  margin-left: 44px;\n  display: flex;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst EndPoint = styled.div`\n  margin-left: 19px;\n`;\n\ninterface DirectionInputProps {\n  searchStore: SearchStore;\n  onDirectionInputBack: () => void;\n}\n\nexport const DirectionInput = observer(\n  ({ searchStore, onDirectionInputBack }: DirectionInputProps) => {\n    const backHandler = () => {\n      onDirectionInputBack();\n    };\n\n    return (\n      <DirectionInputWrapper>\n        <StartPointWrapper>\n          <BackArrowIcon onClick={backHandler} />\n          <LocationInputWrapper>\n            <LocationIcon />\n            <Input placeholder=\"Your location\" />\n          </LocationInputWrapper>\n        </StartPointWrapper>\n        <Line />\n        <EndPointWrapper>\n          <GreenMarkerIcon />\n          <EndPoint>\n            {(searchStore.currentObject?.address_name &&\n              searchStore.currentObject.address?.postcode &&\n              searchStore.currentObject.address_name +\n                \", \" +\n                searchStore.currentObject.address?.postcode) ||\n              searchStore.currentObject?.name ||\n              searchStore.currentObject?.full_name}\n          </EndPoint>\n        </EndPointWrapper>\n      </DirectionInputWrapper>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/check.534132f2.svg\";","export enum API_VERSIONS {\n    V2 = '2.0',\n    V3 = '3.0'\n}","/* eslint-disable react-hooks/exhaustive-deps */\n// @ts-ignore\nimport { useDirectionsStore, useMapglStore, useSearchStore } from \"hooks/store\";\nimport { useEffect, useRef, useState } from \"react\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nimport { SearchInput } from \"./SearchInput\";\nimport { Results } from \"./Results\";\nimport styled from \"styled-components\";\nimport { ObjectCard } from \"./ObjectsCard\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport myLocation from \"../assets/images/myLocation.svg\";\nimport { DirectionInput } from \"./DirectionInput\";\nimport { DirectionCard } from \"./DirectionCard\";\nimport React from \"react\";\nvar parse = require(\"wellknown\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Map = styled.div`\n  width: 100vh;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst MyLocationButton = styled.div`\n  position: fixed;\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  top: 55%;\n  left: 83%;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${myLocation});\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst MapWrapper = React.memo(\n  () => {\n    return <Map id=\"container\"></Map>;\n  },\n  () => true\n);\n\nexport const Mapgl = () => {\n  const mapglStore = useMapglStore();\n  const searchStore = useSearchStore();\n  const directionsStore = useDirectionsStore();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [mapgl, setMapgl] = useState<mapglTypes.Map | null>(null);\n  const [isObjectCardOpen, setIsObjectCardOpen] = useState(false);\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isDirectionCard, setIsDirectionCard] = useState(false);\n  const [isResultsOpen, setIsResultsOpen] = useState(true);\n\n  useEffect((): (() => void) => {\n    mapglStore.loadMapglAPI().then(() => {\n      setMapgl(\n        mapglStore.loadMapgl(\"container\", {\n          center: [33.36166, 35.15753],\n          zoom: 13,\n          key: process.env.REACT_APP_TWOGIS_KEY,\n        })\n      );\n      if (mapglStore.zoomControl) {\n        mapglStore.zoomControl.getContainer().id = \"zoom\";\n        let zoomControl = document.getElementById(\"zoom\");\n        if (zoomControl) {\n          zoomControl.style.marginTop = \"70%\";\n          zoomControl.style.width = \"42px\";\n          zoomControl.style.left = \"80%\";\n\n          (zoomControl.children[0] as HTMLElement).style.width = \"100%\";\n        }\n      }\n    });\n\n    return () => mapgl && mapgl.destroy();\n  }, []);\n\n  useEffect(() => {\n    handleMapClick();\n\n    return () => {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    };\n  });\n\n  // TODO move it to store\n\n  const destroyAll = () => {\n    mapglStore.destroyPolygon();\n    mapglStore.destroyMarkers();\n    mapglStore.destroyDirection();\n    mapgl && mapgl.setSelectedObjects([]);\n  };\n\n  const handleMapClick = () => {\n    mapgl &&\n      mapgl.on(\"click\", (data: mapglTypes.MapPointerEvent) => {\n        destroyAll();\n\n        mapglStore.buildMarker({\n          coordinates: data.lngLat,\n        });\n\n        if (data.target?.id) {\n          mapgl && mapgl.setSelectedObjects([data.target?.id]);\n          searchStore.getObjectById(data.target?.id).then((res: any) => {\n            res &&\n              searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n            setIsObjectCardOpen(true);\n          });\n        } else {\n          searchStore\n            .getObjectByGeo(data.lngLat as [number, number])\n            .then((res: any) => {\n              const parsedPolygon = parse(\n                res.data.result.items[0].geometry.selection\n              );\n              mapglStore.buildPolygon(parsedPolygon.coordinates);\n            });\n        }\n      });\n  };\n\n  const onDirectionInputBack = () => {\n    setIsObjectCardOpen(true);\n    setIsDirectionCard(false);\n  };\n\n  const findMyLocation = () => {\n    mapgl?.setCenter([33.36166, 35.15753]);\n    mapgl?.setZoom(18);\n  };\n\n  return (\n    <Wrapper>\n      {isDirectionCard ? (\n        <DirectionInput\n          searchStore={searchStore}\n          onDirectionInputBack={onDirectionInputBack}\n        />\n      ) : (\n        <SearchInput\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setOpenObjectCard={setIsObjectCardOpen}\n          setIsEnterPressed={setIsEnterPressed}\n          searchInputRef={searchInputRef}\n          destroyAll={destroyAll}\n        />\n      )}\n\n      {!isObjectCardOpen && !isDirectionCard && (\n        <Results\n          searchStore={searchStore}\n          destroyAll={destroyAll}\n          mapglStore={mapglStore}\n          searchInputRef={searchInputRef}\n          setOpenObjectCard={setIsObjectCardOpen}\n          isEnterPressed={isEnterPressed}\n          isResultsOpen={isResultsOpen}\n          setIsResultsOpen={setIsResultsOpen}\n        />\n      )}\n      {isObjectCardOpen && !isDirectionCard && (\n        <ObjectCard\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          routTime={\"7 km (16 min)\"}\n          setIsDirectionCard={setIsDirectionCard}\n        />\n      )}\n      {isDirectionCard && (\n        <DirectionCard\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          searchStore={searchStore}\n        />\n      )}\n      <MapWrapper />\n      <MyLocationButton onClick={() => findMyLocation()} />\n    </Wrapper>\n  );\n};\n","import { AxiosInstance } from \"axios\";\n\nexport default class BaseAPI {\n  axios: AxiosInstance;\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n}\n","import BaseAPI from \"./base\";\n\nexport default class DirectionsAPI extends BaseAPI {\n\n    async getDirections(startPoint: number[], endPoint: number[], type: string): Promise<any> {\n        const options = {\n            points: [{\n                lon1: startPoint[0],\n                lat1: startPoint[1],\n                lon2: endPoint[0],\n                lat2: endPoint[1],\n            }],\n            type,\n            output: \"full\"\n        };\n        const res = await this.axios.post(`get_pairs/1.0/car?key=${process.env.REACT_APP_SEARCH_KEY}`, options)\n\n        return res;\n    }\n}\n","import BaseAPI from \"./base\";\nimport { API_VERSIONS } from \"./enums/api-versions.enum\";\nimport { SearchResponse } from \"./interfaces/search.interface\";\n\nexport default class SearchAPI extends BaseAPI {\n  async getSearchResults(\n    inputValue: string,\n    sortPoint: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?q=${inputValue}&sort_point=${sortPoint[0]},${sortPoint[1]}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )) as SearchResponse;\n    console.log(res)\n    return res;\n  }\n\n  async getObjectById(id: string) {\n    const res = await this.axios.get(\n        `${API_VERSIONS.V3}/items/byid?id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics&key=${process.env.REACT_APP_SEARCH_KEY}`\n      );\n    return res;\n  }\n\n  async getObjectByGeo(sortPoint: [number, number]) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/geo/search?key=${process.env.REACT_APP_SEARCH_KEY}&point=${sortPoint[0]},${sortPoint[1]}&type=adm_div.city,adm_div.region,adm_div.settlement,road,adm_div.district_area,adm_div.division,adm_div.district,street,adm_div.living_area,crossroad,building,adm_div.place,attraction,parking,poi&fields=items.locale,items.flags,search_attributes,items.adm_div,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype`\n    );\n    return res;\n  }\n\n  async getDirections(startPoint: { x: number, y: number }, endPoint: { x: number, y: number }) {\n    const res = await this.axios.post(`carrouting/6.0.0/global?key=${process.env.REACT_APP_SEARCH_KEY}`, {\n      points: [startPoint, endPoint]\n    })\n\n    return res;\n  }\n\n  async getBranchesByBuildingId(id: string) {\n    const res = await this.axios.get(\n        `${API_VERSIONS.V3}/items?building_id=${id}&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )\n    return res;\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport DirectionsAPI from \"./directions\";\nimport SearchAPI from \"./search\";\n\nexport const getClient = (): AxiosInstance => {\n    return axios.create({\n        baseURL: 'https://catalog.api.2gis.com/',\n        timeout: 3000,\n        headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }\n    });\n}\n\nexport interface API {\n    search: SearchAPI;\n    directions: DirectionsAPI;\n}\n\nconst makeApi = (client: AxiosInstance): API => {\n    return {\n        search: new SearchAPI(client),\n        directions: new DirectionsAPI(client)\n    };\n};\nexport default makeApi;","import { API } from 'api/index';\nimport makeApi, { getClient } from \"api\";\n\nexport const useApi = (): API => {\n    const client = getClient();\n    return makeApi(client);\n};\n","import React from \"react\";\nimport {RootStore} from \"stores/RootStore\";\nimport {StoreProvider} from \"contexts/StoreContext\";\nimport {Mapgl} from \"components/Mapgl\";\nimport {useApi} from \"hooks/api\";\nimport \"./style.css\";\n\nexport const App = () => {\n    return <Mapgl />\n};\n\nconst StoreWrapper: React.FC = () => {\n    const api = useApi();\n    const store = new RootStore(api);\n\n    return (\n        <StoreProvider store={store}>\n            <App/>\n        </StoreProvider>\n    );\n};\n\nexport default StoreWrapper;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreWrapper from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreWrapper/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}