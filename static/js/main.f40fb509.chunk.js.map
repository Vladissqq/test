{"version":3,"sources":["enums/ResponseObjectTypes.enum.ts","stores/DirectionsStore.ts","stores/SearchStore.ts","stores/MapglStore.ts","stores/RootStore.ts","contexts/StoreContext.tsx","hooks/store.ts","assets/images/burger.svg","assets/images/search.svg","assets/images/back-arrow.svg","assets/images/cancel.svg","components/SearchInput.tsx","assets/images/black-marker.svg","assets/images/building.svg","assets/images/branch.svg","assets/images/rubric.svg","assets/images/geo-object.svg","api/enums/api-versions.enum.ts","api/base.ts","api/search.ts","enums/PostMessageType.enum.ts","components/Results.tsx","assets/data/places.ts","assets/images/arrow-left.svg","components/CompaniesList.tsx","assets/images/green-marker.svg","assets/images/building-icon.svg","assets/images/buildings-green.svg","assets/images/arrow-right.svg","assets/images/work-time.svg","assets/images/phone.svg","assets/images/internet.svg","assets/images/arrow-down.svg","assets/images/share.svg","assets/images/icon-button.svg","assets/images/entrance.svg","assets/images/facebook.svg","assets/images/instagram.svg","styles/cardStyles.ts","components/BuildingCard.tsx","enums/ContactTypes.enum.ts","components/AdministarativeDivisionCard.tsx","components/OrganizationCart.tsx","components/DirectionCard.tsx","utils/SendData.ts","components/ObjectsCard.tsx","assets/images/myLocation.svg","assets/images/location.svg","components/DirectionInput.tsx","assets/images/check.svg","assets/images/zoom-plus.svg","assets/images/zoom-minus.svg","components/ChangeLocation.tsx","components/Mapgl.tsx","api/directions.ts","api/index.ts","hooks/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResponseObjectTypes","parse","require","DirectionsStore","rootStore","api","this","makeObservable","mapgl","directionsAPI","Directions","directionsApiKey","process","startPoint","endPoint","type","directions","getDirections","color","getDirection","then","res","parsedDirection","data","route","mapglStore","buildDirection","coordinates","destroyDirection","observable","SearchStore","searchValue","reqParams","value","idType","id","viewPoint1","viewPoint2","search","getSearchResults","searchResults","console","warn","runInAction","result","items","inputValue","sortPoint","getSearchResultsByQuery","getSuggestions","suggestionsResults","sortedItems","map","item","push","getObjectById","currentObject","getBranchesByBuildingId","branchesInBuilding","getBranchesByOrganizationId","branchesInOrganization","address","building_id","org","getObjectByGeo","action","MapglStore","load","mapglAPI","divId","options","Map","zoomControl","directionsStore","loadDirections","locationMarker","Marker","myLocation","coords","isActive","currentMarker","icon","markers","marker","polygon","destroy","Polygon","interactive","polyline","Polyline","forEach","setCenter","getZoom","zoom","setZoom","currentMarkerCoords","RootStore","searchStore","StoreContext","React","createContext","StoreProvider","children","store","Provider","useRootStore","useContext","useMapglStore","useSearchStore","SearchInputWrapper","styled","div","BurgerWrapper","BurgerIcon","Burger","SearchIcon","Search","Input","input","BackArrowIcon","BackArrow","CancelIcon","Cancel","SearchInput","searchInputRef","setOpenObjectCard","setIsEnterPressed","setIsResultsOpen","destroyAll","useState","setIsInputFocused","setInputValue","onKeyDown","event","key","current","style","justifyContent","onClick","focus","display","placeholder","onChange","setSearchValue","target","ref","onFocus","marginLeft","onBlur","API_VERSIONS","BaseAPI","axios","PostMessageTypeEnum","ID_TYPES","district","building","city","region","rubric","metarubric","SearchAPI","a","get","V3","V2","post","points","Wrapper","ItemWrapper","ResultIcon","p","TextWrapper","ItemName","ItemDescription","NotFoundWrapper","NotFoundTitle","NotFoundDescription","Results","observer","isEnterPressed","isResultsOpen","isDirectionCard","handleClick","name","setReqParams","viewPoints","getBounds","northEast","southWest","point","buildMarker","lon","lat","on","createMarkerEvent","resultItem","setCurrentObject","setIcon","setCurrentMarker","setCurrentMarkerCoords","useEffect","length","blur","onfocus","backgroundImage","branch","organization","Branch","admDiv","admDivCity","admDivCountry","admDivDistrict","admDivDistrictArea","admDivPlace","admDivRegion","admDivSettlement","Building","Rubric","GeoObject","adm_div","full_name","Places","title","Header","HeaderTitle","ArrowLeftIcon","ArrowLeft","CompanyContainer","CompanyName","CompanyAdditionalInfo","CompaniesContainer","CompanyButton","setIsOpen","address_comment","purpose_name","CompaniesList","Divider","UpperInfo","BottomInfo","PlaceTitle","PlaceInfoWrapper","PlaceInfo","BottomText","GreenMarkerIcon","GreenMarker","BuildingIcon","BuildingsIcon","Buildings","ArrowRightIcon","ArrowRight","WorkTimeIcon","WorkTime","PhoneIcon","Phone","InternetIcon","Internet","EntranceIcon","Entrance","ArrowDownIcon","ArrowDown","ShareIcon","Share","InstagramIcon","Instagram","FacebookIcon","Facebook","SocialNetworkIconsContainer","IconButtonContainer","IconButton","Button","SwipeIndicator","AdditionalInfo","Title","AllBranchesContainer","BranchesTitle","BranchesCount","CategoriesItem","CategoriesItemText","CategoriesContainer","ContactTypes","BuildingCard","isOpen","setCompaniesListIsOpen","routTime","shareData","postcode","address_name","SHARE_INFO","links","branches","count","floors","ground_count","height","width","borderBottom","alignItems","margin","AdministrativeDivisionCard","DirectionType","OrganizationCart","isSwipeOpen","setSwipeIsOpen","instagramLink","facebookLink","contactTypeChecker","contactType","contact_groups","contacts","some","Contacts","arr","contact","url","index","Website","URL","text","workingTime","setWorkingTime","days","n","Date","getDay","schedule","working_hours","from","to","getCurrentDay","flexDirection","overflow","entrances","entrance","geometry","showEntrance","parseInt","branch_count","full_address_name","rubrics","SendData","window","ReactNativeWebView","postMessage","JSON","stringify","ObjectCard","setIsDirectionCard","isCompaniesListOpen","canBeSwiped","twoGisLink","googleMapsLink","cardHeight","onSwipeUp","onSwipeDown","top","transition","subtype","setType","street","DirectionInputWrapper","StartPointWrapper","LocationIcon","Location","LocationInputWrapper","Line","EndPointWrapper","EndPoint","DirectionInput","onDirectionInputBack","DirectionCardWrapper","DirectionButtonsWrapper","DirectionButton","RouteTime","Distance","LetsGoButton","button","DirectionsLength","CheckIcon","Check","DirectionCard","currentGeolocation","faster","selectedDirection","setSelectedDirection","setFaster","shortest","setShortest","shorter","border","background","borderRadius","duration","toFixed","distance","ROUTE","latitude","longitude","ChangeLocation","setLon","setLat","position","zIndex","onSubmit","preventDefault","setLocationMarker","e","MyLocationButton","CustomButtonsWrapper","ZoomContainer","ZoomPlusButton","Plus","ZoomMinusButton","Minus","MapWrapper","memo","Mapgl","useRef","setMapgl","isObjectCardOpen","setIsObjectCardOpen","isMarkerCentered","setIsMarkerCentered","myLocationClickCount","setMyLocationClickCount","loadMapglAPI","loadMapgl","center","geolocation","useGeolocation","enableHighAccuracy","timeout","handleMapClick","off","handleZoomDebounced","handleZoom","destroyMarkers","debounce","destroyPolygon","setSelectedObjects","lngLat","parsedPolygon","selection","buildPolygon","currentZoom","backgroundColor","setTimeout","DirectionsAPI","lon1","lat1","lon2","lat2","output","makeApi","client","useApi","create","baseURL","headers","Accept","App","StoreWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f40fb509.chunk.js","sourcesContent":["export enum ResponseObjectTypes {\n    branch = 'branch',\n    building = 'building',\n    street = 'street',\n    parking = 'parking',\n    station = 'station',\n    stationMetro = 'station.metro',\n    stationEntrance = 'station_entrance',\n    stationPlatform = 'station_platform',\n    attraction = 'attraction',\n    crossroad = 'crossroad',\n    gate = 'gate',\n    road = 'road',\n    route = 'route',\n    admDiv = 'adm_div',\n    admDivCity = 'adm_div.city',\n    admDivCountry = 'adm_div.country',\n    admDivDistrictArea = 'adm_div.district_area',\n    admDivDistrict = 'adm_div.district',\n    admDivDivision = 'adm_div.division',\n    admDivLivingArea = 'adm_div.living_area',\n    admDivPlace = 'adm_div.place',\n    admDivRegion = 'adm_div.region',\n    admDivSettlement = 'adm_div.settlement',\n    coordinates = 'coordinates',\n    rubric = 'rubric',\n    metarubric = 'metarubric',\n    organization = 'org'\n}\n","import mapglTypes from \"@2gis/mapgl/types/index\";\nimport { API } from \"api/index\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { Directions } from \"@2gis/mapgl-directions\";\nvar parse = require(\"wellknown\");\n\nexport class DirectionsStore {\n    rootStore: RootStore;\n    api: API;\n\n    @observable directionsAPI: Directions | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    loadDirections(mapgl: mapglTypes.Map) {\n        this.directionsAPI = new Directions(mapgl, {\n            directionsApiKey: process.env.REACT_APP_SEARCH_KEY as string,\n        });\n    }\n\n    getDirection(startPoint: number[], endPoint: number[], type: string) {\n        return this.api.directions\n            .getDirections(startPoint, endPoint, type)\n    }\n\n    buildDirection(startPoint: number[], endPoint: number[], type: string, color: string): Promise<any> {\n        return this.getDirection(startPoint, endPoint, type).then((res) => {\n            const parsedDirection = parse(res.data[0].route);\n            if (parsedDirection) {\n                this.rootStore.mapglStore.buildDirection(parsedDirection.coordinates, color);\n            }\n            return res;\n        });\n\n    }\n\n    destroyDirection() {\n        this.rootStore.mapglStore.destroyDirection();\n    }\n}\n","import { API } from \"api/index\";\nimport { action, makeObservable, observable, runInAction, toJS } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { ResultItem, SearchResponse } from \"api/interfaces/search.interface\";\nimport { ID_TYPES } from \"api/search\";\n\nexport class SearchStore {\n  rootStore: RootStore;\n  api: API;\n  @observable searchResults: ResultItem[] = [];\n  @observable currentObject: ResultItem | null = null;\n  //TODO: Replace any with the type\n  @observable branchesInBuilding: any | null = null;\n  @observable branchesInOrganization: SearchResponse | null = null;\n  @observable suggestionsResults: any[] = [];\n  searchValue: string | null = null;\n  reqParams: [string, string] | [] = [];\n\n  constructor(rootStore: RootStore, api: API) {\n    this.rootStore = rootStore;\n    this.api = api;\n\n    makeObservable(this);\n  }\n\n  setReqParams(reqParams: [string, string]): [string, string] {\n    return this.reqParams = reqParams;\n  }\n\n  setSearchValue(value: string) {\n    this.searchValue = value;\n  }\n\n  @action\n  async getSearchResults(\n    idType: string,\n    id: number,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number]\n  ) {\n    const searchResults = await this.api.search.getSearchResults(\n      idType,\n      id,\n      viewPoint1, viewPoint2\n    );\n\n    console.warn(searchResults);\n    \n\n    runInAction(() => {\n      this.searchResults = searchResults.data?.result?.items as ResultItem[];\n    });\n\n    return searchResults.data?.result?.items || [];\n  }\n\n  @action async getSearchResultsByQuery(inputValue: string, sortPoint: [number, number]) {\n    const res = await this.api.search.getSearchResultsByQuery(inputValue, sortPoint);\n    runInAction(() => {\n      this.searchResults = res.data?.result?.items as ResultItem[] || [];\n    });\n\n    return res.data?.result?.items || [];\n  }\n\n  @action async getSuggestions(\n    inputValue: string,\n    sortPoint: [number, number]\n  ) {\n    const suggestionsResults = await this.api.search.getSuggestions(\n      inputValue,\n      sortPoint\n    );\n\n    const sortedItems: any[] = [];\n\n    if (suggestionsResults.data.result) {\n      suggestionsResults.data.result.items?.map((item: any) => {\n        if (item.type !== \"user_query\") {\n          sortedItems.push(item);\n        }\n      });\n    }\n\n    runInAction(() => {\n      this.suggestionsResults = sortedItems;\n    });\n\n    return this.suggestionsResults;\n  }\n\n  @action\n  async getObjectById(id: string) {\n    const result = await this.api.search.getObjectById(id);\n\n    runInAction(() => {\n      this.currentObject = result.data as any;\n    });\n\n    return this.currentObject;\n  }\n\n  @action\n  async getBranchesByBuildingId(id: string) {\n    const result = await this.api.search.getBranchesByBuildingId(id);\n\n    runInAction(() => {\n      this.branchesInBuilding = result.data as any;\n    });\n    return this.branchesInBuilding;\n  }\n\n  @action\n  async getBranchesByOrganizationId(id: string) {\n    const result = await this.api.search.getBranchesByOrganizationId(id);\n\n    runInAction(() => {\n      this.branchesInOrganization = result.data as any;\n    });\n    return this.branchesInBuilding;\n  }\n\n  @action setCurrentObject(item: ResultItem): ResultItem {\n    if (item && item.address) {\n      this.getBranchesByBuildingId(item.address.building_id);\n      if (item.org) {\n        this.getBranchesByOrganizationId(item.org.id);\n      }\n    }\n    return (this.currentObject = item);\n  }\n\n  // TODO: refactored this\n  getObjectByGeo(sortPoint: [number, number]): any {\n    return this.api.search.getObjectByGeo(sortPoint);\n  }\n}\n","import { action, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { load } from \"@2gis/mapgl\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nexport class MapglStore {\n  rootStore: RootStore;\n  @observable mapglAPI: typeof mapglTypes | null = null;\n  @observable mapgl: mapglTypes.Map | null = null;\n  @observable markers: mapglTypes.Marker[] | [] = [];\n  @observable polygon: mapglTypes.Polygon | null = null;\n  @observable polyline: mapglTypes.Polyline | null = null;\n  @observable currentMarkerCoords: number[] | null = null;\n  @observable currentMarker: mapglTypes.Marker | null = null;\n  @observable locationMarker: mapglTypes.Marker | null = null;\n  @observable myLocation: number[] = [33.36166, 35.15753];\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action async loadMapglAPI(): Promise<any> {\n    this.mapglAPI = await load();\n  }\n\n  @action loadMapgl(\n    divId: string,\n    options: mapglTypes.MapOptions\n  ): mapglTypes.Map | null {\n    this.mapgl = this.mapglAPI\n      ? new this.mapglAPI.Map(divId, { ...options, zoomControl: false })\n      : null;\n    this.mapgl && this.rootStore.directionsStore.loadDirections(this.mapgl);\n    return this.mapgl;\n  }\n\n  @action setLocationMarker(coordinates: number[]) {\n    if (this.mapgl && this.mapglAPI) {\n      this.locationMarker = new this.mapglAPI.Marker(this.mapgl, {\n        coordinates\n      });\n    }\n  }\n\n  @action setMyLocation(coordinates: number[]): number[] {\n    return this.myLocation = coordinates;\n  }\n\n  @action buildMarker(\n    coords: number[],\n    isActive: boolean = false\n  ): mapglTypes.Marker | null {\n    if (this.mapgl && this.mapglAPI) {\n      const currentMarker = new this.mapglAPI.Marker(this.mapgl, {\n        coordinates: coords,\n        icon: isActive ? \"./red-marker.svg\" : './marker.svg'\n      });\n      this.markers.push(currentMarker as never);\n      return currentMarker;\n    }\n    return null;\n  }\n\n  @action setCurrentMarker(marker: mapglTypes.Marker): mapglTypes.Marker {\n    return this.currentMarker = marker;\n  }\n\n  @action buildPolygon(coordinates: number[][][]) {\n    this.polygon && this.polygon.destroy();\n\n    if (this.mapglAPI && this.mapgl) {\n      this.polygon = new this.mapglAPI.Polygon(this.mapgl, {\n        coordinates: coordinates,\n        interactive: false,\n      });\n    }\n  }\n\n  @action buildDirection(coordinates: number[][], color: string) {\n    this.destroyDirection();\n    if (this.mapglAPI && this.mapgl) {\n      this.polyline = new this.mapglAPI.Polyline(this.mapgl, {\n        coordinates: coordinates,\n        color\n      })\n    }\n  }\n\n  @action destroyDirection() {\n    this.polyline?.destroy();\n    this.polyline = null;\n  }\n\n  @action destroyPolygon() {\n    this.polygon?.destroy();\n    this.polygon = null;\n  }\n\n  @action destroyMarkers() {\n    this.markers.forEach(marker => {\n      marker.destroy();\n    });\n    this.markers = []\n  }\n\n  setCenter(coordinates: [number, number]) {\n    this.mapgl?.setCenter(coordinates);\n  }\n\n  getZoom(): number | undefined {\n    return this.mapgl?.getZoom();\n  }\n\n  setZoom(zoom: number) {\n    this.mapgl?.setZoom(zoom);\n  }\n\n  @action setCurrentMarkerCoords(coords: number[]): number[] {\n    return this.currentMarkerCoords = coords;\n  }\n}\n","import { DirectionsStore } from './DirectionsStore';\nimport { SearchStore } from './SearchStore';\nimport { MapglStore } from \"./MapglStore\";\nimport { API } from 'api';\n\nexport class RootStore {\n  api: API;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  directionsStore: DirectionsStore;\n\n\n  constructor(api: API) {\n    this.api = api;\n    this.mapglStore = new MapglStore(this);\n    this.searchStore = new SearchStore(this, api);\n    this.directionsStore = new DirectionsStore(this, api);\n  }\n}\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\n\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\n\nexport type StoreComponent = React.FC<{\n  store: RootStore;\n  children: React.ReactNode;\n}>;\n\nexport const StoreProvider: StoreComponent = ({\n  children,\n  store,\n}): React.ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"contexts/StoreContext\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const useRootStore = (): RootStore => useContext(StoreContext);\n\nexport const useMapglStore = () => {\n    const { mapglStore } = useRootStore();\n    return mapglStore;\n};\n\nexport const useSearchStore = () => {\n    const { searchStore } = useRootStore();\n    return searchStore;\n};\n\nexport const useDirectionsStore = () => {\n    const { directionsStore } = useRootStore();\n    return directionsStore;\n};","export default __webpack_public_path__ + \"static/media/burger.e78eec97.svg\";","export default __webpack_public_path__ + \"static/media/search.7e6201e0.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.ecccce44.svg\";","export default __webpack_public_path__ + \"static/media/cancel.140bb64c.svg\";","import Burger from \"assets/images/burger.svg\";\nimport Search from \"assets/images/search.svg\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Cancel from \"assets/images/cancel.svg\";\nimport { useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 95%;\n  height: 48px;\n  background: #ffffff;\n  border-radius: 30px;\n  border: #fffff;\n  display: flex;\n  margin: 0 auto;\n  margin-top: 50px;\n  left: 0;\n  right: 0;\n  margin-top: 50px;\n`;\n\nconst BurgerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 40px;\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 20px;\n  margin: 4px;\n`;\n\nconst BurgerIcon = styled.div`\n  background-image: url(${Burger});\n  width: 18px;\n  height: 12px;\n`;\n\nconst SearchIcon = styled.div`\n  background-image: url(${Search});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  margin-left: 27px;\n  margin-top: 10px;\n  border: 0;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst CancelIcon = styled.div`\n  background-image: url(${Cancel});\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  margin-top: 17px;\n`;\n\ninterface SeacrhInputProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n  setIsResultsOpen: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  destroyAll: () => void;\n}\n\nexport const SearchInput = ({\n  searchStore,\n  mapglStore,\n  searchInputRef,\n  setOpenObjectCard,\n  setIsEnterPressed,\n  setIsResultsOpen,\n  destroyAll,\n}: SeacrhInputProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (searchInputRef.current?.value) {\n      searchInputRef.current && setInputValue(searchInputRef.current?.value);\n      searchStore.setSearchValue(searchInputRef.current?.value);\n    }\n\n    searchStore.getSuggestions(\n      event.target.value,\n      mapglStore.myLocation as [number, number]\n    );\n  };\n\n  return (\n    <SearchInputWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          if (searchInputRef.current?.value) {\n            searchStore\n              .getSearchResultsByQuery(\n                searchInputRef.current?.value,\n                mapglStore.myLocation as [number, number]\n              )\n              .then(() => {\n                setIsEnterPressed(true);\n              });\n          }\n        } else {\n          setIsEnterPressed(false);\n        }\n      }}\n      style={{\n        justifyContent: inputValue ? \"space-around\" : \"\",\n      }}\n      onClick={() => {\n        searchInputRef.current && searchInputRef.current.focus();\n      }}\n    >\n      {inputValue === \"\" && (\n        <BurgerWrapper>\n          <BurgerIcon></BurgerIcon>\n        </BurgerWrapper>\n      )}\n      {inputValue === \"\" && <SearchIcon></SearchIcon>}\n      <div style={{ display: \"flex\" }}>\n        {inputValue && (\n          <BackArrowIcon\n            onClick={() => {\n              if (searchInputRef?.current?.value && searchStore.searchValue) {\n                searchInputRef.current.value = searchStore.searchValue;\n              }\n              setOpenObjectCard(false);\n            }}\n          />\n        )}\n        <Input\n          placeholder=\"Search\"\n          onChange={handleChange}\n          ref={searchInputRef}\n          onFocus={() => {\n            setIsInputFocused(true);\n            setIsResultsOpen(true);\n            setOpenObjectCard(false);\n            setIsEnterPressed(false);\n            destroyAll();\n          }}\n          style={{\n            marginLeft: inputValue ? \"24px\" : \"27px\",\n          }}\n          onBlur={() => setIsInputFocused(false)}\n        ></Input>\n      </div>\n      {inputValue && (\n        <CancelIcon\n          onClick={() => {\n            if (searchInputRef.current?.value) {\n              searchInputRef.current.value = \"\";\n              destroyAll();\n              setOpenObjectCard(false);\n              setIsResultsOpen(false);\n            }\n          }}\n        />\n      )}\n    </SearchInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/black-marker.953d3c77.svg\";","export default __webpack_public_path__ + \"static/media/building.33b84d52.svg\";","export default __webpack_public_path__ + \"static/media/branch.267d7457.svg\";","export default __webpack_public_path__ + \"static/media/rubric.6ae348e4.svg\";","export default __webpack_public_path__ + \"static/media/geo-object.ccba00f5.svg\";","export enum API_VERSIONS {\n    V2 = '2.0',\n    V3 = '3.0'\n}","import { AxiosInstance } from \"axios\";\n\nexport default class BaseAPI {\n  axios: AxiosInstance;\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n}\n","import BaseAPI from \"./base\";\nimport { API_VERSIONS } from \"./enums/api-versions.enum\";\nimport { SearchResponse } from \"./interfaces/search.interface\";\n\nexport const ID_TYPES: any = {\n  district: 'district_id',\n  building: 'building_id',\n  city: 'city_id',\n  region: 'region_id',\n  rubric: 'rubric_id',\n  metarubric: 'rubric_id',\n  org: \"org_id\",\n  id: \"id\"\n}\n\nexport default class SearchAPI extends BaseAPI {\n  async getSearchResults(\n    idType: string,\n    id: number,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?page=1&page_size=12&${idType}=${id}&viewpoint1=${viewPoint2[0]},${viewPoint1[1]}&viewpoint2=${viewPoint1[0]},${viewPoint2[1]}&fields=items.locale,items.flags,search_attributes,items.adm_div,items.city_alias,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.for_trucks,items.is_incentive,items.paving_type,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype,filters,widgets&key=${process.env.REACT_APP_SEARCH_KEY}&locale=en_CY`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getSearchResultsByQuery(\n    inputValue: string,\n    sortPoint: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?q=${inputValue}&sort_point=${sortPoint[0]},${sortPoint[1]}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org&page_size=50&radius=10000&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getSuggestions(inputValue: string,\n    sortPoint: [number, number]): Promise<any> {\n    const res = this.axios\n      .get(\n        `${API_VERSIONS.V3}/suggests?key=${process.env.REACT_APP_SEARCH_KEY}&q=${inputValue}&sort_point=${sortPoint[0]},${sortPoint[1]}&page_size=100&fields=items.name_ex,items.address,items.full_address_name,items.rubrics,items.org,items.adm_div,items.routes,items.type,items.subtype,items.address,items.search_attributes.personal_priority,items.search_attributes.dgis_source_type,items.segment_id,items.region_id,items.locale,items.group,items.context,search_attributes,items.flags,items.has_exchange&type=adm_div.region,adm_div.district_area,adm_div.city,adm_div.settlement,adm_div.district,adm_div.living_area,adm_div.division,adm_div.place,street,branch,building,road,attraction,crossroad,route,route_type,station,station.metro,user_queries,attribute,rubric,meta_rubric,org,market.category,market.attribute,market.suggestor_category`\n      )\n\n    return res;\n  }\n\n  async getObjectById(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items/byid?id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org&key=${process.env.REACT_APP_SEARCH_KEY}`\n    );\n    return res;\n  }\n\n  async getObjectByGeo(sortPoint: [number, number]) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/geo/search?key=${process.env.REACT_APP_SEARCH_KEY}&point=${sortPoint[0]},${sortPoint[1]}&type=adm_div.city,adm_div.region,adm_div.settlement,road,adm_div.district_area,adm_div.division,adm_div.district,street,adm_div.living_area,crossroad,building,adm_div.place,attraction,parking,poi&fields=items.locale,items.flags,search_attributes,items.adm_div,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype`\n    );\n    return res;\n  }\n\n  async getDirections(startPoint: { x: number, y: number }, endPoint: { x: number, y: number }) {\n    const res = await this.axios.post(`carrouting/6.0.0/global?key=${process.env.REACT_APP_SEARCH_KEY}`, {\n      points: [startPoint, endPoint]\n    })\n\n    return res;\n  }\n\n  async getBranchesByBuildingId(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items?building_id=${id}&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )\n    return res;\n  }\n\n  async getBranchesByOrganizationId(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/catalog/branch/list?org_id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org,items.full_address_name&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )\n    return res;\n  }\n}\n","export enum PostMessageTypeEnum {\n    URL = 'url',\n    ROUTE = 'route',\n    SHARE_INFO = 'share_info',\n}\n","import Marker from \"assets/images/black-marker.svg\";\nimport Building from \"assets/images/building.svg\";\nimport Branch from \"assets/images/branch.svg\";\nimport Rubric from \"assets/images/rubric.svg\";\nimport GeoObject from \"assets/images/geo-object.svg\";\nimport { ResponseObjectTypes } from \"enums/ResponseObjectTypes.enum\";\nimport { observer } from \"mobx-react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport { useEffect } from \"react\";\nimport { ID_TYPES } from \"api/search\";\nimport { toJS } from \"mobx\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  position: absolute;\n  top: 120px;\n  z-index: 60;\n  width: 100%;\n  height: 1000px;\n  border-radius: 20px 20px 0px 0px;\n  overflow: scroll;\n`;\n\nconst ItemWrapper = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  border-top: 3px solid #fafafafa;\n`;\n\nconst ResultIcon = styled.p`\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-left: 22px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemName = styled.div`\n  margin-left: 29px;\n`;\n\nconst ItemDescription = styled.div`\n  margin-left: 29px;\n  color: rgba(0, 0, 0, 0.6);\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  font-size: 14px;\n`;\n\nconst NotFoundWrapper = styled.div`\n  margin-left: 16px;\n  margin-top: 39px;\n`;\n\nconst NotFoundTitle = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #000000;\n`;\n\nconst NotFoundDescription = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #000000;\n`;\n\ninterface ResultsProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  isEnterPressed: boolean;\n  destroyAll: () => void;\n  isResultsOpen: boolean;\n  setIsResultsOpen: (val: boolean) => void;\n  isDirectionCard: boolean;\n}\n\nexport const Results = observer(\n  ({\n    searchStore,\n    setOpenObjectCard,\n    mapglStore,\n    searchInputRef,\n    isEnterPressed,\n    destroyAll,\n    isResultsOpen,\n    setIsResultsOpen,\n    isDirectionCard,\n  }: ResultsProps) => {\n    const getIcon = (type: ResponseObjectTypes) => {\n      if (\n        type === ResponseObjectTypes.branch ||\n        type === ResponseObjectTypes.organization\n      ) {\n        return Branch;\n      } else if (\n        type === ResponseObjectTypes.admDiv ||\n        type === ResponseObjectTypes.admDivCity ||\n        type === ResponseObjectTypes.admDivCountry ||\n        type === ResponseObjectTypes.admDivDistrict ||\n        type === ResponseObjectTypes.admDivDistrictArea ||\n        type === ResponseObjectTypes.admDivPlace ||\n        type === ResponseObjectTypes.admDivRegion ||\n        type === ResponseObjectTypes.admDivSettlement\n      ) {\n        return Marker;\n      } else if (type === ResponseObjectTypes.building) {\n        return Building;\n      } else if (\n        type === ResponseObjectTypes.metarubric ||\n        type === ResponseObjectTypes.rubric\n      ) {\n        return Rubric;\n      } else {\n        return GeoObject;\n      }\n    };\n\n    const formatName = (name: string) => {\n      const MAX_NAME_LENGTH = 40;\n      const length = name.split(\"\").length;\n      return length >= MAX_NAME_LENGTH\n        ? name.slice(0, MAX_NAME_LENGTH) + \"...\"\n        : name;\n    };\n\n    const handleClick = async (item: any) => {\n      destroyAll();\n\n      if (searchInputRef.current) {\n        searchInputRef.current.value = item.name;\n      }\n\n      if (\n        item.type === \"rubric\" ||\n        item.type === \"metarubric\" ||\n        item.type === \"org\"\n      ) {\n        const reqParams = [ID_TYPES[item.type], item.id];\n\n        searchStore.setReqParams(reqParams as [string, string]);\n\n        const viewPoints = mapglStore.mapgl?.getBounds();\n\n        const res = await searchStore.getSearchResults(\n          reqParams[0],\n          reqParams[1],\n          viewPoints?.northEast as [number, number],\n          viewPoints?.southWest as [number, number]\n        );\n\n        res.map((item: any) => {\n          if (item.point) {\n            const marker = mapglStore.buildMarker([\n              item.point.lon,\n              item.point.lat,\n            ]);\n            marker?.on(\"click\", () => {\n              createMarkerEvent(marker, item);\n            });\n          }\n        });\n        setIsResultsOpen(false);\n        // TODO fix types\n      } else {\n        const res: any = await searchStore.getObjectById(item.id);\n        const resultItem: ResultItem = res.result?.items[0];\n\n        searchStore.setCurrentObject(resultItem);\n        mapglStore.buildMarker([resultItem.point.lon, resultItem.point.lat]);\n        // mapglStore.setCenter([resultItem.point.lon, resultItem.point.lat]);\n        setOpenObjectCard(true);\n      }\n    };\n\n    const createMarkerEvent = (marker: mapglTypes.Marker, item: ResultItem) => {\n      if (!isDirectionCard) {\n        mapglStore.currentMarker &&\n          mapglStore.currentMarker.setIcon({ icon: \"./marker.svg\" });\n        mapglStore.setCurrentMarker(marker);\n        marker.setIcon({ icon: \"./red-marker.svg\" });\n        searchStore.setCurrentObject(item);\n        setOpenObjectCard(true);\n        mapglStore.setCurrentMarkerCoords([item.point.lon, item.point.lat]);\n        // mapglStore.setCenter([item.point.lon, item.point.lat]);\n      }\n    };\n\n    useEffect(() => {\n      if (isEnterPressed && searchStore.searchResults.length) {\n        searchStore.searchResults.map((item: ResultItem) => {\n          const marker =\n            item?.point &&\n            mapglStore.buildMarker([item.point.lon, item.point.lat]);\n\n          marker?.on(\"click\", () => {\n            createMarkerEvent(marker, item);\n          });\n        });\n        setIsResultsOpen(false);\n        searchInputRef.current?.blur();\n      }\n    }, [isEnterPressed]);\n\n    useEffect(() => {\n      if (!isResultsOpen && searchInputRef.current?.onfocus) {\n        searchInputRef.current.onfocus = () => {\n          !isResultsOpen && setIsResultsOpen(true);\n        };\n      }\n    }, [isResultsOpen, searchInputRef]);\n    return (\n      <>\n        {isResultsOpen && (\n          <Wrapper\n            style={{\n              display: searchInputRef?.current?.value ? \"flex\" : \"none\",\n            }}\n          >\n            {searchStore.suggestionsResults.map((item: any) => {\n              return (\n                <ItemWrapper key={item.id} onClick={() => handleClick(item)}>\n                  <ResultIcon\n                    style={{\n                      backgroundImage: `url(${getIcon(item.type)})`,\n                    }}\n                  ></ResultIcon>\n                  <TextWrapper>\n                    <ItemName>{item?.name}</ItemName>\n                    <ItemDescription>\n                      {item?.type +\n                        \", \" +\n                        (item?.adm_div?.length &&\n                          item?.adm_div[item.adm_div?.length - 1].name) ||\n                        item?.full_name}\n                    </ItemDescription>\n                  </TextWrapper>\n                </ItemWrapper>\n              );\n            })}\n            {isEnterPressed && (\n              //  && searchStore.searchResults?.meta.code === 404 &&\n              <NotFoundWrapper>\n                <NotFoundTitle>No Results Found</NotFoundTitle>\n                <NotFoundDescription>\n                  Try searching for something else, check for typos or rephrase\n                  it\n                </NotFoundDescription>\n              </NotFoundWrapper>\n            )}\n          </Wrapper>\n        )}\n      </>\n    );\n  }\n);\n","export const Places = [\n    {title: 'Company', type: 'branch'},\n    {title: 'Building', type: 'building'},\n    {title: 'Street', type: 'street'},\n    {title: 'Parking', type: 'parking'},\n    {title: 'Station', type: 'station'},\n    {title: 'Attraction', type: 'attraction'},\n    {title: 'Crossroad', type: 'crossroad'},\n    {title: 'Gate', type: 'gate'},\n    {title: 'Road', type: 'road'},\n    {title: 'Route', type: 'route'},\n    {title: 'Administrative Division', type: 'adm_div'},\n    {title: 'City', type: 'adm_div.city'},\n    {title: 'Country', type: 'adm_div.country'},\n    {title: 'District Area', type: 'adm_div.district_area'},\n    {title: 'District', type: 'adm_div.district'},\n    {title: 'Division', type: 'adm_div.division'},\n    {title: 'Living Area', type: 'adm_div.living_area'},\n    {title: 'Place', type: 'adm_div.place'},\n    {title: 'Region', type: 'adm_div.region'},\n    {title: 'Settlement', type: 'adm_div.settlement'},\n    {title: 'Coordinates', type: 'coordinates'},\n]\n","export default __webpack_public_path__ + \"static/media/arrow-left.5503f9f6.svg\";","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"assets/images/arrow-left.svg\";\nimport {useMapglStore, useSearchStore} from \"../hooks/store\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {ResultItem} from \"../api/interfaces/search.interface\";\nimport {MapglStore} from \"../stores/MapglStore\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: absolute;\n  z-index: 900;\n  background-color: #ffffff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 375px;\n  height: 64px;\n  margin-top: 10px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst HeaderTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst ArrowLeftIcon = styled.p`\n  background-image: url(${ArrowLeft});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin: 0 32px;\n`;\n\nconst CompanyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  height: 64px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst CompanyName = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-left: 16px;\n`;\n\nconst CompanyAdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-left: 16px;\n`;\n\nconst CompaniesContainer = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: scroll;\n`;\n\ninterface CompanyButton {\n    setIsOpen: (arg0: boolean) => void;\n    searchStore: SearchStore;\n    item: ResultItem;\n    mapglStore: MapglStore\n}\n\nconst CompanyButton: FC<CompanyButton> = ({setIsOpen, searchStore, item, mapglStore}) => {\n    const openCompanyCard = () => {\n        searchStore.getObjectById(item.id).then((res: any) => {\n            res &&\n            searchStore.setCurrentObject(res.result?.items[0]);\n            setIsOpen(false);\n        });\n    }\n    return (\n        <CompanyContainer onClick={() => openCompanyCard()}>\n            <CompanyName>{`${item.name}`}</CompanyName>\n            <CompanyAdditionalInfo>{`${item.address_comment || item.purpose_name}`}</CompanyAdditionalInfo>\n        </CompanyContainer>\n    );\n};\n\ninterface CompaniesListProps {\n    setIsOpen: (arg0: boolean) => void;\n}\n\nexport const CompaniesList: FC<CompaniesListProps> = ({setIsOpen}) => {\n    const searchStore = useSearchStore();\n    const mapglStore = useMapglStore();\n    return (\n        <Wrapper>\n            <Header>\n                <ArrowLeftIcon onClick={() => setIsOpen(false)}/>\n                <HeaderTitle>Companies</HeaderTitle>\n            </Header>\n            <CompaniesContainer>\n                {searchStore.branchesInBuilding.result.items.map((item: any) => (\n                    <CompanyButton key={item.id} item={item} setIsOpen={setIsOpen} searchStore={searchStore}\n                                   mapglStore={mapglStore}/>))}\n            </CompaniesContainer>\n        </Wrapper>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/green-marker.30aab809.svg\";","export default __webpack_public_path__ + \"static/media/building-icon.ba15730a.svg\";","export default __webpack_public_path__ + \"static/media/buildings-green.d86a6822.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.a70d4ef3.svg\";","export default __webpack_public_path__ + \"static/media/work-time.056843a8.svg\";","export default __webpack_public_path__ + \"static/media/phone.0d461ee9.svg\";","export default __webpack_public_path__ + \"static/media/internet.dab33b8c.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.cc14feef.svg\";","export default __webpack_public_path__ + \"static/media/share.4a856fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-button.510f85c7.svg\";","export default __webpack_public_path__ + \"static/media/entrance.4362b935.svg\";","export default __webpack_public_path__ + \"static/media/facebook.5e19df6c.svg\";","export default __webpack_public_path__ + \"static/media/instagram.a062d315.svg\";","import styled from \"styled-components\";\nimport GreenMarker from \"../assets/images/green-marker.svg\";\nimport Building from \"../assets/images/building-icon.svg\";\nimport Buildings from \"../assets/images/buildings-green.svg\";\nimport ArrowRight from \"../assets/images/arrow-right.svg\";\nimport WorkTime from \"../assets/images/work-time.svg\";\nimport Phone from \"../assets/images/phone.svg\";\nimport Internet from \"../assets/images/internet.svg\";\nimport ArrowDown from \"../assets/images/arrow-down.svg\";\nimport Share from \"../assets/images/share.svg\";\nimport Button from \"../assets/images/icon-button.svg\";\nimport Entrance from \"../assets/images/entrance.svg\";\nimport Facebook from \"../assets/images/facebook.svg\";\nimport Instagram from \"../assets/images/instagram.svg\";\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  justify-content: flex-start;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  border-radius: 20px 20px 0px 0px;\n  transition-property: height;\n  transition-duration: 0.3s;\n  z-index: 60;\n`;\n\nexport const Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: rgba(33, 33, 33, 0.08);\n`;\n\nexport const UpperInfo = styled.div`\n  display: flex;\n  margin: 9px 24px 11px 24px;\n`;\n\nexport const BottomInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 18px 24px;\n`;\n\nexport const PlaceTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  margin-bottom: 1px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 250px\n`;\n\nexport const PlaceInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const PlaceInfo = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const BottomText = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 68%;\n  margin-right: 11px;\n`;\n\nexport const GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-right: 16px;\n`;\n\nexport const BuildingIcon = styled.p`\n  background-image: url(${Building});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const BuildingsIcon = styled.p`\n  background-image: url(${Buildings});\n  height: 19px;\n  width: 22px;\n  margin-right: 16px;\n  margin-left: 27px;\n  margin-bottom: 7%;\n`;\n\nexport const ArrowRightIcon = styled.p`\n  background-image: url(${ArrowRight});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin-right: 24px;\n`;\n\nexport const WorkTimeIcon = styled.p`\n  background-image: url(${WorkTime});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const PhoneIcon = styled.p`\n  background-image: url(${Phone});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const InternetIcon = styled.p`\n  background-image: url(${Internet});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const EntranceIcon = styled.p`\n  background-image: url(${Entrance});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const ArrowDownIcon = styled.p`\n  background-image: url(${ArrowDown});\n  background-repeat: no-repeat;\n  width: 14px;\n  height: 12px;\n  margin-right: 28px;\n`;\n\nexport const ShareIcon = styled.p`\n  background-image: url(${Share});\n  height: 18px;\n  width: 18px;\n`;\n\nexport const InstagramIcon = styled.p`\n  background-image: url(${Instagram});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const FacebookIcon = styled.p`\n  background-image: url(${Facebook});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const SocialNetworkIconsContainer = styled.div`\ndisplay: flex;\n`;\n\nexport const IconButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const IconButton = styled.p`\n  background-image: url(${Button});\n  width: 70px;\n  height: 70px;\n  display: flex;\n  position: absolute;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  margin-right: 13px;\n`;\n\nexport const SwipeIndicator = styled.div`\nwidth: 36px;\nmin-height: 4px;\nborder-radius: 4px;\nbackground: #DBDBDB;\nmargin: 8px auto;\n`;\n\nexport const AdditionalInfo = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 14px;\nline-height: 20px;\nletter-spacing: 0.25px;\ncolor: rgba(0, 0, 0, 0.6);\n`\n\nexport const Title = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 16px;\nletter-spacing: 1.25px;\ntext-transform: uppercase;\ncolor: rgba(0, 0, 0, 0.6);\nmargin: 16px;\n`\n\nexport const CompanyContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 32px;\n`\nexport const AllBranchesContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n  border-bottom: solid 2px rgba(33,33,33,0.08);\n`\nexport const BranchesTitle = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 16px;\nline-height: 24px;\nletter-spacing: 0.15px;\ncolor: rgba(0, 0, 0, 0.87);\n  margin: 6px 16px 11px 16px;\n`\nexport const BranchesCount = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 24px;\nletter-spacing: 0.1px;\ncolor: rgba(0, 0, 0, 0.87);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nexport const CategoriesItem = styled.div`\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 16px;\n  height: 32px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n`\n\nexport const CategoriesItemText = styled.div`\n  font-family: Intel;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 6px 12px;\n`\n\nexport const CategoriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 16px 100px 16px;\n`\n\n","import React, {FC} from \"react\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {\n    AdditionalInfo,\n    ArrowRightIcon,\n    BottomInfo,\n    BottomText,\n    BuildingIcon,\n    BuildingsIcon,\n    Divider,\n    GreenMarkerIcon,\n    ShareIcon,\n    Title\n} from \"../styles/cardStyles\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface BuildingCardProps {\n    isOpen: boolean;\n    searchStore: SearchStore;\n    routTime?: string;\n    setCompaniesListIsOpen: (arg0: boolean) => void;\n    shareData: (arg0: PostMessageData) => void;\n    mapglStore: MapglStore;\n    coordinates: [number, number];\n}\n\nexport const BuildingCard: FC<BuildingCardProps> = ({\n                                                        isOpen,\n                                                        searchStore,\n                                                        routTime,\n                                                        setCompaniesListIsOpen,\n                                                        shareData,\n                                                        mapglStore,\n                                                        coordinates\n                                                    }) => {\n    return (\n        <>\n            {searchStore.currentObject?.address ? <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\"})}/> : null}\n            </BottomInfo> : <BottomInfo>\n                <GreenMarkerIcon/>\n                <BottomText>\n                    {searchStore.currentObject?.full_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\"})}/> : null}\n            </BottomInfo>}\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {searchStore.currentObject?.links?.branches?.count && isOpen ?\n                (\n                    <div>\n                        <Divider style={{\n                            height: \"2px\",\n                        }}/>\n                        <Title>Сompanies</Title>\n                        <BottomInfo onClick={() => setCompaniesListIsOpen(true)} style={{\n                            height: \"72px\",\n                            width: \"100%\",\n                            borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                            alignItems: \"center\",\n                            margin: \"18px 0\",\n                        }}>\n                            <BuildingsIcon/>\n                            <div style={{\n                                width: \"360px\",\n                            }}>\n                                <BottomText>All Companies</BottomText>\n                                <AdditionalInfo>{`${searchStore.currentObject?.links?.branches?.count} companies`}</AdditionalInfo>\n                            </div>\n                            <ArrowRightIcon/>\n                        </BottomInfo>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n","export enum ContactTypes {\n    Email = 'email',\n    Website = 'website',\n    Phone = 'phone',\n    Fax = 'fax',\n    Icq = 'icq',\n    Jabber = 'jabber',\n    Skype = 'skype',\n    Vkontakte = 'vkontakte',\n    Twitter = 'twitter',\n    Instagram = 'instagram',\n    Facebook = 'facebook',\n    Pobox = 'pobox',\n    Youtube = 'youtube',\n    Odnoklassniki = 'odnoklassniki',\n    Googleplus = 'googleplus',\n    Linkedin = 'linkedin',\n    Pinterest = 'pinterest',\n    Whatsapp = 'whatsapp',\n    Telegram = 'telegram',\n    Viber = 'viber'\n}\n","import {\n  BottomInfo,\n  BottomText,\n  GreenMarkerIcon,\n  ShareIcon,\n} from \"../styles/cardStyles\";\nimport { FC } from \"react\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\n\ninterface AdministrativeDivisionCardProps {\n  isOpen: boolean;\n  searchStore: SearchStore;\n  shareData: (arg0: PostMessageData) => void;\n  mapglStore: MapglStore;\n  coordinates: [number, number];\n}\n\nexport const AdministrativeDivisionCard: FC<AdministrativeDivisionCardProps> =\n  ({ isOpen, searchStore, shareData, mapglStore, coordinates }) => {\n    return (\n      <>\n        {searchStore.currentObject?.address ? (\n          <BottomInfo>\n            <GreenMarkerIcon />\n            <BottomText>\n              {searchStore.currentObject?.address?.postcode &&\n                searchStore.currentObject.address?.postcode + \", \"}\n              {searchStore.currentObject?.address_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareData({\n                    type: PostMessageTypeEnum.SHARE_INFO,\n                    data: searchStore.currentObject\n                      ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                      : \"\",\n                  })\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        ) : (\n          <BottomInfo>\n            <GreenMarkerIcon\n              onClick={() => mapglStore.setCenter(coordinates)}\n            />\n            <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n              {searchStore.currentObject?.full_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareData({\n                    type: PostMessageTypeEnum.SHARE_INFO,\n                    data:\n                      searchStore.currentObject &&\n                      searchStore.currentObject.point\n                        ? `${searchStore.currentObject?.point.lon}${searchStore.currentObject?.point.lat}`\n                        : \"\",\n                  })\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        )}\n      </>\n    );\n  };\n","import { FC, useEffect, useState } from \"react\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport {\n  AllBranchesContainer,\n  ArrowDownIcon,\n  ArrowRightIcon,\n  BottomInfo,\n  BottomText,\n  BranchesCount,\n  BranchesTitle,\n  BuildingIcon,\n  BuildingsIcon,\n  CategoriesContainer,\n  CategoriesItem,\n  CategoriesItemText,\n  CompanyContainer,\n  Divider,\n  EntranceIcon,\n  FacebookIcon,\n  GreenMarkerIcon,\n  InstagramIcon,\n  InternetIcon,\n  PhoneIcon,\n  ShareIcon,\n  SocialNetworkIconsContainer,\n  Title,\n  WorkTimeIcon,\n} from \"../styles/cardStyles\";\nimport { MapglStore } from \"../stores/MapglStore\";\nimport { ContactTypes } from \"../enums/ContactTypes.enum\";\nimport { Contact, ResultItem } from \"../api/interfaces/search.interface\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\n\nvar parse = require(\"wellknown\");\n\ninterface OrganizationCartProps {\n  searchStore: SearchStore;\n  isSwipeOpen: boolean;\n  setSwipeIsOpen: (arg0: boolean) => void;\n  setCompaniesListIsOpen: (arg0: boolean) => void;\n  mapglStore: MapglStore;\n  shareData: (arg0: PostMessageData) => void;\n  coordinates: [number, number];\n}\n\nexport const OrganizationCart: FC<OrganizationCartProps> = ({\n  searchStore,\n  isSwipeOpen,\n  setCompaniesListIsOpen,\n  mapglStore,\n  setSwipeIsOpen,\n  shareData,\n  coordinates,\n}) => {\n  let instagramLink = \"\";\n  let facebookLink = \"\";\n  const showEntrance = () => {\n    let entrance = parse(\n      searchStore.currentObject?.links?.entrances[0].geometry.points[0]\n    ).coordinates;\n    mapglStore.buildMarker(entrance);\n    mapglStore.setCenter(entrance);\n    mapglStore.setZoom(18);\n    setSwipeIsOpen(false);\n  };\n\n  const contactTypeChecker = (contactType: ContactTypes) => {\n    if (searchStore.currentObject?.contact_groups)\n      return searchStore.currentObject?.contact_groups[0].contacts.some(\n        (item) => item.type === contactType\n      );\n  };\n\n  const Contacts = (contactType: ContactTypes) => {\n    //TODO:: Refactor this function\n    let arr: Contact[] = [];\n    if (!!searchStore.currentObject?.contact_groups) {\n      searchStore.currentObject?.contact_groups.forEach((item) =>\n        item.contacts.forEach((contact) => {\n          if (contact.type === ContactTypes.Instagram) {\n            instagramLink = contact.url;\n          }\n          if (contact.type === ContactTypes.Facebook) {\n            facebookLink = contact.url;\n          }\n          arr.push(contact);\n        })\n      );\n      return arr.map((item: any, index) => {\n        if (item.type === contactType) {\n          if (item.type === ContactTypes.Website) {\n            return (\n              <BottomText\n                onClick={() =>\n                  shareData({ type: PostMessageTypeEnum.URL, data: item.url })\n                }\n                key={item.value}\n              >{`${item.text}`}</BottomText>\n            );\n          }\n          return <BottomText key={item.value}>{`${item.text}`}</BottomText>;\n        }\n      });\n    }\n  };\n\n  const openCompanyCard = (id: string) => {\n    searchStore.getObjectById(id).then((res: any) => {\n      res && searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n      setSwipeIsOpen(false);\n    });\n  };\n\n  const [workingTime, setWorkingTime] = useState([]);\n\n  const getCurrentDay = () => {\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    let d = new Date();\n    let n = d.getDay();\n\n    // @ts-ignore\n    searchStore.currentObject?.schedule && setWorkingTime([searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.from,searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.to,]);\n  };\n\n  useEffect(() => {\n    getCurrentDay();\n  }, [searchStore.currentObject?.schedule]);\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: isSwipeOpen ? \"scroll\" : \"hidden\"\n        }}>\n            <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.full_name ? searchStore.currentObject?.full_name + \", \" : null}\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isSwipeOpen ? <ShareIcon onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject.id : \"\"})}/> : null}\n            </BottomInfo>\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {isSwipeOpen ?\n                <>\n                    {searchStore.currentObject?.links?.entrances ? <BottomInfo onClick={() => showEntrance()}>\n                        <EntranceIcon/>\n                        <BottomText style={{\n                            color: \"#23B064\"\n                        }}>Show entrance on map</BottomText>\n                    </BottomInfo> : null}\n                    {searchStore.currentObject?.schedule ? <BottomInfo>\n                        <WorkTimeIcon/>\n                        <BottomText>{`Daily ${workingTime[0]} — \n                        ${workingTime[1]} Open`}</BottomText>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Phone) ? <BottomInfo>\n                        <PhoneIcon/>\n                        <div style={{\n                            width: \"100%\",\n                        }}>\n                            {Contacts(ContactTypes.Phone)}\n                        </div>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Website) ? <BottomInfo>\n                        <InternetIcon/>\n                        <div>\n                            {Contacts(ContactTypes.Website)}\n                            <SocialNetworkIconsContainer>\n                                {contactTypeChecker(ContactTypes.Instagram) ? <InstagramIcon onClick={() => shareData({type: PostMessageTypeEnum.URL, data: instagramLink})}/> : null}\n                                {contactTypeChecker(ContactTypes.Facebook) ? <FacebookIcon onClick={() => shareData({type: PostMessageTypeEnum.URL, data: facebookLink})}/> : null}\n                            </SocialNetworkIconsContainer>\n                        </div>\n                    </BottomInfo> : null}\n                    {parseInt(searchStore.currentObject?.org?.branch_count as string) > 1 ?\n                        <div>\n                            <Divider style={{\n                                height: \"2px\",\n                            }}/>\n                            <Title>other branches</Title>\n                            <BottomInfo style={{\n                                width: \"100%\",\n                                borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                                margin: \"18px 0 6px 0\",\n                            }}>\n                                <BuildingsIcon/>\n                                <div style={{\n                                    width: \"100%\",\n                                }}>\n                                    {searchStore.branchesInOrganization?.result.items.map((item: any) => {\n                                        return (\n                                            <CompanyContainer key={item.id} onClick={() => {\n                                                openCompanyCard(item.id);\n                                            }}>\n                                                <BottomText>{`${item.full_address_name}, ${item.address.postcode}`}</BottomText>\n                                                <ArrowRightIcon/>\n                                            </CompanyContainer>\n                                        );\n                                    })}\n                                </div>\n                            </BottomInfo>\n                        </div>\n                        : null}\n                    {!!searchStore.currentObject?.links?.branches ?\n                        <>\n                        <AllBranchesContainer onClick={() => {\n                            setCompaniesListIsOpen(true);\n                            setSwipeIsOpen(false);\n                        }}>\n                            <BranchesTitle>All companies</BranchesTitle>\n                            <BranchesCount>\n                                <div style={{\n                                    margin: \"0 8px\"\n                                }}>{searchStore.currentObject?.links?.branches?.count}</div>\n                                <ArrowDownIcon/>\n                            </BranchesCount>\n                        </AllBranchesContainer>\n                        </> : null}\n                    <Title>categories</Title>\n                    {searchStore.currentObject?.rubrics ? <CategoriesContainer>\n                        {searchStore.currentObject.rubrics.map((item) => {\n                            return (\n                                <CategoriesItem key={item.id}>\n                                    <CategoriesItemText>{item.name}</CategoriesItemText>\n                                </CategoriesItem>\n                            )\n                        })}\n                    </CategoriesContainer> : null}\n                </> : null}\n        </div>\n    );\n}\n","import styled from \"styled-components\";\nimport Check from \"assets/images/check.svg\";\nimport { useEffect, useState } from \"react\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { EnrichedGeolocationCoordinates } from \"react-hook-geolocation\";\nimport { SendData } from \"../utils/SendData\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\n\nconst DirectionCardWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 52;\n  width: 100%;\n  height: 220px;\n  text-align: center;\n`;\n\nconst DirectionButtonsWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: 10px 16px 0 16px;\n  margin-bottom: 24px;\n`;\n\nconst DirectionButton = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 50% 50;\n  padding: 9px;\n`;\n\nconst RouteTime = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst Distance = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst LetsGoButton = styled.button`\n  width: 315px;\n  height: 48px;\n  background: #23b064;\n  border-radius: 12px;\n  margin-bottom: 10px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst DirectionsLength = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst CheckIcon = styled.div`\n  background-image: url(${Check});\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100%;\n  height: 20px;\n`;\n\nenum DirectionType {\n  faster = \"jam\",\n  shorter = \"shortest\",\n}\n\ninterface DirectionCardProps {\n  directionsStore: DirectionsStore;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  currentGeolocation: EnrichedGeolocationCoordinates;\n}\n\nexport const DirectionCard = observer(\n  ({\n    directionsStore,\n    searchStore,\n    mapglStore,\n    currentGeolocation,\n  }: DirectionCardProps) => {\n    const [selectedDirection, setSelectedDirection] = useState(\n      DirectionType.faster\n    );\n\n    const [faster, setFaster] = useState<any>(null);\n    const [shortest, setShortest] = useState<any>(null);\n\n    const buildDirection = (\n      endPoint: number[],\n      type: string,\n      color: string\n    ): Promise<any> => {\n      return directionsStore.buildDirection(\n        mapglStore.myLocation,\n        endPoint,\n        type,\n        color\n      );\n    };\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        (mapglStore.currentMarkerCoords || searchStore.currentObject.point) &&\n        buildDirection(\n          mapglStore.currentMarkerCoords || [\n            searchStore.currentObject.point.lon,\n            searchStore.currentObject.point.lat,\n          ],\n          selectedDirection,\n          selectedDirection === DirectionType.faster ? \"#23B064\" : \"#BBD4EC\"\n        ).then((res) => {\n          searchStore.currentObject &&\n            (mapglStore.currentMarkerCoords ||\n              searchStore.currentObject.point) &&\n            directionsStore\n              .getDirection(\n                mapglStore.myLocation,\n                mapglStore.currentMarkerCoords || [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.faster\n              )\n              .then((res) => {\n                setFaster(res.data[0]);\n              });\n\n          searchStore.currentObject &&\n            (mapglStore.currentMarkerCoords ||\n              searchStore.currentObject.point) &&\n            directionsStore\n              .getDirection(\n                mapglStore.myLocation,\n                mapglStore.currentMarkerCoords || [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.shorter\n              )\n              .then((res) => {\n                setShortest(res.data[0]);\n              });\n        });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedDirection, directionsStore, searchStore.currentObject]);\n\n    return (\n      <DirectionCardWrapper>\n        <DirectionButtonsWrapper>\n          <DirectionButton\n            onClick={() => {\n              selectedDirection !== DirectionType.faster &&\n                mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.faster);\n            }}\n            style={\n              selectedDirection === DirectionType.faster\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(shortest?.duration / 60).toFixed(1)} min</RouteTime>\n            <CheckIcon />\n            <Distance>{(shortest?.distance / 1000).toFixed(1)} km</Distance>\n            <div>shorter </div>\n          </DirectionButton>\n          <DirectionButton\n            onClick={() => {\n              selectedDirection !== DirectionType.shorter &&\n                mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.shorter);\n            }}\n            style={\n              selectedDirection === DirectionType.shorter\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(faster?.duration / 60).toFixed(1)} min</RouteTime>\n            <div></div>\n            <Distance>{(faster?.distance / 1000).toFixed(1)} km</Distance>\n            <div>faster </div>\n          </DirectionButton>\n        </DirectionButtonsWrapper>\n        <LetsGoButton\n          onClick={() =>\n            SendData({\n              type: PostMessageTypeEnum.ROUTE,\n              data: `${currentGeolocation.latitude},${currentGeolocation.longitude}`,\n            })\n          }\n        >\n          Let`s go\n        </LetsGoButton>\n        <DirectionsLength>You have 28 routes left</DirectionsLength>\n      </DirectionCardWrapper>\n    );\n  }\n);\n","import {PostMessageData} from \"../api/interfaces/postMassage.interface\";\n\ndeclare global {\n  interface Window {\n    ReactNativeWebView: any;\n  }\n}\n\nexport const SendData = (data: PostMessageData): void => {\n  window.ReactNativeWebView &&\n  window.ReactNativeWebView.postMessage(JSON.stringify(data));\n}","import {FC, useState} from \"react\";\nimport {SearchStore} from \"stores/SearchStore\";\nimport Swipe from \"react-easy-swipe\";\nimport {Places} from \"../assets/data/places\";\nimport {CompaniesList} from \"./CompaniesList\";\nimport {ResponseObjectTypes} from \"../enums/ResponseObjectTypes.enum\";\nimport {BuildingCard} from \"./BuildingCard\";\nimport {AdministrativeDivisionCard} from \"./AdministarativeDivisionCard\";\nimport {\n    ArrowDownIcon,\n    Divider,\n    IconButton,\n    IconButtonContainer,\n    PlaceInfo,\n    PlaceInfoWrapper,\n    PlaceTitle,\n    ShareIcon,\n    SwipeIndicator,\n    UpperInfo,\n    Wrapper\n} from \"../styles/cardStyles\";\nimport {OrganizationCart} from \"./OrganizationCart\";\nimport {observer} from \"mobx-react\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\nimport {SendData} from \"../utils/SendData\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\n\ninterface ObjectCardProps {\n    searchStore: SearchStore;\n    mapglStore: MapglStore;\n    routTime?: string;\n    setIsDirectionCard: (value: boolean) => void;\n}\n\nexport const ObjectCard: FC<ObjectCardProps> = observer(\n    ({\n         searchStore,\n         mapglStore,\n         routTime,\n         setIsDirectionCard,\n     }) => {\n        const [isOpen, setIsOpen] = useState(false);\n        const [isCompaniesListOpen, setCompaniesListIsOpen] = useState(false);\n\n        const canBeSwiped =\n            searchStore.currentObject?.type === ResponseObjectTypes.branch ||\n            searchStore.currentObject?.type === ResponseObjectTypes.building;\n\n        const setType = (type?: string) => {\n            for (let item of Places) {\n                if (type === item.type) {\n                    return item.title;\n                }\n            }\n            return \"\";\n        };\n\n        const shareData = (data: PostMessageData) => {\n            if (PostMessageTypeEnum.SHARE_INFO === data.type) {\n                const twoGisLink = `https://2gis.com.cy/cyprus/${searchStore.currentObject?.type === ResponseObjectTypes.branch ? 'firm' : 'geo'}/${data.data}`;\n                const googleMapsLink = `https://www.google.com/maps/search/?api=1&query=${searchStore.currentObject?.point.lat}%2C${searchStore.currentObject?.point.lon}`;\n                SendData({type: PostMessageTypeEnum.SHARE_INFO,\n                    data: `For NaviCY:\\n${twoGisLink}\\n\\nFor Google maps:\\n${googleMapsLink}`})\n            } else {\n                SendData(data);\n            }\n        }\n\n        const cardHeight = searchStore.currentObject?.floors || searchStore.currentObject?.links?.branches?.count ? \"28%\" : \"21%\"\n\n        return (\n            <>\n                <Wrapper\n                    style={{\n                        display: searchStore.currentObject ? \"flex\" : \"none\",\n                        height: isOpen ? \"95%\" : cardHeight,\n                    }}\n                >\n                    <Swipe\n                        onSwipeUp={() => {\n                            setIsOpen(canBeSwiped);\n                        }}\n                        onSwipeDown={() => {\n                            setIsOpen(false);\n                        }}\n                    >\n                        <IconButtonContainer\n                            onClick={() => {\n                                setIsDirectionCard(true);\n                            }}\n                        >\n                            <IconButton\n                                style={{\n                                    top: isOpen ? \"75vh\" : \"-35px\",\n                                    transition: \"top 0.3s\",\n                                }}\n                            />\n                        </IconButtonContainer>\n                        {canBeSwiped ? <SwipeIndicator/> : null}\n                        <UpperInfo\n                            style={{\n                                flexDirection: isOpen ? \"row\" : \"column\",\n                                justifyContent: isOpen ? \"space-around\" : \"\",\n                                alignItems: isOpen ? \"center\" : \"\",\n                            }}\n                        >\n                            {isOpen ? (\n                                <ArrowDownIcon onClick={() => setIsOpen(false)}/>\n                            ) : null}\n                            <PlaceTitle>\n                                {searchStore.currentObject?.name\n                                    ? searchStore.currentObject?.name\n                                    : \"Utility structure\"}\n                            </PlaceTitle>\n                            {!isOpen ? (\n                                <PlaceInfoWrapper>\n                                    <PlaceInfo>\n                                        {searchStore.currentObject?.subtype ||\n                                        searchStore.currentObject?.purpose_name ||\n                                        setType(searchStore.currentObject?.type)}\n                                    </PlaceInfo>\n                                    <PlaceInfo>{routTime}</PlaceInfo>\n                                </PlaceInfoWrapper>\n                            ) : (\n                                <ShareIcon\n                                    onClick={() => shareData({\n                                        type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ?\n                                            searchStore.currentObject.type === ResponseObjectTypes.building ? searchStore.currentObject?.address.building_id : searchStore.currentObject.id\n                                            : \"\"\n                                    })}\n                                    style={{marginLeft: \"11px\"}}\n                                />\n                            )}\n                        </UpperInfo>\n                        <Divider/>\n                    </Swipe>\n                    {searchStore.currentObject?.type === ResponseObjectTypes.building ? (\n                        <BuildingCard\n                            shareData={shareData}\n                            isOpen={isOpen}\n                            searchStore={searchStore}\n                            mapglStore={mapglStore}\n                            coordinates={[searchStore.currentObject.point?.lon, searchStore.currentObject.point?.lat]}\n                            setCompaniesListIsOpen={setCompaniesListIsOpen}\n                        />\n                    ) : null}\n                    {searchStore.currentObject?.type === ResponseObjectTypes.admDiv ||\n                    searchStore.currentObject?.type === ResponseObjectTypes.street ? (\n                        <AdministrativeDivisionCard\n                            shareData={shareData}\n                            isOpen={isOpen}\n                            searchStore={searchStore}\n                            mapglStore={mapglStore}\n                            coordinates={[searchStore.currentObject.point?.lon, searchStore.currentObject.point?.lat]}\n                        />\n                    ) : null}\n                    {searchStore.currentObject?.type === ResponseObjectTypes.branch ? (\n                        <OrganizationCart\n                            shareData={shareData}\n                            setSwipeIsOpen={setIsOpen}\n                            mapglStore={mapglStore}\n                            searchStore={searchStore}\n                            isSwipeOpen={isOpen}\n                            setCompaniesListIsOpen={setCompaniesListIsOpen}\n                            coordinates={[searchStore.currentObject.point?.lon, searchStore.currentObject.point?.lat]}\n                        />\n                    ) : null}\n                </Wrapper>\n                {isCompaniesListOpen && (\n                    <CompaniesList setIsOpen={setCompaniesListIsOpen}/>\n                )}\n            </>\n        );\n    }\n);\n","export default __webpack_public_path__ + \"static/media/myLocation.ff902024.svg\";","export default __webpack_public_path__ + \"static/media/location.d2150911.svg\";","import styled from \"styled-components\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Location from \"assets/images/location.svg\";\nimport GreenMarker from \"assets/images/green-marker.svg\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\n\nconst DirectionInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 144px;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StartPointWrapper = styled.div`\n  display: flex;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 10px;\n  margin-top: 40px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  border: 0;\n  margin-left: 19px;\n`;\n\nconst LocationIcon = styled.div`\n  background-image: url(${Location});\n  width: 24px;\n  height: 24px;\n`;\n\nconst LocationInputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 16px;\n  margin-top: 36px;\n  max-height: 40px;\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  top: 87px;\n  left: 90px;\n  height: 1px;\n  width: 100%;\n  background: rgba(33, 33, 33, 0.08);\n`;\n\nconst EndPointWrapper = styled.div`\n  margin-top: 42px;\n  margin-left: 44px;\n  display: flex;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst EndPoint = styled.div`\n  margin-left: 19px;\n`;\n\ninterface DirectionInputProps {\n  searchStore: SearchStore;\n  onDirectionInputBack: () => void;\n}\n\nexport const DirectionInput = observer(\n  ({ searchStore, onDirectionInputBack }: DirectionInputProps) => {\n    const backHandler = () => {\n      onDirectionInputBack();\n    };\n\n    return (\n      <DirectionInputWrapper>\n        <StartPointWrapper>\n          <BackArrowIcon onClick={backHandler} />\n          <LocationInputWrapper>\n            <LocationIcon />\n            <Input placeholder=\"Your location\" />\n          </LocationInputWrapper>\n        </StartPointWrapper>\n        <Line />\n        <EndPointWrapper>\n          <GreenMarkerIcon />\n          <EndPoint>\n            {(searchStore.currentObject?.address_name &&\n              searchStore.currentObject.address?.postcode &&\n              searchStore.currentObject.address_name +\n                \", \" +\n                searchStore.currentObject.address?.postcode) ||\n              searchStore.currentObject?.name ||\n              searchStore.currentObject?.full_name}\n          </EndPoint>\n        </EndPointWrapper>\n      </DirectionInputWrapper>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/check.534132f2.svg\";","export default __webpack_public_path__ + \"static/media/zoom-plus.b4f42d51.svg\";","export default __webpack_public_path__ + \"static/media/zoom-minus.29cdd6d7.svg\";","import { useMapglStore } from \"hooks/store\";\nimport { useState } from \"react\";\n\nexport const ChangeLocation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n\n  const mapglStore = useMapglStore();\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    mapglStore.setLocationMarker([+lon, +lat]);\n    \n    setIsOpen(false);\n  };\n  return (\n    <div style={{ position: \"absolute\", zIndex: 999 }}>\n      {isOpen ? (\n        <form onSubmit={handleSubmit}>\n          <input placeholder=\"lon\" onChange={(e) => setLon(e.target.value)} />\n          <input placeholder=\"lat\" onChange={(e) => setLat(e.target.value)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      ) : (\n        <button onClick={() => setIsOpen(true)}>Change location</button>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @ts-ignore\nimport { useDirectionsStore, useMapglStore, useSearchStore } from \"hooks/store\";\nimport { useEffect, useRef, useState } from \"react\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nimport { SearchInput } from \"./SearchInput\";\nimport { Results } from \"./Results\";\nimport styled from \"styled-components\";\nimport { ObjectCard } from \"./ObjectsCard\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport myLocation from \"../assets/images/myLocation.svg\";\nimport { DirectionInput } from \"./DirectionInput\";\nimport { DirectionCard } from \"./DirectionCard\";\nimport Plus from \"../assets/images/zoom-plus.svg\";\nimport Minus from \"../assets/images/zoom-minus.svg\";\nimport React from \"react\";\nimport { ChangeLocation } from \"./ChangeLocation\";\nimport { observer } from \"mobx-react\";\nimport useGeolocation from \"react-hook-geolocation\";\nimport { debounce } from \"@material-ui/core/utils\";\nvar parse = require(\"wellknown\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Map = styled.div`\n  width: 100vh;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst MyLocationButton = styled.div`\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  top: 55%;\n  left: 83%;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${myLocation});\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst CustomButtonsWrapper = styled.div`\n  position: fixed;\n  top: 40%;\n  left: 83%;\n  height: 165px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ZoomContainer = styled.div`\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.15))\n    drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.06));\n`;\n\nconst ZoomPlusButton = styled.div`\n  width: 46px;\n  height: 46px;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${Plus});\n  border-radius: 10px 10px 0px 0px;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst ZoomMinusButton = styled.div`\n  width: 46px;\n  height: 46px;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${Minus});\n  border-radius: 0px 0px 10px 10px;\n  margin-top: 4px;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst MapWrapper = React.memo(\n  () => {\n    return <Map id=\"container\"></Map>;\n  },\n  () => true\n);\n\nexport const Mapgl = observer(() => {\n  const mapglStore = useMapglStore();\n  const searchStore = useSearchStore();\n  const directionsStore = useDirectionsStore();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [mapgl, setMapgl] = useState<mapglTypes.Map | null>(null);\n  const [isObjectCardOpen, setIsObjectCardOpen] = useState(false);\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isDirectionCard, setIsDirectionCard] = useState(false);\n  const [isResultsOpen, setIsResultsOpen] = useState(true);\n  const [isMarkerCentered, setIsMarkerCentered] = useState(true);\n  const [myLocationClickCount, setMyLocationClickCount] = useState(1);\n\n  useEffect((): (() => void) => {\n    mapglStore.loadMapglAPI().then(() => {\n      setMapgl(\n        mapglStore.loadMapgl(\"container\", {\n          center: mapglStore.myLocation as [number, number],\n          zoom: 13,\n          key: process.env.REACT_APP_TWOGIS_KEY,\n        })\n      );\n      mapglStore.setLocationMarker(mapglStore.myLocation as [number, number]);\n    });\n\n    return () => mapgl && mapgl.destroy();\n  }, []);\n\n  const onGeolocationUpdate = (geolocation: any) => {\n    if (mapglStore.locationMarker) {\n      mapglStore.locationMarker.destroy();\n    }\n    if (isMarkerCentered) {\n      mapglStore.setCenter([geolocation.longitude, geolocation.latitude]);\n    }\n    mapglStore.setLocationMarker([geolocation.longitude, geolocation.latitude]);\n  };\n  const geolocation = useGeolocation(\n    {\n      enableHighAccuracy: true,\n      timeout: 500,\n    },\n    onGeolocationUpdate\n  );\n\n  useEffect(() => {\n    mapgl && mapgl.on(\"click\", handleMapClick);\n\n    return () => {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    };\n  }, [mapgl]);\n\n  useEffect(() => {\n    mapgl && mapgl.on(\"zoom\", handleZoomDebounced);\n\n    return () => {\n      mapgl && mapgl.off(\"zoom\", (e) => handleZoomDebounced(e));\n    };\n  }, [mapgl]);\n\n  useEffect(() => {\n    mapgl && mapgl.on(\"move\", handleZoomDebounced);\n    return () => {\n      mapgl && mapgl.off(\"move\", (e) => handleZoomDebounced(e));\n    };\n  }, [mapgl]);\n\n  const handleZoom = async (event: any) => {\n    mapglStore.destroyMarkers();\n    const reqParams = searchStore.reqParams;\n    const viewPoints = mapgl?.getBounds();\n\n    const res = await searchStore.getSearchResults(\n      //@ts-ignore\n      reqParams[0],\n      reqParams[1],\n      viewPoints?.northEast as [number, number],\n      viewPoints?.southWest as [number, number]\n    );\n\n    res.map((item: any) => {\n      if (item.point) {\n        const marker = mapglStore.buildMarker([item.point.lon, item.point.lat]);\n        marker?.on(\"click\", () => {\n          createMarkerEvent(marker, item);\n        });\n      }\n    });\n\n    setIsResultsOpen(false);\n  };\n\n  const createMarkerEvent = (marker: mapglTypes.Marker, item: ResultItem) => {\n    if (!isDirectionCard) {\n      mapglStore.currentMarker &&\n        mapglStore.currentMarker.setIcon({ icon: \"./marker.svg\" });\n      mapglStore.setCurrentMarker(marker);\n      marker.setIcon({ icon: \"./red-marker.svg\" });\n      searchStore.setCurrentObject(item);\n      setIsObjectCardOpen(true);\n      mapglStore.setCurrentMarkerCoords([item.point.lon, item.point.lat]);\n      // mapglStore.setCenter([item.point.lon, item.point.lat]);\n    }\n  };\n\n  const handleZoomDebounced = debounce(handleZoom, 200);\n\n  // TODO move it to store\n\n  const destroyAll = () => {\n    mapglStore.destroyPolygon();\n    mapglStore.destroyMarkers();\n    mapglStore.destroyDirection();\n    mapgl && mapgl.setSelectedObjects([]);\n  };\n\n  const handleMapClick = (data: mapglTypes.MapPointerEvent) => {\n    searchInputRef && searchInputRef.current?.blur();\n    if (!isDirectionCard) {\n      destroyAll();\n\n      if (searchInputRef.current?.value) {\n        searchInputRef.current.value = \"\";\n      }\n\n      mapglStore.buildMarker(data.lngLat);\n\n      mapglStore.setCurrentMarkerCoords(data.lngLat);\n\n      if (data.target?.id) {\n        mapgl && mapgl.setSelectedObjects([data.target?.id]);\n        searchStore.getObjectById(data.target?.id).then((res: any) => {\n          res &&\n            searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n          setIsObjectCardOpen(true);\n        });\n      } else {\n        searchStore\n          .getObjectByGeo(data.lngLat as [number, number])\n          .then((res: any) => {\n            if (res.data?.result?.items) {\n              const parsedPolygon = parse(\n                res.data?.result?.items[0].geometry.selection\n              );\n              searchStore.setCurrentObject(\n                res.data?.result?.items[0] as ResultItem\n              );\n              setIsObjectCardOpen(true);\n\n              if (typeof parsedPolygon.coordinates[0] !== \"number\") {\n                mapglStore.buildPolygon(parsedPolygon.coordinates);\n              }\n            }\n          });\n      }\n    }\n  };\n\n  const onDirectionInputBack = () => {\n    mapglStore.destroyDirection();\n    setIsObjectCardOpen(true);\n    setIsDirectionCard(false);\n  };\n\n  const onClickLocationHandler = () => {\n    setMyLocationClickCount(myLocationClickCount + 1);\n    if (myLocationClickCount === 1 || myLocationClickCount === 2) {\n      setTimeout(() => {\n        if (myLocationClickCount === 1) {\n          if (!mapglStore.locationMarker) {\n            mapglStore.setLocationMarker([\n              geolocation.longitude,\n              geolocation.latitude,\n            ]);\n          }\n          mapgl?.setCenter([geolocation.longitude, geolocation.latitude]);\n        } else {\n          setIsMarkerCentered(!isMarkerCentered);\n        }\n        setMyLocationClickCount(1);\n      }, 300);\n    }\n  };\n\n  const zoomPlus = () => {\n    const currentZoom = mapgl?.getZoom();\n    if (currentZoom) mapgl?.setZoom(currentZoom + 1);\n  };\n\n  const zoomMinus = () => {\n    const currentZoom = mapgl?.getZoom();\n    if (currentZoom && currentZoom > 1) mapgl?.setZoom(currentZoom - 1);\n  };\n\n  return (\n    <Wrapper>\n      <ChangeLocation />\n      {isDirectionCard ? (\n        <DirectionInput\n          searchStore={searchStore}\n          onDirectionInputBack={onDirectionInputBack}\n        />\n      ) : (\n        <SearchInput\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setOpenObjectCard={setIsObjectCardOpen}\n          setIsEnterPressed={setIsEnterPressed}\n          setIsResultsOpen={setIsResultsOpen}\n          searchInputRef={searchInputRef}\n          destroyAll={destroyAll}\n        />\n      )}\n\n      {!isObjectCardOpen && !isDirectionCard && (\n        <Results\n          searchStore={searchStore}\n          destroyAll={destroyAll}\n          mapglStore={mapglStore}\n          searchInputRef={searchInputRef}\n          setOpenObjectCard={setIsObjectCardOpen}\n          isEnterPressed={isEnterPressed}\n          isResultsOpen={isResultsOpen}\n          setIsResultsOpen={setIsResultsOpen}\n          isDirectionCard={isDirectionCard}\n        />\n      )}\n      {isObjectCardOpen && !isDirectionCard && (\n        <ObjectCard\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          routTime={\"7 km (16 min)\"}\n          setIsDirectionCard={setIsDirectionCard}\n        />\n      )}\n      {isDirectionCard && (\n        <DirectionCard\n          currentGeolocation={geolocation}\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          searchStore={searchStore}\n        />\n      )}\n      <MapWrapper />\n\n      <CustomButtonsWrapper>\n        <ZoomContainer>\n          <ZoomPlusButton onClick={zoomPlus} />\n          <ZoomMinusButton onClick={zoomMinus} />\n        </ZoomContainer>\n        <MyLocationButton\n          style={isMarkerCentered ? { backgroundColor: \"#23B064\" } : {}}\n          onClick={() => onClickLocationHandler()}\n        />\n      </CustomButtonsWrapper>\n    </Wrapper>\n  );\n});\n","import BaseAPI from \"./base\";\n\nexport default class DirectionsAPI extends BaseAPI {\n\n    async getDirections(startPoint: number[], endPoint: number[], type: string): Promise<any> {\n        const options = {\n            points: [{\n                lon1: startPoint[0],\n                lat1: startPoint[1],\n                lon2: endPoint[0],\n                lat2: endPoint[1],\n            }],\n            type,\n            output: \"full\"\n        };\n        const res = await this.axios.post(`get_pairs/1.0/car?key=${process.env.REACT_APP_SEARCH_KEY}`, options)\n\n        return res;\n    }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport DirectionsAPI from \"./directions\";\nimport SearchAPI from \"./search\";\n\nexport const getClient = (): AxiosInstance => {\n    return axios.create({\n        baseURL: 'https://catalog.api.2gis.com/',\n        timeout: 3000,\n        headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }\n    });\n}\n\nexport interface API {\n    search: SearchAPI;\n    directions: DirectionsAPI;\n}\n\nconst makeApi = (client: AxiosInstance): API => {\n    return {\n        search: new SearchAPI(client),\n        directions: new DirectionsAPI(client)\n    };\n};\nexport default makeApi;","import { API } from 'api/index';\nimport makeApi, { getClient } from \"api\";\n\nexport const useApi = (): API => {\n    const client = getClient();\n    return makeApi(client);\n};\n","import React from \"react\";\nimport {RootStore} from \"stores/RootStore\";\nimport {StoreProvider} from \"contexts/StoreContext\";\nimport {Mapgl} from \"components/Mapgl\";\nimport {useApi} from \"hooks/api\";\nimport \"./style.css\";\n\nexport const App = () => {\n    return <Mapgl />\n};\n\nconst StoreWrapper: React.FC = () => {\n    const api = useApi();\n    const store = new RootStore(api);\n\n    return (\n        <StoreProvider store={store}>\n            <App/>\n        </StoreProvider>\n    );\n};\n\nexport default StoreWrapper;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreWrapper from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreWrapper/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}