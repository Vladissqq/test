{"version":3,"sources":["enums/ResponseObjectTypes.enum.ts","stores/DirectionsStore.ts","stores/SearchStore.ts","stores/MapglStore.ts","stores/RootStore.ts","contexts/StoreContext.tsx","hooks/store.ts","assets/images/burger.svg","assets/images/search.svg","assets/images/back-arrow.svg","assets/images/cancel.svg","components/SearchInput.tsx","assets/images/black-marker.svg","assets/images/building.svg","assets/images/branch.svg","assets/images/geo-object.svg","api/enums/api-versions.enum.ts","api/search.ts","api/base.ts","enums/PostMessageType.enum.ts","components/Results.tsx","assets/data/places.ts","assets/images/arrow-left.svg","components/CompaniesList.tsx","assets/images/green-marker.svg","assets/images/building-icon.svg","assets/images/buildings-green.svg","assets/images/arrow-right.svg","assets/images/work-time.svg","assets/images/phone.svg","assets/images/internet.svg","assets/images/arrow-down.svg","assets/images/share.svg","assets/images/icon-button.svg","assets/images/entrance.svg","assets/images/facebook.svg","assets/images/instagram.svg","styles/cardStyles.ts","components/BuildingCard.tsx","enums/ContactTypes.enum.ts","components/AdministarativeDivisionCard.tsx","components/OrganizationCart.tsx","components/DirectionCard.tsx","components/ObjectsCard.tsx","assets/images/myLocation.svg","assets/images/location.svg","components/DirectionInput.tsx","assets/images/check.svg","assets/images/zoom-plus.svg","assets/images/zoom-minus.svg","components/ChangeLocation.tsx","components/Mapgl.tsx","api/directions.ts","api/index.ts","hooks/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResponseObjectTypes","parse","require","DirectionsStore","rootStore","api","this","makeObservable","mapgl","directionsAPI","Directions","directionsApiKey","process","startPoint","endPoint","type","directions","getDirections","color","getDirection","then","res","parsedDirection","data","route","mapglStore","buildDirection","coordinates","destroyDirection","observable","SearchStore","idType","id","sortPoint","search","getSearchResults","searchResults","runInAction","inputValue","getSuggestions","suggestionsResults","sortedItems","result","items","map","item","push","getObjectById","currentObject","getBranchesByBuildingId","branchesInBuilding","getBranchesByOrganizationId","branchesInOrganization","address","building_id","org","getObjectByGeo","action","MapglStore","load","mapglAPI","divId","options","Map","zoomControl","directionsStore","loadDirections","myLocation","locationMarker","destroy","Marker","setCenter","coords","isActive","currentMarker","icon","markers","marker","polygon","Polygon","interactive","polyline","Polyline","forEach","getZoom","zoom","setZoom","currentMarkerCoords","RootStore","searchStore","StoreContext","React","createContext","StoreProvider","children","store","Provider","value","useRootStore","useContext","useMapglStore","useSearchStore","SearchInputWrapper","styled","div","BurgerWrapper","BurgerIcon","Burger","SearchIcon","Search","Input","input","BackArrowIcon","BackArrow","CancelIcon","Cancel","SearchInput","searchInputRef","setOpenObjectCard","setIsEnterPressed","setIsResultsOpen","destroyAll","useState","setIsInputFocused","setInputValue","onKeyDown","event","key","style","justifyContent","onClick","current","focus","display","placeholder","onChange","target","ref","onFocus","marginLeft","onBlur","API_VERSIONS","ID_TYPES","BaseAPI","axios","PostMessageTypeEnum","SearchAPI","a","get","V3","V2","post","points","Wrapper","ItemWrapper","ResultIcon","p","TextWrapper","ItemName","ItemDescription","NotFoundWrapper","NotFoundTitle","NotFoundDescription","Results","observer","isEnterPressed","isResultsOpen","isDirectionCard","handleClick","rubric","point","buildMarker","lon","lat","on","setIcon","setCurrentMarker","setCurrentObject","setCurrentMarkerCoords","resultItem","useEffect","length","blur","onfocus","backgroundImage","branch","Branch","admDiv","admDivCity","admDivCountry","admDivDistrict","admDivDistrictArea","admDivPlace","admDivRegion","admDivSettlement","building","Building","GeoObject","name","full_name","meta","code","Places","title","Header","HeaderTitle","ArrowLeftIcon","ArrowLeft","CompanyContainer","CompanyName","CompanyAdditionalInfo","CompaniesContainer","CompanyButton","setIsOpen","address_comment","purpose_name","CompaniesList","Divider","UpperInfo","BottomInfo","PlaceTitle","PlaceInfoWrapper","PlaceInfo","BottomText","GreenMarkerIcon","GreenMarker","BuildingIcon","BuildingsIcon","Buildings","ArrowRightIcon","ArrowRight","WorkTimeIcon","WorkTime","PhoneIcon","Phone","InternetIcon","Internet","EntranceIcon","Entrance","ArrowDownIcon","ArrowDown","ShareIcon","Share","InstagramIcon","Instagram","FacebookIcon","Facebook","SocialNetworkIconsContainer","IconButtonContainer","IconButton","Button","SwipeIndicator","AdditionalInfo","Title","AllBranchesContainer","BranchesTitle","BranchesCount","CategoriesItem","CategoriesItemText","CategoriesContainer","ContactTypes","BuildingCard","isOpen","setCompaniesListIsOpen","routTime","shareData","postcode","address_name","SHARE_INFO","links","branches","count","floors","ground_count","height","width","borderBottom","alignItems","margin","AdministrativeDivisionCard","DirectionType","OrganizationCart","isSwipeOpen","setSwipeIsOpen","instagramLink","facebookLink","contactTypeChecker","contactType","contact_groups","contacts","some","Contacts","arr","contact","url","index","Website","URL","text","workingTime","setWorkingTime","days","n","Date","getDay","schedule","working_hours","from","to","getCurrentDay","flexDirection","overflow","entrances","entrance","geometry","showEntrance","parseInt","branch_count","full_address_name","rubrics","ObjectCard","setIsDirectionCard","isCompaniesListOpen","window","ReactNativeWebView","postMessage","JSON","stringify","canBeSwiped","cardHeight","onSwipeUp","onSwipeDown","top","transition","subtype","setType","street","DirectionInputWrapper","StartPointWrapper","LocationIcon","Location","LocationInputWrapper","Line","EndPointWrapper","EndPoint","DirectionInput","onDirectionInputBack","DirectionCardWrapper","DirectionButtonsWrapper","DirectionButton","RouteTime","Distance","LetsGoButton","button","DirectionsLength","CheckIcon","Check","DirectionCard","faster","selectedDirection","setSelectedDirection","setFaster","shortest","setShortest","shorter","border","background","borderRadius","duration","toFixed","distance","ChangeLocation","setLon","setLat","position","zIndex","onSubmit","preventDefault","setLocationMarker","console","log","e","MyLocationButton","CustomButtonsWrapper","ZoomContainer","ZoomPlusButton","Plus","ZoomMinusButton","Minus","MapWrapper","memo","Mapgl","geolocation","useGeolocation","useRef","setMapgl","isObjectCardOpen","setIsObjectCardOpen","loadMapglAPI","loadMapgl","center","setMyLocation","longitude","latitude","handleMapClick","off","destroyPolygon","destroyMarkers","setSelectedObjects","lngLat","parsedPolygon","selection","buildPolygon","currentZoom","DirectionsAPI","lon1","lat1","lon2","lat2","output","makeApi","client","useApi","create","baseURL","timeout","headers","Accept","App","StoreWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b094152d.chunk.js","sourcesContent":["export enum ResponseObjectTypes {\n    branch = 'branch',\n    building = 'building',\n    street = 'street',\n    parking = 'parking',\n    station = 'station',\n    stationMetro = 'station.metro',\n    stationEntrance = 'station_entrance',\n    stationPlatform = 'station_platform',\n    attraction = 'attraction',\n    crossroad = 'crossroad',\n    gate = 'gate',\n    road = 'road',\n    route = 'route',\n    admDiv = 'adm_div',\n    admDivCity = 'adm_div.city',\n    admDivCountry = 'adm_div.country',\n    admDivDistrictArea = 'adm_div.district_area',\n    admDivDistrict = 'adm_div.district',\n    admDivDivision = 'adm_div.division',\n    admDivLivingArea = 'adm_div.living_area',\n    admDivPlace = 'adm_div.place',\n    admDivRegion = 'adm_div.region',\n    admDivSettlement = 'adm_div.settlement',\n    coordinates = 'coordinates',\n}\n","import mapglTypes from \"@2gis/mapgl/types/index\";\nimport { API } from \"api/index\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { Directions } from \"@2gis/mapgl-directions\";\nvar parse = require(\"wellknown\");\n\nexport class DirectionsStore {\n    rootStore: RootStore;\n    api: API;\n\n    @observable directionsAPI: Directions | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    loadDirections(mapgl: mapglTypes.Map) {\n        this.directionsAPI = new Directions(mapgl, {\n            directionsApiKey: process.env.REACT_APP_SEARCH_KEY as string,\n        });\n    }\n\n    getDirection(startPoint: number[], endPoint: number[], type: string) {\n        return this.api.directions\n            .getDirections(startPoint, endPoint, type)\n    }\n\n    buildDirection(startPoint: number[], endPoint: number[], type: string, color: string): Promise<any> {\n        return this.getDirection(startPoint, endPoint, type).then((res) => {\n            const parsedDirection = parse(res.data[0].route);\n            if (parsedDirection) {\n                this.rootStore.mapglStore.buildDirection(parsedDirection.coordinates, color);\n            }\n            return res;\n        });\n\n    }\n\n    destroyDirection() {\n        this.rootStore.mapglStore.destroyDirection();\n    }\n}\n","import { API } from \"api/index\";\nimport { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { ResultItem, SearchResponse } from \"api/interfaces/search.interface\";\n\nexport class SearchStore {\n  rootStore: RootStore;\n  api: API;\n  @observable searchResults: SearchResponse | null = null;\n  @observable currentObject: ResultItem | null = null;\n  //TODO: Replace any with the type\n  @observable branchesInBuilding: any | null = null;\n  @observable branchesInOrganization: SearchResponse | null = null;\n  @observable suggestionsResults: any = null;\n\n  constructor(rootStore: RootStore, api: API) {\n    this.rootStore = rootStore;\n    this.api = api;\n\n    makeObservable(this);\n  }\n\n  @action\n  async getSearchResults(\n    idType: string,\n    id: number,\n    sortPoint: [number, number]\n  ) {\n    const searchResults = await this.api.search.getSearchResults(\n      idType,\n      id,\n      sortPoint\n    );\n\n    runInAction(() => {\n      this.searchResults = searchResults.data as SearchResponse;\n    });\n    return searchResults.data as SearchResponse;\n  }\n\n  @action async getSuggestions(\n    inputValue: string,\n    sortPoint: [number, number]\n  ) {\n    const suggestionsResults = await this.api.search.getSuggestions(\n      inputValue,\n      sortPoint\n    );\n\n    const sortedItems: any[] = [];\n\n    if (suggestionsResults.data.result) {\n      suggestionsResults.data.result.items?.map((item: any) => {\n        if (item.type !== \"user_query\") {\n          sortedItems.push(item);\n        }\n      });\n\n      suggestionsResults.data.result.items = sortedItems;\n    }\n\n    runInAction(() => {\n      this.suggestionsResults = suggestionsResults.data;\n    });\n\n    return this.suggestionsResults;\n  }\n\n  @action\n  async getObjectById(id: string) {\n    const result = await this.api.search.getObjectById(id);\n\n    runInAction(() => {\n      this.currentObject = result.data as any;\n    });\n\n    return this.currentObject;\n  }\n\n  @action\n  async getBranchesByBuildingId(id: string) {\n    const result = await this.api.search.getBranchesByBuildingId(id);\n\n    runInAction(() => {\n      this.branchesInBuilding = result.data as any;\n    });\n    return this.branchesInBuilding;\n  }\n\n  @action\n  async getBranchesByOrganizationId(id: string) {\n    const result = await this.api.search.getBranchesByOrganizationId(id);\n\n    runInAction(() => {\n      this.branchesInOrganization = result.data as any;\n    });\n    return this.branchesInBuilding;\n  }\n\n  @action setCurrentObject(item: ResultItem): ResultItem {\n    if (item && item.address) {\n      this.getBranchesByBuildingId(item.address.building_id);\n      if (item.org) {\n        this.getBranchesByOrganizationId(item.org.id);\n      }\n    }\n    return (this.currentObject = item);\n  }\n\n  // TODO: refactored this\n  getObjectByGeo(sortPoint: [number, number]): any {\n    return this.api.search.getObjectByGeo(sortPoint);\n  }\n}\n","import { action, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { load } from \"@2gis/mapgl\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nexport class MapglStore {\n  rootStore: RootStore;\n  @observable mapglAPI: typeof mapglTypes | null = null;\n  @observable mapgl: mapglTypes.Map | null = null;\n  @observable markers: mapglTypes.Marker[] | [] = [];\n  @observable polygon: mapglTypes.Polygon | null = null;\n  @observable polyline: mapglTypes.Polyline | null = null;\n  @observable currentMarkerCoords: number[] | null = null;\n  @observable currentMarker: mapglTypes.Marker | null = null;\n  @observable locationMarker: mapglTypes.Marker | null = null;\n  @observable myLocation: number[] = [33.36166, 35.15753];\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action async loadMapglAPI(): Promise<any> {\n    this.mapglAPI = await load();\n  }\n\n  @action loadMapgl(\n    divId: string,\n    options: mapglTypes.MapOptions\n  ): mapglTypes.Map | null {\n    this.mapgl = this.mapglAPI\n      ? new this.mapglAPI.Map(divId, { ...options, zoomControl: false })\n      : null;\n    this.mapgl && this.rootStore.directionsStore.loadDirections(this.mapgl);\n    return this.mapgl;\n  }\n\n  @action setLocationMarker(coordinates: number[]) {\n    if (this.mapgl && this.mapglAPI) {\n      this.myLocation = coordinates;\n      this.locationMarker && this.locationMarker.destroy();\n      this.locationMarker = new this.mapglAPI.Marker(this.mapgl, {\n        coordinates\n      });\n      this.setCenter(coordinates as [number, number])\n    }\n  }\n\n  @action setMyLocation(coordinates: number[]): number[] {\n    return this.myLocation = coordinates;\n  }\n\n  @action buildMarker(\n    coords: number[],\n    isActive: boolean = false\n  ): mapglTypes.Marker | null {\n    if (this.mapgl && this.mapglAPI) {\n      const currentMarker = new this.mapglAPI.Marker(this.mapgl, {\n        coordinates: coords,\n        icon: isActive ? \"./red-marker.svg\" : './marker.svg'\n      });\n      this.markers.push(currentMarker as never);\n      return currentMarker;\n    }\n    return null;\n  }\n\n  @action setCurrentMarker(marker: mapglTypes.Marker): mapglTypes.Marker {\n    return this.currentMarker = marker;\n  }\n\n  @action buildPolygon(coordinates: number[][][]) {\n    this.polygon && this.polygon.destroy();\n\n    if (this.mapglAPI && this.mapgl) {\n      this.polygon = new this.mapglAPI.Polygon(this.mapgl, {\n        coordinates: coordinates,\n        interactive: false,\n      });\n    }\n  }\n\n  @action buildDirection(coordinates: number[][], color: string) {\n    this.destroyDirection();\n    if (this.mapglAPI && this.mapgl) {\n      this.polyline = new this.mapglAPI.Polyline(this.mapgl, {\n        coordinates: coordinates,\n        color\n      })\n    }\n  }\n\n  @action destroyDirection() {\n    this.polyline?.destroy();\n    this.polyline = null;\n  }\n\n  @action destroyPolygon() {\n    this.polygon?.destroy();\n    this.polygon = null;\n  }\n\n  @action destroyMarkers() {\n    this.markers.forEach(marker => {\n      marker.destroy();\n    });\n    this.markers = []\n  }\n\n  setCenter(coordinates: [number, number]) {\n    this.mapgl?.setCenter(coordinates);\n  }\n\n  getZoom(): number | undefined {\n    return this.mapgl?.getZoom();\n  }\n\n  setZoom(zoom: number) {\n    this.mapgl?.setZoom(zoom);\n  }\n\n  @action setCurrentMarkerCoords(coords: number[]): number[] {\n    return this.currentMarkerCoords = coords;\n  }\n}\n","import { DirectionsStore } from './DirectionsStore';\nimport { SearchStore } from './SearchStore';\nimport { MapglStore } from \"./MapglStore\";\nimport { API } from 'api';\n\nexport class RootStore {\n  api: API;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  directionsStore: DirectionsStore;\n\n\n  constructor(api: API) {\n    this.api = api;\n    this.mapglStore = new MapglStore(this);\n    this.searchStore = new SearchStore(this, api);\n    this.directionsStore = new DirectionsStore(this, api);\n  }\n}\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\n\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\n\nexport type StoreComponent = React.FC<{\n  store: RootStore;\n  children: React.ReactNode;\n}>;\n\nexport const StoreProvider: StoreComponent = ({\n  children,\n  store,\n}): React.ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"contexts/StoreContext\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const useRootStore = (): RootStore => useContext(StoreContext);\n\nexport const useMapglStore = () => {\n    const { mapglStore } = useRootStore();\n    return mapglStore;\n};\n\nexport const useSearchStore = () => {\n    const { searchStore } = useRootStore();\n    return searchStore;\n};\n\nexport const useDirectionsStore = () => {\n    const { directionsStore } = useRootStore();\n    return directionsStore;\n};","export default __webpack_public_path__ + \"static/media/burger.e78eec97.svg\";","export default __webpack_public_path__ + \"static/media/search.7e6201e0.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.ecccce44.svg\";","export default __webpack_public_path__ + \"static/media/cancel.140bb64c.svg\";","import Burger from \"assets/images/burger.svg\";\nimport Search from \"assets/images/search.svg\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Cancel from \"assets/images/cancel.svg\";\nimport { useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 95%;\n  height: 48px;\n  background: #ffffff;\n  border-radius: 30px;\n  border: #fffff;\n  display: flex;\n  margin: 0 auto;\n  margin-top: 50px;\n  left: 0;\n  right: 0;\n  margin-top: 50px;\n`;\n\nconst BurgerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 40px;\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 20px;\n  margin: 4px;\n`;\n\nconst BurgerIcon = styled.div`\n  background-image: url(${Burger});\n  width: 18px;\n  height: 12px;\n`;\n\nconst SearchIcon = styled.div`\n  background-image: url(${Search});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  margin-left: 27px;\n  margin-top: 10px;\n  border: 0;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst CancelIcon = styled.div`\n  background-image: url(${Cancel});\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  margin-top: 17px;\n`;\n\ninterface SeacrhInputProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n  setIsResultsOpen: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  destroyAll: () => void;\n}\n\nexport const SearchInput = ({\n  searchStore,\n  mapglStore,\n  searchInputRef,\n  setOpenObjectCard,\n  setIsEnterPressed,\n  setIsResultsOpen,\n  destroyAll,\n}: SeacrhInputProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    searchInputRef.current && setInputValue(searchInputRef.current?.value);\n    searchStore.getSuggestions(\n      event.target.value,\n      mapglStore.myLocation as [number, number]\n    );\n  };\n\n  return (\n    <SearchInputWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          setIsEnterPressed(true);\n        } else {\n          setIsEnterPressed(false);\n        }\n      }}\n      style={{\n        justifyContent: inputValue ? \"space-around\" : \"\",\n      }}\n      onClick={() => {\n        searchInputRef.current && searchInputRef.current.focus();\n      }}\n    >\n      {inputValue === \"\" && (\n        <BurgerWrapper>\n          <BurgerIcon></BurgerIcon>\n        </BurgerWrapper>\n      )}\n      {inputValue === \"\" && <SearchIcon></SearchIcon>}\n      <div style={{ display: \"flex\" }}>\n        {inputValue && (\n          <BackArrowIcon\n            onClick={() => {\n              setOpenObjectCard(false);\n            }}\n          />\n        )}\n        <Input\n          placeholder=\"Search\"\n          onChange={handleChange}\n          ref={searchInputRef}\n          onFocus={() => {\n            setIsInputFocused(true);\n            setIsResultsOpen(true);\n            setOpenObjectCard(false);\n            destroyAll();\n          }}\n          style={{\n            marginLeft: inputValue ? \"24px\" : \"27px\",\n          }}\n          onBlur={() => setIsInputFocused(false)}\n        ></Input>\n      </div>\n      {inputValue && (\n        <CancelIcon\n          onClick={() => {\n            if (searchInputRef.current?.value) {\n              searchInputRef.current.value = \"\";\n              destroyAll();\n              setOpenObjectCard(false);\n              setIsResultsOpen(false);\n            }\n          }}\n        />\n      )}\n    </SearchInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/black-marker.953d3c77.svg\";","export default __webpack_public_path__ + \"static/media/building.33b84d52.svg\";","export default __webpack_public_path__ + \"static/media/branch.267d7457.svg\";","export default __webpack_public_path__ + \"static/media/geo-object.ccba00f5.svg\";","export enum API_VERSIONS {\n    V2 = '2.0',\n    V3 = '3.0'\n}","import BaseAPI from \"./base\";\nimport { API_VERSIONS } from \"./enums/api-versions.enum\";\nimport { SearchResponse } from \"./interfaces/search.interface\";\n\nexport enum ID_TYPES {\n  district = 'district_id',\n  building = 'building_id',\n  city = 'city_id',\n  region = 'region_id',\n  rubric = 'rubric_id',\n  org = \"org_id\",\n  id = \"id\"\n}\n\nexport default class SearchAPI extends BaseAPI {\n  async getSearchResults(\n    idType: string,\n    id: number,\n    sortPoint: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?${idType}=${id}&sort_point=${sortPoint[0]},${sortPoint[1]}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org,items.full_address_name&page_size=50&radius=10000&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getSuggestions(inputValue: string,\n    sortPoint: [number, number]): Promise<any> {\n    const res = this.axios\n      .get(\n        `${API_VERSIONS.V3}/suggests?key=${process.env.REACT_APP_SEARCH_KEY}&q=${inputValue}&sort_point=${sortPoint[0]},${sortPoint[1]}&fields=items.name_ex,items.rubrics,items.org,items.adm_div,items.routes,items.type,items.subtype,items.address,items.search_attributes.personal_priority,items.search_attributes.dgis_source_type,items.segment_id,items.region_id,items.locale,items.group,items.context,search_attributes,items.flags,items.has_exchange&type=adm_div.region,adm_div.district_area,adm_div.city,adm_div.settlement,adm_div.district,adm_div.living_area,adm_div.division,adm_div.place,street,branch,building,road,attraction,crossroad,route,route_type,station,station.metro,user_queries,attribute,rubric,meta_rubric,org,market.category,market.attribute,market.suggestor_category`\n      )\n    return res;\n  }\n\n  async getObjectById(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items/byid?id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org&key=${process.env.REACT_APP_SEARCH_KEY}`\n    );\n    return res;\n  }\n\n  async getObjectByGeo(sortPoint: [number, number]) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/geo/search?key=${process.env.REACT_APP_SEARCH_KEY}&point=${sortPoint[0]},${sortPoint[1]}&type=adm_div.city,adm_div.region,adm_div.settlement,road,adm_div.district_area,adm_div.division,adm_div.district,street,adm_div.living_area,crossroad,building,adm_div.place,attraction,parking,poi&fields=items.locale,items.flags,search_attributes,items.adm_div,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype`\n    );\n    return res;\n  }\n\n  async getDirections(startPoint: { x: number, y: number }, endPoint: { x: number, y: number }) {\n    const res = await this.axios.post(`carrouting/6.0.0/global?key=${process.env.REACT_APP_SEARCH_KEY}`, {\n      points: [startPoint, endPoint]\n    })\n\n    return res;\n  }\n\n  async getBranchesByBuildingId(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items?building_id=${id}&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )\n    return res;\n  }\n\n  async getBranchesByOrganizationId(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/catalog/branch/list?org_id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org,items.full_address_name&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )\n    return res;\n  }\n}\n","import { AxiosInstance } from \"axios\";\n\nexport default class BaseAPI {\n  axios: AxiosInstance;\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n}\n","export enum PostMessageTypeEnum {\n    URL = 'url',\n    SHARE_INFO = 'share_info',\n}\n","import Marker from \"assets/images/black-marker.svg\";\nimport Building from \"assets/images/building.svg\";\nimport Branch from \"assets/images/branch.svg\";\nimport GeoObject from \"assets/images/geo-object.svg\";\nimport { ResponseObjectTypes } from \"enums/ResponseObjectTypes.enum\";\nimport { observer } from \"mobx-react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport { useEffect } from \"react\";\nimport { ID_TYPES } from \"api/search\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  position: absolute;\n  top: 120px;\n  z-index: 60;\n  width: 100%;\n  height: 1000px;\n  border-radius: 20px 20px 0px 0px;\n  overflow: scroll;\n`;\n\nconst ItemWrapper = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  border-top: 3px solid #fafafafa;\n`;\n\nconst ResultIcon = styled.p`\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-left: 22px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemName = styled.div`\n  margin-left: 29px;\n`;\n\nconst ItemDescription = styled.div`\n  margin-left: 29px;\n  color: rgba(0, 0, 0, 0.6);\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  font-size: 14px;\n`;\n\nconst NotFoundWrapper = styled.div`\n  margin-left: 16px;\n  margin-top: 39px;\n`;\n\nconst NotFoundTitle = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #000000;\n`;\n\nconst NotFoundDescription = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #000000;\n`;\n\ninterface ResultsProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  isEnterPressed: boolean;\n  destroyAll: () => void;\n  isResultsOpen: boolean;\n  setIsResultsOpen: (val: boolean) => void;\n  isDirectionCard: boolean;\n}\n\nexport const Results = observer(\n  ({\n    searchStore,\n    setOpenObjectCard,\n    mapglStore,\n    searchInputRef,\n    isEnterPressed,\n    destroyAll,\n    isResultsOpen,\n    setIsResultsOpen,\n    isDirectionCard,\n  }: ResultsProps) => {\n    const getIcon = (type: ResponseObjectTypes) => {\n      if (type === ResponseObjectTypes.branch) {\n        return Branch;\n      } else if (\n        type === ResponseObjectTypes.admDiv ||\n        type === ResponseObjectTypes.admDivCity ||\n        type === ResponseObjectTypes.admDivCountry ||\n        type === ResponseObjectTypes.admDivDistrict ||\n        type === ResponseObjectTypes.admDivDistrictArea ||\n        type === ResponseObjectTypes.admDivPlace ||\n        type === ResponseObjectTypes.admDivRegion ||\n        type === ResponseObjectTypes.admDivSettlement\n      ) {\n        return Marker;\n      } else if (type === ResponseObjectTypes.building) {\n        return Building;\n      } else {\n        return GeoObject;\n      }\n    };\n\n    const formatName = (name: string) => {\n      const MAX_NAME_LENGTH = 40;\n      const length = name.split(\"\").length;\n      return length >= MAX_NAME_LENGTH\n        ? name.slice(0, MAX_NAME_LENGTH) + \"...\"\n        : name;\n    };\n\n    const handleClick = async (item: any) => {\n      destroyAll();\n\n      if (item.type === \"rubric\" || item.type === \"metarubric\") {\n        const res = await searchStore.getSearchResults(\n          ID_TYPES.rubric,\n          item.id,\n          mapglStore.myLocation as [number, number]\n        );\n\n        res.result.items.map((item) => {\n          if (item.point) {\n            const marker = mapglStore.buildMarker([\n              item.point.lon,\n              item.point.lat,\n            ]);\n            marker?.on(\"click\", () => {\n              if (!isDirectionCard) {\n                mapglStore.currentMarker &&\n                  mapglStore.currentMarker.setIcon({ icon: \"./marker.svg\" });\n                mapglStore.setCurrentMarker(marker);\n                marker.setIcon({ icon: \"./red-marker.svg\" });\n                searchStore.setCurrentObject(item);\n                setOpenObjectCard(true);\n                mapglStore.setCurrentMarkerCoords([\n                  item.point.lon,\n                  item.point.lat,\n                ]);\n                mapglStore.setCenter([item.point.lon, item.point.lat]);\n              }\n            });\n          }\n        });\n        setIsResultsOpen(false);\n        // TODO fix types\n      } else {\n        const res: any = await searchStore.getObjectById(item.id);\n        const resultItem: ResultItem = res.result.items[0];\n\n        searchStore.setCurrentObject(resultItem);\n        mapglStore.buildMarker([resultItem.point.lon, resultItem.point.lat]);\n        mapglStore.setCenter([resultItem.point.lon, resultItem.point.lat]);\n        setOpenObjectCard(true);\n      }\n    };\n\n    useEffect(() => {\n      if (isEnterPressed && searchStore.searchResults?.result?.items?.length) {\n        searchStore.searchResults?.result?.items.map((item: ResultItem) => {\n          item.point &&\n            mapglStore.buildMarker([item.point.lon, item.point.lat]);\n        });\n        setIsResultsOpen(false);\n        searchInputRef.current?.blur();\n      }\n    }, [isEnterPressed]);\n\n    useEffect(() => {\n      if (!isResultsOpen && searchInputRef.current?.onfocus) {\n        searchInputRef.current.onfocus = () => {\n          !isResultsOpen && setIsResultsOpen(true);\n        };\n      }\n    }, [isResultsOpen, searchInputRef]);\n    return (\n      <>\n        {isResultsOpen && (\n          <Wrapper\n            style={{\n              display: searchInputRef?.current?.value ? \"flex\" : \"none\",\n            }}\n          >\n            {searchStore.suggestionsResults?.result?.items?.map((item: any) => {\n              return (\n                <ItemWrapper key={item.id} onClick={() => handleClick(item)}>\n                  <ResultIcon\n                    style={{\n                      backgroundImage: `url(${getIcon(item.type)})`,\n                    }}\n                  ></ResultIcon>\n                  <TextWrapper>\n                    <ItemName>{item?.name}</ItemName>\n                    <ItemDescription>{item?.full_name}</ItemDescription>\n                  </TextWrapper>\n                </ItemWrapper>\n              );\n            })}\n            {isEnterPressed && searchStore.searchResults?.meta.code === 404 && (\n              <NotFoundWrapper>\n                <NotFoundTitle>No Results Found</NotFoundTitle>\n                <NotFoundDescription>\n                  Try searching for something else, check for typos or rephrase\n                  it\n                </NotFoundDescription>\n              </NotFoundWrapper>\n            )}\n          </Wrapper>\n        )}\n      </>\n    );\n  }\n);\n","export const Places = [\n    {title: 'Company', type: 'branch'},\n    {title: 'Building', type: 'building'},\n    {title: 'Street', type: 'street'},\n    {title: 'Parking', type: 'parking'},\n    {title: 'Station', type: 'station'},\n    {title: 'Attraction', type: 'attraction'},\n    {title: 'Crossroad', type: 'crossroad'},\n    {title: 'Gate', type: 'gate'},\n    {title: 'Road', type: 'road'},\n    {title: 'Route', type: 'route'},\n    {title: 'Administrative Division', type: 'adm_div'},\n    {title: 'City', type: 'adm_div.city'},\n    {title: 'Country', type: 'adm_div.country'},\n    {title: 'District Area', type: 'adm_div.district_area'},\n    {title: 'District', type: 'adm_div.district'},\n    {title: 'Division', type: 'adm_div.division'},\n    {title: 'Living Area', type: 'adm_div.living_area'},\n    {title: 'Place', type: 'adm_div.place'},\n    {title: 'Region', type: 'adm_div.region'},\n    {title: 'Settlement', type: 'adm_div.settlement'},\n    {title: 'Coordinates', type: 'coordinates'},\n]\n","export default __webpack_public_path__ + \"static/media/arrow-left.5503f9f6.svg\";","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"assets/images/arrow-left.svg\";\nimport {useMapglStore, useSearchStore} from \"../hooks/store\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {ResultItem} from \"../api/interfaces/search.interface\";\nimport {MapglStore} from \"../stores/MapglStore\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: absolute;\n  z-index: 900;\n  background-color: #ffffff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 375px;\n  height: 64px;\n  margin-top: 10px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst HeaderTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst ArrowLeftIcon = styled.p`\n  background-image: url(${ArrowLeft});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin: 0 32px;\n`;\n\nconst CompanyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  height: 64px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst CompanyName = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-left: 16px;\n`;\n\nconst CompanyAdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-left: 16px;\n`;\n\nconst CompaniesContainer = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: scroll;\n`;\n\ninterface CompanyButton {\n    setIsOpen: (arg0: boolean) => void;\n    searchStore: SearchStore;\n    item: ResultItem;\n    mapglStore: MapglStore\n}\n\nconst CompanyButton: FC<CompanyButton> = ({setIsOpen, searchStore, item, mapglStore}) => {\n    const openCompanyCard = () => {\n        searchStore.getObjectById(item.id).then((res: any) => {\n            res &&\n            searchStore.setCurrentObject(res.result?.items[0]);\n            setIsOpen(false);\n        });\n    }\n    return (\n        <CompanyContainer onClick={() => openCompanyCard()}>\n            <CompanyName>{`${item.name}`}</CompanyName>\n            <CompanyAdditionalInfo>{`${item.address_comment || item.purpose_name}`}</CompanyAdditionalInfo>\n        </CompanyContainer>\n    );\n};\n\ninterface CompaniesListProps {\n    setIsOpen: (arg0: boolean) => void;\n}\n\nexport const CompaniesList: FC<CompaniesListProps> = ({setIsOpen}) => {\n    const searchStore = useSearchStore();\n    const mapglStore = useMapglStore();\n    return (\n        <Wrapper>\n            <Header>\n                <ArrowLeftIcon onClick={() => setIsOpen(false)}/>\n                <HeaderTitle>Companies</HeaderTitle>\n            </Header>\n            <CompaniesContainer>\n                {searchStore.branchesInBuilding.result.items.map((item: any) => (\n                    <CompanyButton key={item.id} item={item} setIsOpen={setIsOpen} searchStore={searchStore}\n                                   mapglStore={mapglStore}/>))}\n            </CompaniesContainer>\n        </Wrapper>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/green-marker.30aab809.svg\";","export default __webpack_public_path__ + \"static/media/building-icon.ba15730a.svg\";","export default __webpack_public_path__ + \"static/media/buildings-green.d86a6822.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.a70d4ef3.svg\";","export default __webpack_public_path__ + \"static/media/work-time.056843a8.svg\";","export default __webpack_public_path__ + \"static/media/phone.0d461ee9.svg\";","export default __webpack_public_path__ + \"static/media/internet.dab33b8c.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.cc14feef.svg\";","export default __webpack_public_path__ + \"static/media/share.4a856fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-button.510f85c7.svg\";","export default __webpack_public_path__ + \"static/media/entrance.4362b935.svg\";","export default __webpack_public_path__ + \"static/media/facebook.5e19df6c.svg\";","export default __webpack_public_path__ + \"static/media/instagram.a062d315.svg\";","import styled from \"styled-components\";\nimport GreenMarker from \"../assets/images/green-marker.svg\";\nimport Building from \"../assets/images/building-icon.svg\";\nimport Buildings from \"../assets/images/buildings-green.svg\";\nimport ArrowRight from \"../assets/images/arrow-right.svg\";\nimport WorkTime from \"../assets/images/work-time.svg\";\nimport Phone from \"../assets/images/phone.svg\";\nimport Internet from \"../assets/images/internet.svg\";\nimport ArrowDown from \"../assets/images/arrow-down.svg\";\nimport Share from \"../assets/images/share.svg\";\nimport Button from \"../assets/images/icon-button.svg\";\nimport Entrance from \"../assets/images/entrance.svg\";\nimport Facebook from \"../assets/images/facebook.svg\";\nimport Instagram from \"../assets/images/instagram.svg\";\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  justify-content: flex-start;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  border-radius: 20px 20px 0px 0px;\n  transition-property: height;\n  transition-duration: 0.3s;\n  z-index: 60;\n`;\n\nexport const Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: rgba(33, 33, 33, 0.08);\n`;\n\nexport const UpperInfo = styled.div`\n  display: flex;\n  margin: 9px 24px 11px 24px;\n`;\n\nexport const BottomInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 18px 24px;\n`;\n\nexport const PlaceTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  margin-bottom: 1px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 250px\n`;\n\nexport const PlaceInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const PlaceInfo = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const BottomText = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 68%;\n  margin-right: 11px;\n`;\n\nexport const GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-right: 16px;\n`;\n\nexport const BuildingIcon = styled.p`\n  background-image: url(${Building});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const BuildingsIcon = styled.p`\n  background-image: url(${Buildings});\n  height: 19px;\n  width: 22px;\n  margin-right: 16px;\n  margin-left: 27px;\n  margin-bottom: 7%;\n`;\n\nexport const ArrowRightIcon = styled.p`\n  background-image: url(${ArrowRight});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin-right: 24px;\n`;\n\nexport const WorkTimeIcon = styled.p`\n  background-image: url(${WorkTime});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const PhoneIcon = styled.p`\n  background-image: url(${Phone});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const InternetIcon = styled.p`\n  background-image: url(${Internet});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const EntranceIcon = styled.p`\n  background-image: url(${Entrance});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const ArrowDownIcon = styled.p`\n  background-image: url(${ArrowDown});\n  background-repeat: no-repeat;\n  width: 14px;\n  height: 12px;\n  margin-right: 28px;\n`;\n\nexport const ShareIcon = styled.p`\n  background-image: url(${Share});\n  height: 18px;\n  width: 18px;\n`;\n\nexport const InstagramIcon = styled.p`\n  background-image: url(${Instagram});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const FacebookIcon = styled.p`\n  background-image: url(${Facebook});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const SocialNetworkIconsContainer = styled.div`\ndisplay: flex;\n`;\n\nexport const IconButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const IconButton = styled.p`\n  background-image: url(${Button});\n  width: 70px;\n  height: 70px;\n  display: flex;\n  position: absolute;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  margin-right: 13px;\n`;\n\nexport const SwipeIndicator = styled.div`\nwidth: 36px;\nmin-height: 4px;\nborder-radius: 4px;\nbackground: #DBDBDB;\nmargin: 8px auto;\n`;\n\nexport const AdditionalInfo = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 14px;\nline-height: 20px;\nletter-spacing: 0.25px;\ncolor: rgba(0, 0, 0, 0.6);\n`\n\nexport const Title = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 16px;\nletter-spacing: 1.25px;\ntext-transform: uppercase;\ncolor: rgba(0, 0, 0, 0.6);\nmargin: 16px;\n`\n\nexport const CompanyContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 32px;\n`\nexport const AllBranchesContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n  border-bottom: solid 2px rgba(33,33,33,0.08);\n`\nexport const BranchesTitle = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 16px;\nline-height: 24px;\nletter-spacing: 0.15px;\ncolor: rgba(0, 0, 0, 0.87);\n  margin: 6px 16px 11px 16px;\n`\nexport const BranchesCount = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 24px;\nletter-spacing: 0.1px;\ncolor: rgba(0, 0, 0, 0.87);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nexport const CategoriesItem = styled.div`\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 16px;\n  height: 32px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n`\n\nexport const CategoriesItemText = styled.div`\n  font-family: Intel;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 6px 12px;\n`\n\nexport const CategoriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 16px 100px 16px;\n`\n\n","import React, {FC} from \"react\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {\n    AdditionalInfo,\n    ArrowRightIcon,\n    BottomInfo,\n    BottomText,\n    BuildingIcon,\n    BuildingsIcon,\n    Divider,\n    GreenMarkerIcon,\n    ShareIcon,\n    Title\n} from \"../styles/cardStyles\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface BuildingCardProps {\n    isOpen: boolean;\n    searchStore: SearchStore;\n    routTime?: string;\n    setCompaniesListIsOpen: (arg0: boolean) => void;\n    shareData: (arg0: PostMessageData) => void;\n    mapglStore: MapglStore;\n    coordinates: [number, number];\n}\n\nexport const BuildingCard: FC<BuildingCardProps> = ({\n                                                        isOpen,\n                                                        searchStore,\n                                                        routTime,\n                                                        setCompaniesListIsOpen,\n                                                        shareData,\n                                                        mapglStore,\n                                                        coordinates\n                                                    }) => {\n    return (\n        <>\n            {searchStore.currentObject?.address ? <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\"})}/> : null}\n            </BottomInfo> : <BottomInfo>\n                <GreenMarkerIcon/>\n                <BottomText>\n                    {searchStore.currentObject?.full_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\"})}/> : null}\n            </BottomInfo>}\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {searchStore.currentObject?.links?.branches?.count && isOpen ?\n                (\n                    <div>\n                        <Divider style={{\n                            height: \"2px\",\n                        }}/>\n                        <Title>Сompanies</Title>\n                        <BottomInfo onClick={() => setCompaniesListIsOpen(true)} style={{\n                            height: \"72px\",\n                            width: \"100%\",\n                            borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                            alignItems: \"center\",\n                            margin: \"18px 0\",\n                        }}>\n                            <BuildingsIcon/>\n                            <div style={{\n                                width: \"360px\",\n                            }}>\n                                <BottomText>All Companies</BottomText>\n                                <AdditionalInfo>{`${searchStore.currentObject?.links?.branches?.count} companies`}</AdditionalInfo>\n                            </div>\n                            <ArrowRightIcon/>\n                        </BottomInfo>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n","export enum ContactTypes {\n    Email = 'email',\n    Website = 'website',\n    Phone = 'phone',\n    Fax = 'fax',\n    Icq = 'icq',\n    Jabber = 'jabber',\n    Skype = 'skype',\n    Vkontakte = 'vkontakte',\n    Twitter = 'twitter',\n    Instagram = 'instagram',\n    Facebook = 'facebook',\n    Pobox = 'pobox',\n    Youtube = 'youtube',\n    Odnoklassniki = 'odnoklassniki',\n    Googleplus = 'googleplus',\n    Linkedin = 'linkedin',\n    Pinterest = 'pinterest',\n    Whatsapp = 'whatsapp',\n    Telegram = 'telegram',\n    Viber = 'viber'\n}\n","import {BottomInfo, BottomText, GreenMarkerIcon, ShareIcon,} from \"../styles/cardStyles\";\nimport {FC} from \"react\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface AdministrativeDivisionCardProps {\n  isOpen: boolean;\n  searchStore: SearchStore;\n  shareData: (arg0: PostMessageData) => void;\n  mapglStore: MapglStore;\n  coordinates: [number, number];\n}\n\nexport const AdministrativeDivisionCard: FC<AdministrativeDivisionCardProps> =\n  ({ isOpen, searchStore, shareData, mapglStore,coordinates }) => {\n    return (\n      <>\n        {searchStore.currentObject?.address ? (\n          <BottomInfo>\n            <GreenMarkerIcon />\n            <BottomText>\n              {searchStore.currentObject?.address?.postcode &&\n                searchStore.currentObject.address?.postcode + \", \"}\n              {searchStore.currentObject?.address_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareData(\n                      {type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject\n                            ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                            : \"\"}\n                  )\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        ) : (\n          <BottomInfo>\n            <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)} />\n            <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n              {searchStore.currentObject?.full_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareData(\n                      {type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject\n                            ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                            : \"\"}\n                  )\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        )}\n      </>\n    );\n  };\n","import { FC, useEffect, useState } from \"react\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport {\n  AllBranchesContainer,\n  ArrowDownIcon,\n  ArrowRightIcon,\n  BottomInfo,\n  BottomText,\n  BranchesCount,\n  BranchesTitle,\n  BuildingIcon,\n  BuildingsIcon,\n  CategoriesContainer,\n  CategoriesItem,\n  CategoriesItemText,\n  CompanyContainer,\n  Divider,\n  EntranceIcon,\n  FacebookIcon,\n  GreenMarkerIcon,\n  InstagramIcon,\n  InternetIcon,\n  PhoneIcon,\n  ShareIcon,\n  SocialNetworkIconsContainer,\n  Title,\n  WorkTimeIcon,\n} from \"../styles/cardStyles\";\nimport { MapglStore } from \"../stores/MapglStore\";\nimport { ContactTypes } from \"../enums/ContactTypes.enum\";\nimport { Contact, ResultItem } from \"../api/interfaces/search.interface\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\n\nvar parse = require(\"wellknown\");\n\ninterface OrganizationCartProps {\n  searchStore: SearchStore;\n  isSwipeOpen: boolean;\n  setSwipeIsOpen: (arg0: boolean) => void;\n  setCompaniesListIsOpen: (arg0: boolean) => void;\n  mapglStore: MapglStore;\n  shareData: (arg0: PostMessageData) => void;\n  coordinates: [number, number];\n}\n\nexport const OrganizationCart: FC<OrganizationCartProps> = ({\n  searchStore,\n  isSwipeOpen,\n  setCompaniesListIsOpen,\n  mapglStore,\n  setSwipeIsOpen,\n  shareData,\n  coordinates,\n}) => {\n  let instagramLink = \"\";\n  let facebookLink = \"\";\n  const showEntrance = () => {\n    let entrance = parse(\n      searchStore.currentObject?.links?.entrances[0].geometry.points[0]\n    ).coordinates;\n    mapglStore.buildMarker(entrance);\n    mapglStore.setCenter(entrance);\n    mapglStore.setZoom(18);\n    setSwipeIsOpen(false);\n  };\n\n  const contactTypeChecker = (contactType: ContactTypes) => {\n    if (searchStore.currentObject?.contact_groups)\n      return searchStore.currentObject?.contact_groups[0].contacts.some(\n        (item) => item.type === contactType\n      );\n  };\n\n  const Contacts = (contactType: ContactTypes) => {\n    //TODO:: Refactor this function\n    let arr: Contact[] = [];\n    if (!!searchStore.currentObject?.contact_groups) {\n      searchStore.currentObject?.contact_groups.forEach((item) =>\n        item.contacts.forEach((contact) => {\n          if (contact.type === ContactTypes.Instagram) {\n            instagramLink = contact.url;\n          }\n          if (contact.type === ContactTypes.Facebook) {\n            facebookLink = contact.url;\n          }\n          arr.push(contact);\n        })\n      );\n      return arr.map((item: any, index) => {\n        if (item.type === contactType) {\n          if (item.type === ContactTypes.Website) {\n            return (\n              <BottomText\n                onClick={() =>\n                  shareData({ type: PostMessageTypeEnum.URL, data: item.url })\n                }\n                key={item.value}\n              >{`${item.text}`}</BottomText>\n            );\n          }\n          return <BottomText key={item.value}>{`${item.text}`}</BottomText>;\n        }\n      });\n    }\n  };\n\n  const openCompanyCard = (id: string) => {\n    searchStore.getObjectById(id).then((res: any) => {\n      res && searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n      setSwipeIsOpen(false);\n    });\n  };\n\n  const [workingTime, setWorkingTime] = useState([]);\n\n  const getCurrentDay = () => {\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    let d = new Date();\n    let n = d.getDay();\n\n    // @ts-ignore\n    searchStore.currentObject?.schedule && setWorkingTime([searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.from,searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.to,]);\n  };\n\n  useEffect(() => {\n    getCurrentDay();\n  }, [searchStore.currentObject?.schedule]);\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: isSwipeOpen ? \"scroll\" : \"hidden\"\n        }}>\n            <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.full_name ? searchStore.currentObject?.full_name + \", \" : null}\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isSwipeOpen ? <ShareIcon onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ? searchStore.currentObject.id : \"\"})}/> : null}\n            </BottomInfo>\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {isSwipeOpen ?\n                <>\n                    {searchStore.currentObject?.links?.entrances ? <BottomInfo onClick={() => showEntrance()}>\n                        <EntranceIcon/>\n                        <BottomText style={{\n                            color: \"#23B064\"\n                        }}>Show entrance on map</BottomText>\n                    </BottomInfo> : null}\n                    {searchStore.currentObject?.schedule ? <BottomInfo>\n                        <WorkTimeIcon/>\n                        <BottomText>{`Daily ${workingTime[0]} — \n                        ${workingTime[1]} Open`}</BottomText>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Phone) ? <BottomInfo>\n                        <PhoneIcon/>\n                        <div style={{\n                            width: \"100%\",\n                        }}>\n                            {Contacts(ContactTypes.Phone)}\n                        </div>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Website) ? <BottomInfo>\n                        <InternetIcon/>\n                        <div>\n                            {Contacts(ContactTypes.Website)}\n                            <SocialNetworkIconsContainer>\n                                {contactTypeChecker(ContactTypes.Instagram) ? <InstagramIcon onClick={() => shareData({type: PostMessageTypeEnum.URL, data: instagramLink})}/> : null}\n                                {contactTypeChecker(ContactTypes.Facebook) ? <FacebookIcon onClick={() => shareData({type: PostMessageTypeEnum.URL, data: facebookLink})}/> : null}\n                            </SocialNetworkIconsContainer>\n                        </div>\n                    </BottomInfo> : null}\n                    {parseInt(searchStore.currentObject?.org?.branch_count as string) > 1 ?\n                        <div>\n                            <Divider style={{\n                                height: \"2px\",\n                            }}/>\n                            <Title>other branches</Title>\n                            <BottomInfo style={{\n                                width: \"100%\",\n                                borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                                margin: \"18px 0 6px 0\",\n                            }}>\n                                <BuildingsIcon/>\n                                <div style={{\n                                    width: \"100%\",\n                                }}>\n                                    {searchStore.branchesInOrganization?.result.items.map((item: any) => {\n                                        return (\n                                            <CompanyContainer key={item.id} onClick={() => {\n                                                openCompanyCard(item.id);\n                                            }}>\n                                                <BottomText>{`${item.full_address_name}, ${item.address.postcode}`}</BottomText>\n                                                <ArrowRightIcon/>\n                                            </CompanyContainer>\n                                        );\n                                    })}\n                                </div>\n                            </BottomInfo>\n                        </div>\n                        : null}\n                    {!!searchStore.currentObject?.links?.branches ?\n                        <>\n                        <AllBranchesContainer onClick={() => {\n                            setCompaniesListIsOpen(true);\n                            setSwipeIsOpen(false);\n                        }}>\n                            <BranchesTitle>All companies</BranchesTitle>\n                            <BranchesCount>\n                                <div style={{\n                                    margin: \"0 8px\"\n                                }}>{searchStore.currentObject?.links?.branches?.count}</div>\n                                <ArrowDownIcon/>\n                            </BranchesCount>\n                        </AllBranchesContainer>\n                        </> : null}\n                    <Title>categories</Title>\n                    {searchStore.currentObject?.rubrics ? <CategoriesContainer>\n                        {searchStore.currentObject.rubrics.map((item) => {\n                            return (\n                                <CategoriesItem key={item.id}>\n                                    <CategoriesItemText>{item.name}</CategoriesItemText>\n                                </CategoriesItem>\n                            )\n                        })}\n                    </CategoriesContainer> : null}\n                </> : null}\n        </div>\n    );\n}\n","import styled from \"styled-components\";\nimport Check from \"assets/images/check.svg\";\nimport { useEffect, useState } from \"react\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst DirectionCardWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 52;\n  width: 100%;\n  height: 220px;\n  text-align: center;\n`;\n\nconst DirectionButtonsWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: 10px 16px 0 16px;\n  margin-bottom: 24px;\n`;\n\nconst DirectionButton = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 50% 50;\n  padding: 9px;\n`;\n\nconst RouteTime = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst Distance = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst LetsGoButton = styled.button`\n  width: 315px;\n  height: 48px;\n  background: #23b064;\n  border-radius: 12px;\n  margin-bottom: 10px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst DirectionsLength = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst CheckIcon = styled.div`\n  background-image: url(${Check});\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100%;\n  height: 20px;\n`;\n\nenum DirectionType {\n  faster = \"jam\",\n  shorter = \"shortest\",\n}\n\ninterface DirectionCardProps {\n  directionsStore: DirectionsStore;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n}\n\nexport const DirectionCard = observer(\n  ({ directionsStore, searchStore, mapglStore }: DirectionCardProps) => {\n    const [selectedDirection, setSelectedDirection] = useState(\n      DirectionType.faster\n    );\n\n    const [faster, setFaster] = useState<any>(null);\n    const [shortest, setShortest] = useState<any>(null);\n\n    const buildDirection = (\n      endPoint: number[],\n      type: string,\n      color: string\n    ): Promise<any> => {\n      return directionsStore.buildDirection(\n        mapglStore.myLocation,\n        endPoint,\n        type,\n        color\n      );\n    };\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        (mapglStore.currentMarkerCoords || searchStore.currentObject.point) &&\n        buildDirection(\n          mapglStore.currentMarkerCoords || [\n            searchStore.currentObject.point.lon,\n            searchStore.currentObject.point.lat,\n          ],\n          selectedDirection,\n          selectedDirection === DirectionType.faster ? \"#23B064\" : \"#BBD4EC\"\n        ).then((res) => {\n          searchStore.currentObject &&\n            (mapglStore.currentMarkerCoords ||\n              searchStore.currentObject.point) &&\n            directionsStore\n              .getDirection(\n                mapglStore.myLocation,\n                mapglStore.currentMarkerCoords || [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.faster\n              )\n              .then((res) => {\n                setFaster(res.data[0]);\n              });\n\n          searchStore.currentObject &&\n            (mapglStore.currentMarkerCoords ||\n              searchStore.currentObject.point) &&\n            directionsStore\n              .getDirection(\n                mapglStore.myLocation,\n                mapglStore.currentMarkerCoords || [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.shorter\n              )\n              .then((res) => {\n                setShortest(res.data[0]);\n              });\n        });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedDirection, directionsStore, searchStore.currentObject]);\n\n    return (\n      <DirectionCardWrapper>\n        <DirectionButtonsWrapper>\n          <DirectionButton\n            onClick={() => {\n              selectedDirection !== DirectionType.faster &&\n                mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.faster);\n            }}\n            style={\n              selectedDirection === DirectionType.faster\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(shortest?.duration / 60).toFixed(1)} min</RouteTime>\n            <CheckIcon />\n            <Distance>{(shortest?.distance / 1000).toFixed(1)} km</Distance>\n            <div>shorter </div>\n          </DirectionButton>\n          <DirectionButton\n            onClick={() => {\n              selectedDirection !== DirectionType.shorter &&\n                mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.shorter);\n            }}\n            style={\n              selectedDirection === DirectionType.shorter\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(faster?.duration / 60).toFixed(1)} min</RouteTime>\n            <div></div>\n            <Distance>{(faster?.distance / 1000).toFixed(1)} km</Distance>\n            <div>faster </div>\n          </DirectionButton>\n        </DirectionButtonsWrapper>\n        <LetsGoButton>Let`s go</LetsGoButton>\n        <DirectionsLength>You have 28 routes left</DirectionsLength>\n      </DirectionCardWrapper>\n    );\n  }\n);\n","import {FC, useState} from \"react\";\nimport {SearchStore} from \"stores/SearchStore\";\nimport Swipe from \"react-easy-swipe\";\nimport {Places} from \"../assets/data/places\";\nimport {CompaniesList} from \"./CompaniesList\";\nimport {ResponseObjectTypes} from \"../enums/ResponseObjectTypes.enum\";\nimport {BuildingCard} from \"./BuildingCard\";\nimport {AdministrativeDivisionCard} from \"./AdministarativeDivisionCard\";\nimport {\n    ArrowDownIcon,\n    Divider,\n    IconButton,\n    IconButtonContainer,\n    PlaceInfo,\n    PlaceInfoWrapper,\n    PlaceTitle,\n    ShareIcon,\n    SwipeIndicator,\n    UpperInfo,\n    Wrapper\n} from \"../styles/cardStyles\";\nimport {OrganizationCart} from \"./OrganizationCart\";\nimport {observer} from \"mobx-react\";\nimport {MapglStore} from \"stores/MapglStore\";\nimport {PostMessageData} from \"../api/interfaces/postMassage.interface\";\nimport {PostMessageTypeEnum} from \"../enums/PostMessageType.enum\";\n\ninterface ObjectCardProps {\n    searchStore: SearchStore;\n    mapglStore: MapglStore;\n    routTime?: string;\n    setIsDirectionCard: (value: boolean) => void;\n}\n\nexport const ObjectCard: FC<ObjectCardProps> = observer(\n  ({\n    searchStore,\n    mapglStore,\n    routTime,\n    setIsDirectionCard,\n  }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isCompaniesListOpen, setCompaniesListIsOpen] = useState(false);\n\n    const shareData = (data: PostMessageData) => {\n      window.ReactNativeWebView &&\n        window.ReactNativeWebView.postMessage(JSON.stringify(data));\n    };\n\n    const canBeSwiped =\n      searchStore.currentObject?.type === ResponseObjectTypes.branch ||\n      searchStore.currentObject?.type === ResponseObjectTypes.building;\n\n    const setType = (type?: string) => {\n      for (let item of Places) {\n        if (type === item.type) {\n          return item.title;\n        }\n      }\n      return \"\";\n    };\n\n    const cardHeight = searchStore.currentObject?.floors || searchStore.currentObject?.links?.branches?.count ? \"28%\" : \"21%\"\n\n    return (\n      <>\n        <Wrapper\n          style={{\n            display: searchStore.currentObject ? \"flex\" : \"none\",\n            height: isOpen ? \"95%\" : cardHeight,\n          }}\n        >\n          <Swipe\n            onSwipeUp={() => {\n              setIsOpen(canBeSwiped);\n            }}\n            onSwipeDown={() => {\n              setIsOpen(false);\n            }}\n          >\n            <IconButtonContainer\n              onClick={() => {\n                setIsDirectionCard(true);\n              }}\n            >\n              <IconButton\n                style={{\n                  top: isOpen ? \"75vh\" : \"-35px\",\n                  transition: \"top 0.3s\",\n                }}\n              />\n            </IconButtonContainer>\n            {canBeSwiped ? <SwipeIndicator /> : null}\n            <UpperInfo\n              style={{\n                flexDirection: isOpen ? \"row\" : \"column\",\n                justifyContent: isOpen ? \"space-around\" : \"\",\n                alignItems: isOpen ? \"center\" : \"\",\n              }}\n            >\n              {isOpen ? (\n                <ArrowDownIcon onClick={() => setIsOpen(false)} />\n              ) : null}\n              <PlaceTitle>\n                {searchStore.currentObject?.name\n                  ? searchStore.currentObject?.name\n                  : \"Utility structure\"}\n              </PlaceTitle>\n              {!isOpen ? (\n                <PlaceInfoWrapper>\n                  <PlaceInfo>\n                    {searchStore.currentObject?.subtype ||\n                      searchStore.currentObject?.purpose_name ||\n                      setType(searchStore.currentObject?.type)}\n                  </PlaceInfo>\n                  <PlaceInfo>{routTime}</PlaceInfo>\n                </PlaceInfoWrapper>\n              ) : (\n                <ShareIcon\n                  onClick={() => shareData({type: PostMessageTypeEnum.SHARE_INFO, data: searchStore.currentObject ?\n                          searchStore.currentObject.type === ResponseObjectTypes.building ? searchStore.currentObject?.address.building_id : searchStore.currentObject.id\n                          : \"\"})}\n                  style={{ marginLeft: \"11px\" }}\n                />\n              )}\n            </UpperInfo>\n            <Divider />\n          </Swipe>\n          {searchStore.currentObject?.type === ResponseObjectTypes.building ? (\n            <BuildingCard\n              shareData={shareData}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[searchStore.currentObject.point?.lon, searchStore.currentObject.point?.lat]}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.admDiv ||\n          searchStore.currentObject?.type === ResponseObjectTypes.street ? (\n            <AdministrativeDivisionCard\n              shareData={shareData}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[searchStore.currentObject.point?.lon, searchStore.currentObject.point?.lat]}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.branch ? (\n            <OrganizationCart\n              shareData={shareData}\n              setSwipeIsOpen={setIsOpen}\n              mapglStore={mapglStore}\n              searchStore={searchStore}\n              isSwipeOpen={isOpen}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n              coordinates={[searchStore.currentObject.point?.lon, searchStore.currentObject.point?.lat]}\n            />\n          ) : null}\n        </Wrapper>\n        {isCompaniesListOpen && (\n          <CompaniesList setIsOpen={setCompaniesListIsOpen} />\n        )}\n      </>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/myLocation.ff902024.svg\";","export default __webpack_public_path__ + \"static/media/location.d2150911.svg\";","import styled from \"styled-components\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Location from \"assets/images/location.svg\";\nimport GreenMarker from \"assets/images/green-marker.svg\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\n\nconst DirectionInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 144px;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StartPointWrapper = styled.div`\n  display: flex;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 10px;\n  margin-top: 40px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  border: 0;\n  margin-left: 19px;\n`;\n\nconst LocationIcon = styled.div`\n  background-image: url(${Location});\n  width: 24px;\n  height: 24px;\n`;\n\nconst LocationInputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 16px;\n  margin-top: 36px;\n  max-height: 40px;\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  top: 87px;\n  left: 90px;\n  height: 1px;\n  width: 100%;\n  background: rgba(33, 33, 33, 0.08);\n`;\n\nconst EndPointWrapper = styled.div`\n  margin-top: 42px;\n  margin-left: 44px;\n  display: flex;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst EndPoint = styled.div`\n  margin-left: 19px;\n`;\n\ninterface DirectionInputProps {\n  searchStore: SearchStore;\n  onDirectionInputBack: () => void;\n}\n\nexport const DirectionInput = observer(\n  ({ searchStore, onDirectionInputBack }: DirectionInputProps) => {\n    const backHandler = () => {\n      onDirectionInputBack();\n    };\n\n    return (\n      <DirectionInputWrapper>\n        <StartPointWrapper>\n          <BackArrowIcon onClick={backHandler} />\n          <LocationInputWrapper>\n            <LocationIcon />\n            <Input placeholder=\"Your location\" />\n          </LocationInputWrapper>\n        </StartPointWrapper>\n        <Line />\n        <EndPointWrapper>\n          <GreenMarkerIcon />\n          <EndPoint>\n            {(searchStore.currentObject?.address_name &&\n              searchStore.currentObject.address?.postcode &&\n              searchStore.currentObject.address_name +\n                \", \" +\n                searchStore.currentObject.address?.postcode) ||\n              searchStore.currentObject?.name ||\n              searchStore.currentObject?.full_name}\n          </EndPoint>\n        </EndPointWrapper>\n      </DirectionInputWrapper>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/check.534132f2.svg\";","export default __webpack_public_path__ + \"static/media/zoom-plus.b4f42d51.svg\";","export default __webpack_public_path__ + \"static/media/zoom-minus.29cdd6d7.svg\";","import { useMapglStore } from \"hooks/store\";\nimport { useState } from \"react\";\n\nexport const ChangeLocation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n\n  const mapglStore = useMapglStore();\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    mapglStore.setLocationMarker([+lon, +lat]);\n    console.log([+lon, +lat]);\n    \n    setIsOpen(false);\n  };\n  return (\n    <div style={{ position: \"absolute\", zIndex: 999 }}>\n      {isOpen ? (\n        <form onSubmit={handleSubmit}>\n          <input placeholder=\"lon\" onChange={(e) => setLon(e.target.value)} />\n          <input placeholder=\"lat\" onChange={(e) => setLat(e.target.value)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      ) : (\n        <button onClick={() => setIsOpen(true)}>Change location</button>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @ts-ignore\nimport { useDirectionsStore, useMapglStore, useSearchStore } from \"hooks/store\";\nimport { useEffect, useRef, useState } from \"react\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nimport { SearchInput } from \"./SearchInput\";\nimport { Results } from \"./Results\";\nimport styled from \"styled-components\";\nimport { ObjectCard } from \"./ObjectsCard\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport myLocation from \"../assets/images/myLocation.svg\";\nimport { DirectionInput } from \"./DirectionInput\";\nimport { DirectionCard } from \"./DirectionCard\";\nimport Plus from \"../assets/images/zoom-plus.svg\";\nimport Minus from \"../assets/images/zoom-minus.svg\";\nimport React from \"react\";\nimport { ChangeLocation } from \"./ChangeLocation\";\nimport { observer } from \"mobx-react\";\nimport useGeolocation from \"react-hook-geolocation\";\nvar parse = require(\"wellknown\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Map = styled.div`\n  width: 100vh;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst MyLocationButton = styled.div`\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  top: 55%;\n  left: 83%;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${myLocation});\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst CustomButtonsWrapper = styled.div`\n  position: fixed;\n  top: 40%;\n  left: 83%;\n  height: 165px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ZoomContainer = styled.div`\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.15))\n    drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.06));\n`;\n\nconst ZoomPlusButton = styled.div`\n  width: 46px;\n  height: 46px;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${Plus});\n  border-radius: 10px 10px 0px 0px;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst ZoomMinusButton = styled.div`\n  width: 46px;\n  height: 46px;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${Minus});\n  border-radius: 0px 0px 10px 10px;\n  margin-top: 4px;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst MapWrapper = React.memo(\n  () => {\n    return <Map id=\"container\"></Map>;\n  },\n  () => true\n);\n\nexport const Mapgl = observer(() => {\n  const mapglStore = useMapglStore();\n  const searchStore = useSearchStore();\n  const directionsStore = useDirectionsStore();\n  const geolocation = useGeolocation();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [mapgl, setMapgl] = useState<mapglTypes.Map | null>(null);\n  const [isObjectCardOpen, setIsObjectCardOpen] = useState(false);\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isDirectionCard, setIsDirectionCard] = useState(false);\n  const [isResultsOpen, setIsResultsOpen] = useState(true);\n\n  useEffect((): (() => void) => {\n    mapglStore.loadMapglAPI().then(() => {\n      setMapgl(\n        mapglStore.loadMapgl(\"container\", {\n          center: mapglStore.myLocation as [number, number],\n          zoom: 13,\n          key: process.env.REACT_APP_TWOGIS_KEY,\n        })\n      );\n      mapglStore.setLocationMarker(mapglStore.myLocation as [number, number]);\n    });\n\n    return () => mapgl && mapgl.destroy();\n  }, []);\n\n  useEffect(() => {\n    if (mapglStore.locationMarker) {\n      mapglStore.locationMarker.destroy();\n    }\n    mapglStore.setMyLocation([geolocation.longitude, geolocation.latitude]);\n    mapglStore.setCenter([geolocation.longitude, geolocation.latitude]);\n    mapglStore.setLocationMarker([geolocation.longitude, geolocation.latitude]);\n  }, [geolocation.longitude, geolocation.latitude]);\n\n  useEffect(() => {\n    mapgl && mapgl.on(\"click\", handleMapClick);\n\n    return () => {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    };\n  });\n\n  // TODO move it to store\n\n  const destroyAll = () => {\n    mapglStore.destroyPolygon();\n    mapglStore.destroyMarkers();\n    mapglStore.destroyDirection();\n    mapgl && mapgl.setSelectedObjects([]);\n  };\n\n  const handleMapClick = (data: mapglTypes.MapPointerEvent) => {\n    searchInputRef && searchInputRef.current?.blur();\n    if (!isDirectionCard) {\n      destroyAll();\n\n      if (searchInputRef.current?.value) {\n        searchInputRef.current.value = \"\";\n      }\n\n      mapglStore.buildMarker(data.lngLat);\n\n      mapglStore.setCurrentMarkerCoords(data.lngLat);\n\n      if (data.target?.id) {\n        mapgl && mapgl.setSelectedObjects([data.target?.id]);\n        searchStore.getObjectById(data.target?.id).then((res: any) => {\n          res &&\n            searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n          setIsObjectCardOpen(true);\n        });\n      } else {\n        searchStore\n          .getObjectByGeo(data.lngLat as [number, number])\n          .then((res: any) => {\n            if (res.data?.result?.items[0]) {\n              const parsedPolygon = parse(\n                res.data?.result?.items[0].geometry.selection\n              );\n              searchStore.setCurrentObject(\n                res.data?.result?.items[0] as ResultItem\n              );\n              setIsObjectCardOpen(true);\n\n              if (typeof parsedPolygon.coordinates[0] !== \"number\") {\n                mapglStore.buildPolygon(parsedPolygon.coordinates);\n              }\n            }\n          });\n      }\n    }\n  };\n\n  const onDirectionInputBack = () => {\n    mapglStore.destroyDirection();\n    setIsObjectCardOpen(true);\n    setIsDirectionCard(false);\n  };\n\n  const findMyLocation = () => {\n    mapgl?.setCenter([geolocation.longitude, geolocation.latitude]);\n    mapgl?.setZoom(18);\n  };\n\n  const zoomPlus = () => {\n    const currentZoom = mapgl?.getZoom();\n    if (currentZoom) mapgl?.setZoom(currentZoom + 1);\n  };\n\n  const zoomMinus = () => {\n    const currentZoom = mapgl?.getZoom();\n    if (currentZoom && currentZoom > 1) mapgl?.setZoom(currentZoom - 1);\n  };\n\n  return (\n    <Wrapper>\n      <ChangeLocation />\n      {isDirectionCard ? (\n        <DirectionInput\n          searchStore={searchStore}\n          onDirectionInputBack={onDirectionInputBack}\n        />\n      ) : (\n        <SearchInput\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setOpenObjectCard={setIsObjectCardOpen}\n          setIsEnterPressed={setIsEnterPressed}\n          setIsResultsOpen={setIsResultsOpen}\n          searchInputRef={searchInputRef}\n          destroyAll={destroyAll}\n        />\n      )}\n\n      {!isObjectCardOpen && !isDirectionCard && (\n        <Results\n          searchStore={searchStore}\n          destroyAll={destroyAll}\n          mapglStore={mapglStore}\n          searchInputRef={searchInputRef}\n          setOpenObjectCard={setIsObjectCardOpen}\n          isEnterPressed={isEnterPressed}\n          isResultsOpen={isResultsOpen}\n          setIsResultsOpen={setIsResultsOpen}\n          isDirectionCard={isDirectionCard}\n        />\n      )}\n      {isObjectCardOpen && !isDirectionCard && (\n        <ObjectCard\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          routTime={\"7 km (16 min)\"}\n          setIsDirectionCard={setIsDirectionCard}\n        />\n      )}\n      {isDirectionCard && (\n        <DirectionCard\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          searchStore={searchStore}\n        />\n      )}\n      <MapWrapper />\n\n      <CustomButtonsWrapper>\n        <ZoomContainer>\n          <ZoomPlusButton onClick={zoomPlus} />\n          <ZoomMinusButton onClick={zoomMinus} />\n        </ZoomContainer>\n        <MyLocationButton onClick={() => findMyLocation()} />\n      </CustomButtonsWrapper>\n    </Wrapper>\n  );\n});\n","import BaseAPI from \"./base\";\n\nexport default class DirectionsAPI extends BaseAPI {\n\n    async getDirections(startPoint: number[], endPoint: number[], type: string): Promise<any> {\n        const options = {\n            points: [{\n                lon1: startPoint[0],\n                lat1: startPoint[1],\n                lon2: endPoint[0],\n                lat2: endPoint[1],\n            }],\n            type,\n            output: \"full\"\n        };\n        const res = await this.axios.post(`get_pairs/1.0/car?key=${process.env.REACT_APP_SEARCH_KEY}`, options)\n\n        return res;\n    }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport DirectionsAPI from \"./directions\";\nimport SearchAPI from \"./search\";\n\nexport const getClient = (): AxiosInstance => {\n    return axios.create({\n        baseURL: 'https://catalog.api.2gis.com/',\n        timeout: 3000,\n        headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }\n    });\n}\n\nexport interface API {\n    search: SearchAPI;\n    directions: DirectionsAPI;\n}\n\nconst makeApi = (client: AxiosInstance): API => {\n    return {\n        search: new SearchAPI(client),\n        directions: new DirectionsAPI(client)\n    };\n};\nexport default makeApi;","import { API } from 'api/index';\nimport makeApi, { getClient } from \"api\";\n\nexport const useApi = (): API => {\n    const client = getClient();\n    return makeApi(client);\n};\n","import React from \"react\";\nimport {RootStore} from \"stores/RootStore\";\nimport {StoreProvider} from \"contexts/StoreContext\";\nimport {Mapgl} from \"components/Mapgl\";\nimport {useApi} from \"hooks/api\";\nimport \"./style.css\";\n\nexport const App = () => {\n    return <Mapgl />\n};\n\nconst StoreWrapper: React.FC = () => {\n    const api = useApi();\n    const store = new RootStore(api);\n\n    return (\n        <StoreProvider store={store}>\n            <App/>\n        </StoreProvider>\n    );\n};\n\nexport default StoreWrapper;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreWrapper from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreWrapper/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}