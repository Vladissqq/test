{"version":3,"sources":["enums/ResponseObjectTypes.enum.ts","stores/DirectionsStore.ts","stores/SearchStore.ts","stores/MapglStore.ts","stores/RootStore.ts","contexts/StoreContext.tsx","hooks/store.ts","assets/images/burger.svg","assets/images/search.svg","assets/images/back-arrow.svg","assets/images/cancel.svg","components/SearchInput.tsx","assets/images/marker.svg","assets/images/building.svg","assets/images/branch.svg","assets/images/geo-object.svg","enums/ContactTypes.enum.ts","components/Results.tsx","assets/data/places.ts","assets/images/arrow-left.svg","components/CompaniesList.tsx","assets/images/green-marker.svg","assets/images/building-icon.svg","assets/images/buildings-green.svg","assets/images/arrow-right.svg","assets/images/work-time.svg","assets/images/phone.svg","assets/images/internet.svg","assets/images/arrow-down.svg","assets/images/share.svg","assets/images/icon-button.svg","assets/images/entrance.svg","assets/images/facebook.svg","assets/images/instagram.svg","styles/cardStyles.ts","components/BuildingCard.tsx","components/AdministarativeDivisionCard.tsx","components/OrganizationCart.tsx","components/DirectionCard.tsx","components/ObjectsCard.tsx","assets/images/myLocation.svg","assets/images/location.svg","components/DirectionInput.tsx","assets/images/check.svg","api/enums/api-versions.enum.ts","components/Mapgl.tsx","api/base.ts","api/directions.ts","api/search.ts","api/index.ts","hooks/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResponseObjectTypes","parse","require","DirectionsStore","rootStore","api","this","makeObservable","mapgl","directionsAPI","Directions","directionsApiKey","process","endPoint","type","directions","getDirections","getDirection","then","res","parsedDirection","data","route","mapglStore","buildDirection","coordinates","destroyDirection","observable","SearchStore","inputValue","sortPoint","search","getSearchResults","searchResults","runInAction","id","getObjectById","result","currentObject","console","log","getBranchesByBuildingId","branchesInBuilding","item","address","building_id","getObjectByGeo","action","MapglStore","load","mapglAPI","divId","options","Map","zoomControl","addZoomControl","directionsStore","loadDirections","ZoomControl","position","currentMapglMarker","Marker","polygon","destroy","toJS","Polygon","interactive","polyline","Polyline","setCenter","getZoom","zoom","setZoom","RootStore","searchStore","StoreContext","React","createContext","StoreProvider","children","store","Provider","value","useRootStore","useContext","useMapglStore","useSearchStore","SearchInputWrapper","styled","div","BurgerWrapper","BurgerIcon","Burger","SearchIcon","Search","Input","input","BackArrowIcon","BackArrow","CancelIcon","Cancel","SearchInput","searchInputRef","setOpenObjectCard","setIsEnterPressed","useState","setIsInputFocused","setInputValue","onKeyDown","event","key","style","justifyContent","display","onClick","placeholder","onChange","current","target","ref","onFocus","destroyMarker","marginLeft","onBlur","ContactTypes","Wrapper","ItemWrapper","ResultIcon","p","TextWrapper","ItemName","ItemDescription","NotFoundWrapper","NotFoundTitle","NotFoundDescription","Results","observer","isEnterPressed","items","map","name","setCurrentObject","loadMapglMarker","point","lon","lat","handleClick","backgroundImage","branch","Branch","admDiv","admDivCity","admDivCountry","admDivDistrict","admDivDistrictArea","admDivPlace","admDivRegion","admDivSettlement","building","Building","GeoObject","split","length","slice","address_name","postcode","full_name","meta","code","Places","title","Header","HeaderTitle","ArrowLeftIcon","ArrowLeft","CompanyContainer","CompanyName","CompanyAdditionalInfo","CompaniesContainer","CompanyButton","setIsOpen","address_comment","purpose_name","CompaniesList","Divider","UpperInfo","BottomInfo","PlaceTitle","PlaceInfoWrapper","PlaceInfo","BottomText","GreenMarkerIcon","GreenMarker","BuildingIcon","BuildingsIcon","Buildings","ArrowRightIcon","ArrowRight","WorkTimeIcon","WorkTime","PhoneIcon","Phone","InternetIcon","Internet","EntranceIcon","Entrance","ArrowDownIcon","ArrowDown","ShareIcon","Share","InstagramIcon","Instagram","FacebookIcon","Facebook","SocialNetworkIconsContainer","IconButtonContainer","IconButton","Button","SwipeIndicator","AdditionalInfo","Title","AllBranchesContainer","BranchesTitle","BranchesCount","CategoriesItem","CategoriesItemText","CategoriesContainer","BuildingCard","isOpen","setCompaniesListIsOpen","routTime","shareLocation","links","branches","count","floors","ground_count","height","width","borderBottom","alignItems","margin","AdministrativeDivisionCard","DirectionType","OrganizationCart","isSwipeOpen","setSwipeIsOpen","instagramLink","facebookLink","contactTypeChecker","contactType","contact_groups","contacts","some","Contacts","arr","forEach","contact","url","push","index","Website","href","textDecoration","text","workingTime","setWorkingTime","useEffect","days","n","Date","getDay","schedule","working_hours","from","to","getCurrentDay","flexDirection","overflow","entrances","entrance","geometry","points","showEntrance","color","rubrics","ObjectCard","setIsDirectionCard","isCompaniesListOpen","location","window","ReactNativeWebView","postMessage","canBeSwiped","onSwipeUp","onSwipeDown","top","transition","subtype","setType","street","DirectionInputWrapper","StartPointWrapper","LocationIcon","Location","LocationInputWrapper","Line","EndPointWrapper","EndPoint","DirectionInput","onDirectionInputBack","DirectionCardWrapper","DirectionButtonsWrapper","DirectionButton","RouteTime","Distance","LetsGoButton","button","DirectionsLength","CheckIcon","Check","API_VERSIONS","DirectionCard","faster","selectedDirection","setSelectedDirection","setFaster","shortest","setShortest","shorter","destroyPolygon","border","background","borderRadius","duration","toFixed","distance","MyLocationButton","myLocation","MapWrapper","memo","Mapgl","useRef","setMapgl","isObjectCardOpen","setIsObjectCardOpen","isDirectionCard","loadMapglAPI","loadMapgl","center","getContainer","document","getElementById","marginTop","left","handleMapClick","off","on","setSelectedObjects","lngLat","parsedPolygon","selection","buildPolygon","BaseAPI","axios","DirectionsAPI","startPoint","a","lon1","lat1","lon2","lat2","output","post","SearchAPI","get","V3","V2","makeApi","client","useApi","create","baseURL","timeout","headers","Accept","App","StoreWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0e0acdb.chunk.js","sourcesContent":["export enum ResponseObjectTypes {\n    branch = 'branch',\n    building = 'building',\n    street = 'street',\n    parking = 'parking',\n    station = 'station',\n    stationMetro = 'station.metro',\n    stationEntrance = 'station_entrance',\n    stationPlatform = 'station_platform',\n    attraction = 'attraction',\n    crossroad = 'crossroad',\n    gate = 'gate',\n    road = 'road',\n    route = 'route',\n    admDiv = 'adm_div',\n    admDivCity = 'adm_div.city',\n    admDivCountry = 'adm_div.country',\n    admDivDistrictArea = 'adm_div.district_area',\n    admDivDistrict = 'adm_div.district',\n    admDivDivision = 'adm_div.division',\n    admDivLivingArea = 'adm_div.living_area',\n    admDivPlace = 'adm_div.place',\n    admDivRegion = 'adm_div.region',\n    admDivSettlement = 'adm_div.settlement',\n    coordinates = 'coordinates',\n}\n","import mapglTypes from \"@2gis/mapgl/types/index\";\nimport { API } from \"api/index\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { Directions } from \"@2gis/mapgl-directions\";\nvar parse = require(\"wellknown\");\n\nexport class DirectionsStore {\n    rootStore: RootStore;\n    api: API;\n\n    @observable directionsAPI: Directions | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    loadDirections(mapgl: mapglTypes.Map) {\n        this.directionsAPI = new Directions(mapgl, {\n            directionsApiKey: process.env.REACT_APP_SEARCH_KEY as string,\n        });\n    }\n\n    getDirection(endPoint: number[], type: string) {\n        return this.api.directions\n            .getDirections([33.36166, 35.15753], endPoint, type)\n    }\n\n    buildDirection(endPoint: number[], type: string): Promise<any> {\n        return this.getDirection(endPoint, type).then((res) => {\n            const parsedDirection = parse(res.data[0].route);\n            this.rootStore.mapglStore.buildDirection(parsedDirection.coordinates);\n            return res;\n        });\n\n    }\n\n    destroyDirection() {\n        this.rootStore.mapglStore.destroyDirection();\n    }\n}\n","import {API} from \"api/index\";\nimport {action, makeObservable, observable, runInAction} from \"mobx\";\nimport {RootStore} from \"./RootStore\";\nimport {ResultItem, SearchResponse} from \"api/interfaces/search.interface\"\n\nexport class SearchStore {\n    rootStore: RootStore;\n    api: API;\n    @observable searchResults: SearchResponse | null = null;\n    @observable currentObject: ResultItem | null = null;\n    //TODO: Replace any with the type\n    @observable branchesInBuilding: any | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    @action\n    async getSearchResults(\n        inputValue: string,\n        sortPoint: [number, number]\n    ) {\n        const searchResults = await this.api.search.getSearchResults(\n            inputValue,\n            sortPoint\n        );\n\n        runInAction(() => {\n            this.searchResults = searchResults.data as SearchResponse;\n        });\n        return this.searchResults;\n    }\n\n    @action\n    async getObjectById(\n        id: string\n    ) {\n        const result = await this.api.search.getObjectById(id)\n\n        runInAction(() => {\n            this.currentObject = result.data as any;\n            console.log(this.currentObject)\n        });\n\n        return this.currentObject;\n    }\n\n    @action\n    async getBranchesByBuildingId(id: string) {\n        const result = await this.api.search.getBranchesByBuildingId(id)\n\n        runInAction(() => {\n            this.branchesInBuilding = result.data as any;\n        })\n        return this.branchesInBuilding;\n    }\n\n    @action setCurrentObject(item: ResultItem): ResultItem {\n        if(item && item.address) {\n          this.getBranchesByBuildingId(item.address.building_id);\n        }\n        return this.currentObject = item;\n    }\n\n    // TODO: refactored this\n    getObjectByGeo(sortPoint: [number, number]): any {\n        return this.api.search.getObjectByGeo(sortPoint);\n    }\n}\n\n","import { action, observable, toJS } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { load } from \"@2gis/mapgl\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nexport class MapglStore {\n  rootStore: RootStore;\n  @observable mapglAPI: typeof mapglTypes | null = null;\n  @observable mapgl: mapglTypes.Map | null = null;\n  @observable currentMapglMarker: mapglTypes.Marker | null = null;\n  @observable zoomControl: mapglTypes.ZoomControl | null = null;\n  @observable polygon: mapglTypes.Polygon | null = null;\n  @observable polyline: mapglTypes.Polyline | null = null;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action async loadMapglAPI(): Promise<any> {\n    this.mapglAPI = await load();\n  }\n\n  @action loadMapgl(\n    divId: string,\n    options: mapglTypes.MapOptions\n  ): mapglTypes.Map | null {\n    this.mapgl = this.mapglAPI\n      ? new this.mapglAPI.Map(divId, { ...options, zoomControl: false })\n      : null;\n    this.addZoomControl();\n    this.mapgl && this.rootStore.directionsStore.loadDirections(this.mapgl);\n    return this.mapgl;\n  }\n\n  addZoomControl(): void {\n    this.zoomControl =\n      this.mapglAPI &&\n      this.mapgl &&\n      new this.mapglAPI.ZoomControl(this.mapgl, {\n        position: \"topRight\",\n      });\n\n\n  }\n\n  @action loadMapglMarker(\n    options: mapglTypes.MarkerOptions\n  ): mapglTypes.Marker | null {\n    return (this.currentMapglMarker =\n      this.mapgl && this.mapglAPI\n        ? new this.mapglAPI.Marker(this.mapgl, options)\n        : null);\n  }\n\n  buildPolygon(coordinates: number[][][]) {\n    this.polygon && this.polygon.destroy();\n\n    if (this.mapglAPI && this.mapgl) {\n      console.log(toJS(coordinates));\n      \n      this.polygon = new this.mapglAPI.Polygon(this.mapgl, {\n        coordinates: coordinates,\n        interactive: false,\n      });\n    }\n  }\n\n  buildDirection(coordinates: number[][]) {\n    this.destroyDirection();\n    if (this.mapglAPI && this.mapgl) {\n      this.polyline = new this.mapglAPI.Polyline(this.mapgl, {\n        coordinates: coordinates,\n      })\n    }\n  }\n\n  destroyDirection() {\n    this.polyline?.destroy();\n  }\n\n  destroyPolygon() {\n    this.polygon?.destroy();\n  }\n\n  destroyMarker() {\n    this.currentMapglMarker?.destroy();\n  }\n\n  setCenter(coordinates: [number, number]) {\n    this.mapgl?.setCenter(coordinates);\n  }\n\n  getZoom(): number | undefined {\n    return this.mapgl?.getZoom();\n  }\n\n  setZoom(zoom: number) {\n    this.mapgl?.setZoom(zoom);\n  }\n}\n","import { DirectionsStore } from './DirectionsStore';\nimport { SearchStore } from './SearchStore';\nimport { MapglStore } from \"./MapglStore\";\nimport { API } from 'api';\n\nexport class RootStore {\n  api: API;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  directionsStore: DirectionsStore;\n\n\n  constructor(api: API) {\n    this.api = api;\n    this.mapglStore = new MapglStore(this);\n    this.searchStore = new SearchStore(this, api);\n    this.directionsStore = new DirectionsStore(this, api);\n  }\n}\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\n\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\n\nexport type StoreComponent = React.FC<{\n  store: RootStore;\n  children: React.ReactNode;\n}>;\n\nexport const StoreProvider: StoreComponent = ({\n  children,\n  store,\n}): React.ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"contexts/StoreContext\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const useRootStore = (): RootStore => useContext(StoreContext);\n\nexport const useMapglStore = () => {\n    const { mapglStore } = useRootStore();\n    return mapglStore;\n};\n\nexport const useSearchStore = () => {\n    const { searchStore } = useRootStore();\n    return searchStore;\n};\n\nexport const useDirectionsStore = () => {\n    const { directionsStore } = useRootStore();\n    return directionsStore;\n};","export default __webpack_public_path__ + \"static/media/burger.e78eec97.svg\";","export default __webpack_public_path__ + \"static/media/search.7e6201e0.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.ecccce44.svg\";","export default __webpack_public_path__ + \"static/media/cancel.140bb64c.svg\";","import Burger from \"assets/images/burger.svg\";\nimport Search from \"assets/images/search.svg\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Cancel from \"assets/images/cancel.svg\";\nimport { useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 95%;\n  height: 48px;\n  background: #ffffff;\n  border-radius: 30px;\n  border: #fffff;\n  display: flex;\n  margin: 0 auto;\n  margin-top: 50px;\n  left: 0;\n  right: 0;\n  margin-top: 50px;\n`;\n\nconst BurgerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 40px;\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 20px;\n  margin: 4px;\n`;\n\nconst BurgerIcon = styled.div`\n  background-image: url(${Burger});\n  width: 18px;\n  height: 12px;\n`;\n\nconst SearchIcon = styled.div`\n  background-image: url(${Search});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  margin-left: 27px;\n  margin-top: 10px;\n  border: 0;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst CancelIcon = styled.div`\n  background-image: url(${Cancel});\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  margin-top: 17px;\n`;\n\ninterface SeacrhInputProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n}\n\nexport const SearchInput = ({\n  searchStore,\n  mapglStore,\n  searchInputRef,\n  setOpenObjectCard,\n  setIsEnterPressed,\n}: SeacrhInputProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    searchInputRef.current && setInputValue(searchInputRef.current?.value);\n    searchStore.getSearchResults(event.target.value, [33.36166, 35.15753]);\n  };\n\n  return (\n    <SearchInputWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          setIsEnterPressed(true);\n        } else {\n          setIsEnterPressed(false);\n        }\n      }}\n      style={{\n        justifyContent: inputValue ? \"space-around\" : \"\",\n      }}\n    >\n      {inputValue === \"\" && (\n        <BurgerWrapper>\n          <BurgerIcon></BurgerIcon>\n        </BurgerWrapper>\n      )}\n      {inputValue === \"\" && <SearchIcon></SearchIcon>}\n      <div style={{ display: \"flex\" }}>\n        {inputValue && (\n          <BackArrowIcon\n            onClick={() => {\n              setOpenObjectCard(false);\n            }}\n          />\n        )}\n        <Input\n          placeholder=\"Search\"\n          onChange={handleChange}\n          ref={searchInputRef}\n          onFocus={() => {\n            setIsInputFocused(true);\n            setOpenObjectCard(false);\n            mapglStore.destroyMarker();\n          }}\n          style={{\n            marginLeft: inputValue ? \"24px\" : \"27px\",\n          }}\n          onBlur={() => setIsInputFocused(false)}\n        ></Input>\n      </div>\n      {inputValue && <CancelIcon />}\n    </SearchInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/marker.953d3c77.svg\";","export default __webpack_public_path__ + \"static/media/building.33b84d52.svg\";","export default __webpack_public_path__ + \"static/media/branch.267d7457.svg\";","export default __webpack_public_path__ + \"static/media/geo-object.ccba00f5.svg\";","export enum ContactTypes {\n    Email = 'email',\n    Website = 'website',\n    Phone = 'phone',\n    Fax = 'fax',\n    Icq = 'icq',\n    Jabber = 'jabber',\n    Skype = 'skype',\n    Vkontakte = 'vkontakte',\n    Twitter = 'twitter',\n    Instagram = 'instagram',\n    Facebook = 'facebook',\n    Pobox = 'pobox',\n    Youtube = 'youtube',\n    Odnoklassniki = 'odnoklassniki',\n    Googleplus = 'googleplus',\n    Linkedin = 'linkedin',\n    Pinterest = 'pinterest',\n    Whatsapp = 'whatsapp',\n    Telegram = 'telegram',\n    Viber = 'viber'\n}\n","import Marker from \"assets/images/marker.svg\";\nimport Building from \"assets/images/building.svg\";\nimport Branch from \"assets/images/branch.svg\";\nimport GeoObject from \"assets/images/geo-object.svg\";\nimport { ResponseObjectTypes } from \"enums/ResponseObjectTypes.enum\";\nimport { observer } from \"mobx-react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  position: absolute;\n  top: 120px;\n  z-index: 60;\n  width: 100%;\n  height: 1000px;\n  border-radius: 20px 20px 0px 0px;\n  overflow: scroll;\n`;\n\nconst ItemWrapper = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  border-top: 3px solid #fafafafa;\n`;\n\nconst ResultIcon = styled.p`\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-left: 22px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemName = styled.div`\n  margin-left: 29px;\n`;\n\nconst ItemDescription = styled.div`\n  margin-left: 29px;\n  color: rgba(0, 0, 0, 0.6);\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  font-size: 14px;\n`;\n\nconst NotFoundWrapper = styled.div`\n  margin-left: 16px;\n  margin-top: 39px;\n`;\n\nconst NotFoundTitle = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #000000;\n`;\n\nconst NotFoundDescription = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #000000;\n`;\n\ninterface ResultsProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  isEnterPressed: boolean;\n}\n\nexport const Results = observer(\n  ({\n    searchStore,\n    setOpenObjectCard,\n    mapglStore,\n    searchInputRef,\n    isEnterPressed,\n  }: ResultsProps) => {\n    const getIcon = (type: ResponseObjectTypes) => {\n      if (type === ResponseObjectTypes.branch) {\n        return Branch;\n      } else if (\n        type === ResponseObjectTypes.admDiv ||\n        type === ResponseObjectTypes.admDivCity ||\n        type === ResponseObjectTypes.admDivCountry ||\n        type === ResponseObjectTypes.admDivDistrict ||\n        type === ResponseObjectTypes.admDivDistrictArea ||\n        type === ResponseObjectTypes.admDivPlace ||\n        type === ResponseObjectTypes.admDivRegion ||\n        type === ResponseObjectTypes.admDivSettlement\n      ) {\n        return Marker;\n      } else if (type === ResponseObjectTypes.building) {\n        return Building;\n      } else {\n        return GeoObject;\n      }\n    };\n\n    const formatName = (name: string) => {\n      const MAX_NAME_LENGTH = 40;\n      const length = name.split(\"\").length;\n      return length >= MAX_NAME_LENGTH\n        ? name.slice(0, MAX_NAME_LENGTH) + \"...\"\n        : name;\n    };\n\n    const handleClick = (item: any) => {\n      searchStore.setCurrentObject(item);\n      mapglStore.loadMapglMarker({\n        coordinates: [item.point.lon, item.point.lat],\n      });\n      mapglStore.setCenter([item.point.lon, item.point.lat]);\n      setOpenObjectCard(true);\n    };\n    return (\n      <Wrapper\n        style={{\n          display: searchInputRef?.current?.value ? \"flex\" : \"none\",\n        }}\n      >\n        {searchStore.searchResults?.result?.items.map((item: ResultItem) => {\n          return (\n            <ItemWrapper key={item.id} onClick={() => handleClick(item)}>\n              <ResultIcon\n                style={{\n                  backgroundImage: `url(${getIcon(item.type)})`,\n                }}\n              ></ResultIcon>\n              <TextWrapper>\n                <ItemName>{formatName(item.name)}</ItemName>\n                <ItemDescription>\n                  {(item.address_name &&\n                    item.address?.postcode &&\n                    item.address_name + \", \" + item.address?.postcode) ||\n                    item.name ||\n                    item.full_name}\n                </ItemDescription>\n              </TextWrapper>\n            </ItemWrapper>\n          );\n        })}\n        {isEnterPressed && searchStore.searchResults?.meta.code === 404 && (\n          <NotFoundWrapper>\n            <NotFoundTitle>No Results Found</NotFoundTitle>\n            <NotFoundDescription>\n              Try searching for something else, check for typos or rephrase it\n            </NotFoundDescription>\n          </NotFoundWrapper>\n        )}\n      </Wrapper>\n    );\n  }\n);\n","export const Places = [\n    {title: 'Company', type: 'branch'},\n    {title: 'Building', type: 'building'},\n    {title: 'Street', type: 'street'},\n    {title: 'Parking', type: 'parking'},\n    {title: 'Station', type: 'station'},\n    {title: 'Attraction', type: 'attraction'},\n    {title: 'Crossroad', type: 'crossroad'},\n    {title: 'Gate', type: 'gate'},\n    {title: 'Road', type: 'road'},\n    {title: 'Route', type: 'route'},\n    {title: 'Administrative Division', type: 'adm_div'},\n    {title: 'City', type: 'adm_div.city'},\n    {title: 'Country', type: 'adm_div.country'},\n    {title: 'District Area', type: 'adm_div.district_area'},\n    {title: 'District', type: 'adm_div.district'},\n    {title: 'Division', type: 'adm_div.division'},\n    {title: 'Living Area', type: 'adm_div.living_area'},\n    {title: 'Place', type: 'adm_div.place'},\n    {title: 'Region', type: 'adm_div.region'},\n    {title: 'Settlement', type: 'adm_div.settlement'},\n    {title: 'Coordinates', type: 'coordinates'},\n]\n","export default __webpack_public_path__ + \"static/media/arrow-left.5503f9f6.svg\";","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"assets/images/arrow-left.svg\";\nimport {useMapglStore, useSearchStore} from \"../hooks/store\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {ResultItem} from \"../api/interfaces/search.interface\";\nimport {MapglStore} from \"../stores/MapglStore\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: absolute;\n  z-index: 900;\n  background-color: #ffffff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 375px;\n  height: 64px;\n  margin-top: 10px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst HeaderTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst ArrowLeftIcon = styled.p`\n  background-image: url(${ArrowLeft});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin: 0 32px;\n`;\n\nconst CompanyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  height: 64px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst CompanyName = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-left: 16px;\n`;\n\nconst CompanyAdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-left: 16px;\n`;\n\nconst CompaniesContainer = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: scroll;\n`;\n\ninterface CompanyButton {\n    setIsOpen: (arg0: boolean) => void;\n    searchStore: SearchStore;\n    item: ResultItem;\n    mapglStore: MapglStore\n}\n\nconst CompanyButton: FC<CompanyButton> = ({setIsOpen, searchStore, item, mapglStore}) => {\n    const openCompanyCard = () => {\n        searchStore.getObjectById(item.id).then((res: any) => {\n            res &&\n            searchStore.setCurrentObject(res.result?.items[0]);\n            setIsOpen(false);\n        });\n    }\n    return (\n        <CompanyContainer onClick={() => openCompanyCard()}>\n            <CompanyName>{`${item.name}`}</CompanyName>\n            <CompanyAdditionalInfo>{`${item.address_comment || item.purpose_name}`}</CompanyAdditionalInfo>\n        </CompanyContainer>\n    );\n};\n\ninterface CompaniesListProps {\n    setIsOpen: (arg0: boolean) => void;\n}\n\nexport const CompaniesList: FC<CompaniesListProps> = ({setIsOpen}) => {\n    const searchStore = useSearchStore();\n    const mapglStore = useMapglStore();\n    return (\n        <Wrapper>\n            <Header>\n                <ArrowLeftIcon onClick={() => setIsOpen(false)}/>\n                <HeaderTitle>Companies</HeaderTitle>\n            </Header>\n            <CompaniesContainer>\n                {searchStore.branchesInBuilding.result.items.map((item: any) => (\n                    <CompanyButton key={item.id} item={item} setIsOpen={setIsOpen} searchStore={searchStore}\n                                   mapglStore={mapglStore}/>))}\n            </CompaniesContainer>\n        </Wrapper>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/green-marker.30aab809.svg\";","export default __webpack_public_path__ + \"static/media/building-icon.ba15730a.svg\";","export default __webpack_public_path__ + \"static/media/buildings-green.d86a6822.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.a70d4ef3.svg\";","export default __webpack_public_path__ + \"static/media/work-time.056843a8.svg\";","export default __webpack_public_path__ + \"static/media/phone.0d461ee9.svg\";","export default __webpack_public_path__ + \"static/media/internet.dab33b8c.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.cc14feef.svg\";","export default __webpack_public_path__ + \"static/media/share.4a856fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-button.510f85c7.svg\";","export default __webpack_public_path__ + \"static/media/entrance.4362b935.svg\";","export default __webpack_public_path__ + \"static/media/facebook.1df98738.svg\";","export default __webpack_public_path__ + \"static/media/instagram.64771f9c.svg\";","import styled from \"styled-components\";\nimport GreenMarker from \"../assets/images/green-marker.svg\";\nimport Building from \"../assets/images/building-icon.svg\";\nimport Buildings from \"../assets/images/buildings-green.svg\";\nimport ArrowRight from \"../assets/images/arrow-right.svg\";\nimport WorkTime from \"../assets/images/work-time.svg\";\nimport Phone from \"../assets/images/phone.svg\";\nimport Internet from \"../assets/images/internet.svg\";\nimport ArrowDown from \"../assets/images/arrow-down.svg\";\nimport Share from \"../assets/images/share.svg\";\nimport Button from \"../assets/images/icon-button.svg\";\nimport Entrance from \"../assets/images/entrance.svg\";\nimport Facebook from \"../assets/images/facebook.svg\";\nimport Instagram from \"../assets/images/instagram.svg\";\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  justify-content: flex-start;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  border-radius: 20px 20px 0px 0px;\n  transition-property: height;\n  transition-duration: 0.3s;\n  z-index: 60;\n`;\n\nexport const Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: rgba(33, 33, 33, 0.08);\n`;\n\nexport const UpperInfo = styled.div`\n  display: flex;\n  margin: 9px 24px 11px 24px;\n`;\n\nexport const BottomInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 18px 24px;\n`;\n\nexport const PlaceTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  margin-bottom: 1px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 250px\n`;\n\nexport const PlaceInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const PlaceInfo = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const BottomText = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 68%;\n  margin-right: 11px;\n`;\n\nexport const GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-right: 16px;\n`;\n\nexport const BuildingIcon = styled.p`\n  background-image: url(${Building});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const BuildingsIcon = styled.p`\n  background-image: url(${Buildings});\n  height: 19px;\n  width: 22px;\n  margin-right: 16px;\n  margin-left: 27px;\n  margin-bottom: 7%;\n`;\n\nexport const ArrowRightIcon = styled.p`\n  background-image: url(${ArrowRight});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin-right: 24px;\n`;\n\nexport const WorkTimeIcon = styled.p`\n  background-image: url(${WorkTime});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const PhoneIcon = styled.p`\n  background-image: url(${Phone});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const InternetIcon = styled.p`\n  background-image: url(${Internet});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const EntranceIcon = styled.p`\n  background-image: url(${Entrance});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const ArrowDownIcon = styled.p`\n  background-image: url(${ArrowDown});\n  background-repeat: no-repeat;\n  width: 14px;\n  height: 12px;\n  margin-right: 28px;\n`;\n\nexport const ShareIcon = styled.p`\n  background-image: url(${Share});\n  height: 18px;\n  width: 18px;\n`;\n\nexport const InstagramIcon = styled.p`\n  background-image: url(${Instagram});\n  height: 46px;\n  width: 46px;\n  margin: 4px;\n`;\n\nexport const FacebookIcon = styled.p`\n  background-image: url(${Facebook});\n  height: 46px;\n  width: 46px;\n  margin: 4px;\n`;\n\nexport const SocialNetworkIconsContainer = styled.div`\ndisplay: flex;\n`;\n\nexport const IconButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const IconButton = styled.p`\n  background-image: url(${Button});\n  width: 70px;\n  height: 70px;\n  display: flex;\n  position: absolute;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  margin-right: 13px;\n`;\n\nexport const SwipeIndicator = styled.div`\nwidth: 36px;\nmin-height: 4px;\nborder-radius: 4px;\nbackground: #DBDBDB;\nmargin: 8px auto;\n`;\n\nexport const AdditionalInfo = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 14px;\nline-height: 20px;\nletter-spacing: 0.25px;\ncolor: rgba(0, 0, 0, 0.6);\n`\n\nexport const Title = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 16px;\nletter-spacing: 1.25px;\ntext-transform: uppercase;\ncolor: rgba(0, 0, 0, 0.6);\nmargin: 16px;\n`\n\nexport const CompanyContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 32px;\n`\nexport const AllBranchesContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n  border-bottom: solid 2px rgba(33,33,33,0.08);\n`\nexport const BranchesTitle = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 16px;\nline-height: 24px;\nletter-spacing: 0.15px;\ncolor: rgba(0, 0, 0, 0.87);\n  margin: 6px 16px 11px 16px;\n`\nexport const BranchesCount = styled.div`\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 24px;\nletter-spacing: 0.1px;\ncolor: rgba(0, 0, 0, 0.87);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n\nexport const CategoriesItem = styled.div`\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 16px;\n  height: 32px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n`\n\nexport const CategoriesItemText = styled.div`\n  font-family: Intel;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 6px 12px;\n`\n\nexport const CategoriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 16px 100px 16px;\n`\n\n","import React, {FC} from \"react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {\n    AdditionalInfo, ArrowRightIcon,\n    BottomInfo,\n    BottomText, BuildingIcon,\n    BuildingsIcon, Divider,\n    GreenMarkerIcon,\n    ShareIcon,\n    Title\n} from \"../styles/cardStyles\";\n\ninterface BuildingCardProps {\n    isOpen: boolean;\n    searchStore: SearchStore;\n    routTime?: string;\n    setCompaniesListIsOpen: (arg0: boolean) => void;\n    shareLocation: (arg0: string) => void;\n    mapglStore: MapglStore;\n    coordinates: [number, number];\n}\n\nexport const BuildingCard: FC<BuildingCardProps> = ({\n                                                        isOpen,\n                                                        searchStore,\n                                                        routTime,\n                                                        setCompaniesListIsOpen,\n                                                        shareLocation,\n                                                        mapglStore,\n                                                        coordinates\n                                                    }) => {\n    return (\n        <>\n            {searchStore.currentObject?.address ? <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareLocation(searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\")}/> : null}\n            </BottomInfo> : <BottomInfo>\n                <GreenMarkerIcon/>\n                <BottomText>\n                    {searchStore.currentObject?.full_name}\n                </BottomText>\n                {!isOpen ? <ShareIcon\n                    onClick={() => shareLocation(searchStore.currentObject ? searchStore.currentObject?.address.building_id : \"\")}/> : null}\n            </BottomInfo>}\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {searchStore.currentObject?.links?.branches?.count && isOpen ?\n                (\n                    <div>\n                        <Divider style={{\n                            height: \"2px\",\n                        }}/>\n                        <Title>Сompanies</Title>\n                        <BottomInfo onClick={() => setCompaniesListIsOpen(true)} style={{\n                            height: \"72px\",\n                            width: \"100%\",\n                            borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                            alignItems: \"center\",\n                            margin: \"18px 0\",\n                        }}>\n                            <BuildingsIcon/>\n                            <div style={{\n                                width: \"360px\",\n                            }}>\n                                <BottomText>All Companies</BottomText>\n                                <AdditionalInfo>{`${searchStore.currentObject?.links?.branches?.count} companies`}</AdditionalInfo>\n                            </div>\n                            <ArrowRightIcon/>\n                        </BottomInfo>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n","import {\n  BottomInfo,\n  BottomText,\n  GreenMarkerIcon,\n  ShareIcon,\n} from \"../styles/cardStyles\";\nimport { FC } from \"react\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport { MapglStore } from \"stores/MapglStore\";\n\ninterface AdministrativeDivisionCardProps {\n  isOpen: boolean;\n  searchStore: SearchStore;\n  shareLocation: (arg0: string) => void;\n  mapglStore: MapglStore;\n  coordinates: [number, number];\n}\n\nexport const AdministrativeDivisionCard: FC<AdministrativeDivisionCardProps> =\n  ({ isOpen, searchStore, shareLocation, mapglStore,coordinates }) => {\n    return (\n      <>\n        {searchStore.currentObject?.address ? (\n          <BottomInfo>\n            <GreenMarkerIcon />\n            <BottomText>\n              {searchStore.currentObject?.address?.postcode &&\n                searchStore.currentObject.address?.postcode + \", \"}\n              {searchStore.currentObject?.address_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareLocation(\n                    searchStore.currentObject\n                      ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                      : \"\"\n                  )\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        ) : (\n          <BottomInfo>\n            <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)} />\n            <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n              {searchStore.currentObject?.full_name}\n            </BottomText>\n            {!isOpen ? (\n              <ShareIcon\n                onClick={() =>\n                  shareLocation(\n                    searchStore.currentObject\n                      ? `${searchStore.currentObject?.point.lon} ${searchStore.currentObject?.point.lat}`\n                      : \"\"\n                  )\n                }\n              />\n            ) : null}\n          </BottomInfo>\n        )}\n      </>\n    );\n  };\n","import {FC, useEffect, useState} from \"react\";\nimport {SearchStore} from \"../stores/SearchStore\";\nimport {\n    AllBranchesContainer,\n    ArrowDownIcon,\n    ArrowRightIcon,\n    BottomInfo,\n    BottomText,\n    BranchesCount,\n    BranchesTitle,\n    BuildingIcon,\n    BuildingsIcon,\n    CategoriesContainer,\n    CategoriesItem,\n    CategoriesItemText,\n    CompanyContainer,\n    Divider,\n    EntranceIcon,\n    FacebookIcon,\n    GreenMarkerIcon,\n    InstagramIcon,\n    InternetIcon,\n    PhoneIcon,\n    ShareIcon,\n    SocialNetworkIconsContainer,\n    Title,\n    WorkTimeIcon\n} from \"../styles/cardStyles\";\nimport {MapglStore} from \"../stores/MapglStore\";\nimport {ContactTypes} from \"../enums/ContactTypes.enum\";\nimport {Contact, ResultItem} from \"../api/interfaces/search.interface\";\n\nvar parse = require('wellknown');\n\ninterface OrganizationCartProps {\n    searchStore: SearchStore;\n    isSwipeOpen: boolean;\n    setSwipeIsOpen: (arg0: boolean) => void;\n    setCompaniesListIsOpen: (arg0: boolean) => void;\n    mapglStore: MapglStore;\n    shareLocation: (arg0: string) => void;\n    coordinates: [number, number];\n}\n\nexport const OrganizationCart: FC<OrganizationCartProps> = ({searchStore, isSwipeOpen, setCompaniesListIsOpen, mapglStore, setSwipeIsOpen, shareLocation,coordinates}) => {\n    let instagramLink = '';\n    let facebookLink = '';\n    const showEntrance = () => {\n        let entrance = parse(searchStore.currentObject?.links?.entrances[0].geometry.points[0]).coordinates;\n        mapglStore.loadMapglMarker({\n            coordinates: entrance,\n        });\n        mapglStore.setCenter(entrance);\n        mapglStore.setZoom(18);\n        setSwipeIsOpen(false);\n    }\n\n    const contactTypeChecker = (contactType: ContactTypes) => {\n        if(searchStore.currentObject?.contact_groups)\n        return searchStore.currentObject?.contact_groups[0].contacts.some(item => item.type === contactType)\n    }\n\n    const Contacts = (contactType: ContactTypes) => {\n        //TODO:: Refactor this function\n        let arr: Contact[] = [];\n        if(!!searchStore.currentObject?.contact_groups) {\n            searchStore.currentObject?.contact_groups.forEach(item => item.contacts.forEach(contact => {\n                if(contact.type === ContactTypes.Instagram) {\n                    instagramLink = contact.url\n                }\n                if(contact.type === ContactTypes.Facebook) {\n                    facebookLink = contact.url\n                }\n                arr.push(contact)}))\n            return arr.map((item: any, index) => {\n                    if (item.type === contactType) {\n                        if(item.type === ContactTypes.Website) {\n                            return <a href={item.url} style={{textDecoration: \"none\"}}  key={item.value}><BottomText>{`${item.text}`}</BottomText></a>\n                        }\n                        return <BottomText key={item.value}>{`${item.text}`}</BottomText>;\n                    }\n                })\n        }\n    }\n\n    const openCompanyCard = (id: string) => {\n        searchStore.getObjectById(id).then((res: any) => {\n            res &&\n            searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n            setSwipeIsOpen(false);\n        });\n    }\n\n    const [workingTime, setWorkingTime] = useState([]);\n\n    const getCurrentDay = () => {\n        let days = [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ];\n        let d = new Date();\n        let n = d.getDay();\n\n        // @ts-ignore\n        searchStore.currentObject?.schedule && setWorkingTime([searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.from, searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.to])\n    }\n\n    useEffect(() => {\n        getCurrentDay();\n    }, [searchStore.currentObject?.schedule])\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: isSwipeOpen ? \"scroll\" : \"hidden\"\n        }}>\n            <BottomInfo>\n                <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)}/>\n                <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n                    {searchStore.currentObject?.full_name ? searchStore.currentObject?.full_name + \", \" : null}\n                    {searchStore.currentObject?.address?.postcode &&\n                    searchStore.currentObject.address?.postcode + \", \"}\n                    {searchStore.currentObject?.address_name}\n                </BottomText>\n                {!isSwipeOpen ? <ShareIcon onClick={() => shareLocation(searchStore.currentObject ? searchStore.currentObject.id : \"\")}/> : null}\n            </BottomInfo>\n            {!!searchStore.currentObject?.links?.branches?.count ? (\n                <BottomInfo>\n                    <BuildingIcon/>\n                    <BottomText>{searchStore.currentObject?.floors && searchStore.currentObject?.links?.branches?.count &&\n                    `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies` || searchStore.currentObject?.floors &&\n                    `${searchStore.currentObject?.floors.ground_count} floor` ||\n                    searchStore.currentObject?.links?.branches?.count && `${searchStore.currentObject?.links?.branches?.count} companies`\n                    }</BottomText>\n                </BottomInfo>\n            ) : null}\n            {isSwipeOpen ?\n                <>\n                    {searchStore.currentObject?.links?.entrances ? <BottomInfo onClick={() => showEntrance()}>\n                        <EntranceIcon/>\n                        <BottomText style={{\n                            color: \"#23B064\"\n                        }}>Show entrance on map</BottomText>\n                    </BottomInfo> : null}\n                    {searchStore.currentObject?.schedule ? <BottomInfo>\n                        <WorkTimeIcon/>\n                        <BottomText>{`Daily ${workingTime[0]} — \n                        ${workingTime[1]} Open`}</BottomText>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Phone) ? <BottomInfo>\n                        <PhoneIcon/>\n                        <div style={{\n                            width: \"100%\",\n                        }}>\n                            {Contacts(ContactTypes.Phone)}\n                        </div>\n                    </BottomInfo> : null}\n                    {contactTypeChecker(ContactTypes.Website) ? <BottomInfo>\n                        <InternetIcon/>\n                        <div>\n                            {Contacts(ContactTypes.Website)}\n                            <SocialNetworkIconsContainer>\n                                {contactTypeChecker(ContactTypes.Instagram) ? <a href={instagramLink}><InstagramIcon/></a> : null}\n                                {contactTypeChecker(ContactTypes.Facebook) ? <a href={facebookLink}><FacebookIcon/></a> : null}\n                            </SocialNetworkIconsContainer>\n                        </div>\n                    </BottomInfo> : null}\n                    {!!searchStore.currentObject?.links?.branches?.count ? <>\n                        <div>\n                            <Divider style={{\n                                height: \"2px\",\n                            }}/>\n                            <Title>other companies</Title>\n                            <BottomInfo style={{\n                                width: \"100%\",\n                                borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                                margin: \"18px 0 6px 0\",\n                            }}>\n                                <BuildingsIcon/>\n                                <div style={{\n                                    width: \"100%\",\n                                }}>\n                                    {searchStore.branchesInBuilding.result.items.slice(0, 5).map((item: any) => {\n                                        return (\n                                            <CompanyContainer key={item.id} onClick={() => {\n                                                openCompanyCard(item.id);\n                                            }}>\n                                                <BottomText>{item.name}</BottomText>\n                                                <ArrowRightIcon/>\n                                            </CompanyContainer>\n                                        );\n                                    })}\n                                </div>\n                            </BottomInfo>\n                        </div>\n                        <AllBranchesContainer onClick={() => {\n                            setCompaniesListIsOpen(true);\n                            setSwipeIsOpen(false);\n                        }}>\n                            <BranchesTitle>All companies</BranchesTitle>\n                            <BranchesCount>\n                                <div style={{\n                                    margin: \"0 8px\"\n                                }}>{searchStore.currentObject?.links?.branches?.count}</div>\n                                <ArrowDownIcon/>\n                            </BranchesCount>\n                        </AllBranchesContainer>\n                        </> : null}\n                    <Title>categories</Title>\n                    {searchStore.currentObject?.rubrics ? <CategoriesContainer>\n                        {searchStore.currentObject.rubrics.map((item) => {\n                            return (\n                                <CategoriesItem key={item.id}>\n                                    <CategoriesItemText>{item.name}</CategoriesItemText>\n                                </CategoriesItem>\n                            )\n                        })}\n                    </CategoriesContainer> : null}\n                </> : null}\n        </div>\n    );\n}\n","import styled from \"styled-components\";\nimport Check from \"assets/images/check.svg\";\nimport { useEffect, useState } from \"react\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst DirectionCardWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 52;\n  width: 100%;\n  height: 220px;\n  text-align: center;\n`;\n\nconst DirectionButtonsWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: 10px 16px 0 16px;\n  margin-bottom: 24px;\n`;\n\nconst DirectionButton = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 50% 50;\n  padding: 9px;\n`;\n\nconst RouteTime = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst Distance = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst LetsGoButton = styled.button`\n  width: 315px;\n  height: 48px;\n  background: #23b064;\n  border-radius: 12px;\n  margin-bottom: 10px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst DirectionsLength = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst CheckIcon = styled.div`\n  background-image: url(${Check});\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100%;\n  height: 20px;\n`;\n\nenum DirectionType {\n  faster = \"jam\",\n  shorter = \"shortest\",\n}\n\ninterface DirectionCardProps {\n  directionsStore: DirectionsStore;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n}\n\nexport const DirectionCard = observer(\n  ({ directionsStore, searchStore, mapglStore }: DirectionCardProps) => {\n    const [selectedDirection, setSelectedDirection] = useState(\n      DirectionType.faster\n    );\n\n    const [faster, setFaster] = useState<any>(null);\n    const [shortest, setShortest] = useState<any>(null);\n\n    const buildDirection = (endPoint: number[], type: string): Promise<any> => {\n      return directionsStore.buildDirection(endPoint, type);\n    };\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        buildDirection(\n          [\n            searchStore.currentObject.point.lon,\n            searchStore.currentObject.point.lat,\n          ],\n          selectedDirection\n        ).then((res) => {\n          searchStore.currentObject &&\n            directionsStore\n              .getDirection(\n                [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.faster\n              )\n              .then((res) => {\n                setFaster(res.data[0]);\n              });\n\n          searchStore.currentObject &&\n            directionsStore\n              .getDirection(\n                [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.shorter\n              )\n              .then((res) => {\n                setShortest(res.data[0]);\n              });\n        });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedDirection, directionsStore, searchStore.currentObject]);\n\n    return (\n      <DirectionCardWrapper>\n        <DirectionButtonsWrapper>\n          <DirectionButton\n            onClick={() => {\n              mapglStore.destroyPolygon();\n              mapglStore.destroyMarker();\n              mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.faster);\n            }}\n            style={\n              selectedDirection === DirectionType.faster\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(shortest?.duration / 60).toFixed(1)} min</RouteTime>\n            <CheckIcon />\n            <Distance>{(shortest?.distance / 1000).toFixed(1)} km</Distance>\n            <div>shorter </div>\n          </DirectionButton>\n          <DirectionButton\n            onClick={() => {\n              mapglStore.destroyPolygon();\n              mapglStore.destroyMarker();\n              mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.shorter);\n            }}\n            style={\n              selectedDirection === DirectionType.shorter\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(faster?.duration / 60).toFixed(1)} min</RouteTime>\n            <div></div>\n            <Distance>{(faster?.distance / 1000).toFixed(1)} km</Distance>\n            <div>faster </div>\n          </DirectionButton>\n        </DirectionButtonsWrapper>\n        <LetsGoButton>Let`s go</LetsGoButton>\n        <DirectionsLength>You have 28 routes left</DirectionsLength>\n      </DirectionCardWrapper>\n    );\n  }\n);\n","import { FC, useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport Swipe from \"react-easy-swipe\";\nimport { Places } from \"../assets/data/places\";\nimport { CompaniesList } from \"./CompaniesList\";\nimport { ResponseObjectTypes } from \"../enums/ResponseObjectTypes.enum\";\nimport { BuildingCard } from \"./BuildingCard\";\nimport { AdministrativeDivisionCard } from \"./AdministarativeDivisionCard\";\nimport {\n  ArrowDownIcon,\n  Divider,\n  IconButton,\n  IconButtonContainer,\n  PlaceInfo,\n  PlaceInfoWrapper,\n  PlaceTitle,\n  ShareIcon,\n  SwipeIndicator,\n  UpperInfo,\n  Wrapper,\n} from \"../styles/cardStyles\";\nimport { OrganizationCart } from \"./OrganizationCart\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\n\ninterface ObjectCardProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  directionsStore: DirectionsStore;\n  routTime?: string;\n  setIsDirectionCard: (value: boolean) => void;\n}\n\nexport const ObjectCard: FC<ObjectCardProps> = observer(\n  ({\n    searchStore,\n    mapglStore,\n    directionsStore,\n    routTime,\n    setIsDirectionCard,\n  }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isCompaniesListOpen, setCompaniesListIsOpen] = useState(false);\n\n    const shareLocation = (location: string) => {\n      window.ReactNativeWebView &&\n        window.ReactNativeWebView.postMessage(location);\n    };\n\n    const canBeSwiped =\n      searchStore.currentObject?.type === ResponseObjectTypes.branch ||\n      searchStore.currentObject?.type === ResponseObjectTypes.building;\n\n    const setType = (type?: string) => {\n      for (let item of Places) {\n        if (type === item.type) {\n          return item.title;\n        }\n      }\n      return \"\";\n    };\n\n    return (\n      <>\n        <Wrapper\n          style={{\n            display: searchStore.currentObject ? \"flex\" : \"none\",\n            height: isOpen ? \"95%\" : \"220px\",\n          }}\n        >\n          <Swipe\n            onSwipeUp={() => {\n              setIsOpen(canBeSwiped);\n            }}\n            onSwipeDown={() => {\n              setIsOpen(false);\n            }}\n          >\n            <IconButtonContainer\n              onClick={() => {\n                setIsDirectionCard(true);\n              }}\n            >\n              <IconButton\n                style={{\n                  top: isOpen ? \"75vh\" : \"-35px\",\n                  transition: \"top 0.3s\",\n                }}\n              />\n            </IconButtonContainer>\n            {canBeSwiped ? <SwipeIndicator /> : null}\n            <UpperInfo\n              style={{\n                flexDirection: isOpen ? \"row\" : \"column\",\n                justifyContent: isOpen ? \"space-around\" : \"\",\n                alignItems: isOpen ? \"center\" : \"\",\n              }}\n            >\n              {isOpen ? (\n                <ArrowDownIcon onClick={() => setIsOpen(false)} />\n              ) : null}\n              <PlaceTitle>\n                {searchStore.currentObject?.name\n                  ? searchStore.currentObject?.name\n                  : \"Utility structure\"}\n              </PlaceTitle>\n              {!isOpen ? (\n                <PlaceInfoWrapper>\n                  <PlaceInfo>\n                    {searchStore.currentObject?.subtype ||\n                      searchStore.currentObject?.purpose_name ||\n                      setType(searchStore.currentObject?.type)}\n                  </PlaceInfo>\n                  <PlaceInfo>{routTime}</PlaceInfo>\n                </PlaceInfoWrapper>\n              ) : (\n                <ShareIcon\n                  onClick={() => shareLocation(searchStore.currentObject ?\n                    searchStore.currentObject.type === ResponseObjectTypes.building ? searchStore.currentObject?.address.building_id : searchStore.currentObject.id\n                    : \"\")}\n                  style={{ marginLeft: \"11px\" }}\n                />\n              )}\n            </UpperInfo>\n            <Divider />\n          </Swipe>\n          {searchStore.currentObject?.type === ResponseObjectTypes.building ? (\n            <BuildingCard\n              shareLocation={shareLocation}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[searchStore.currentObject.point.lon, searchStore.currentObject.point.lat]}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.admDiv ||\n          searchStore.currentObject?.type === ResponseObjectTypes.street ? (\n            <AdministrativeDivisionCard\n              shareLocation={shareLocation}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[searchStore.currentObject.point.lon, searchStore.currentObject.point.lat]}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.branch ? (\n            <OrganizationCart\n              shareLocation={shareLocation}\n              setSwipeIsOpen={setIsOpen}\n              mapglStore={mapglStore}\n              searchStore={searchStore}\n              isSwipeOpen={isOpen}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n              coordinates={[searchStore.currentObject.point.lon, searchStore.currentObject.point.lat]}\n            />\n          ) : null}\n        </Wrapper>\n        {isCompaniesListOpen && (\n          <CompaniesList setIsOpen={setCompaniesListIsOpen} />\n        )}\n      </>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/myLocation.ff902024.svg\";","export default __webpack_public_path__ + \"static/media/location.d2150911.svg\";","import styled from \"styled-components\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Location from \"assets/images/location.svg\";\nimport GreenMarker from \"assets/images/green-marker.svg\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\n\nconst DirectionInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 144px;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StartPointWrapper = styled.div`\n  display: flex;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 10px;\n  margin-top: 40px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  border: 0;\n  margin-left: 19px;\n`;\n\nconst LocationIcon = styled.div`\n  background-image: url(${Location});\n  width: 24px;\n  height: 24px;\n`;\n\nconst LocationInputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 16px;\n  margin-top: 36px;\n  max-height: 40px;\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  top: 87px;\n  left: 90px;\n  height: 1px;\n  width: 100%;\n  background: rgba(33, 33, 33, 0.08);\n`;\n\nconst EndPointWrapper = styled.div`\n  margin-top: 42px;\n  margin-left: 44px;\n  display: flex;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst EndPoint = styled.div`\n  margin-left: 19px;\n`;\n\ninterface DirectionInputProps {\n  searchStore: SearchStore;\n  onDirectionInputBack: () => void;\n}\n\nexport const DirectionInput = observer(\n  ({ searchStore, onDirectionInputBack }: DirectionInputProps) => {\n    const backHandler = () => {\n      onDirectionInputBack();\n    };\n\n    return (\n      <DirectionInputWrapper>\n        <StartPointWrapper>\n          <BackArrowIcon onClick={backHandler} />\n          <LocationInputWrapper>\n            <LocationIcon />\n            <Input placeholder=\"Your location\" />\n          </LocationInputWrapper>\n        </StartPointWrapper>\n        <Line />\n        <EndPointWrapper>\n          <GreenMarkerIcon />\n          <EndPoint>\n            {(searchStore.currentObject?.address_name &&\n              searchStore.currentObject.address?.postcode &&\n              searchStore.currentObject.address_name +\n                \", \" +\n                searchStore.currentObject.address?.postcode) ||\n              searchStore.currentObject?.name ||\n              searchStore.currentObject?.full_name}\n          </EndPoint>\n        </EndPointWrapper>\n      </DirectionInputWrapper>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/check.534132f2.svg\";","export enum API_VERSIONS {\n    V2 = '2.0',\n    V3 = '3.0'\n}","/* eslint-disable react-hooks/exhaustive-deps */\n// @ts-ignore\nimport { useDirectionsStore, useMapglStore, useSearchStore } from \"hooks/store\";\nimport { useEffect, useRef, useState } from \"react\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nimport { SearchInput } from \"./SearchInput\";\nimport { Results } from \"./Results\";\nimport styled from \"styled-components\";\nimport { ObjectCard } from \"./ObjectsCard\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport myLocation from \"../assets/images/myLocation.svg\";\nimport { DirectionInput } from \"./DirectionInput\";\nimport { DirectionCard } from \"./DirectionCard\";\nimport React from \"react\";\nvar parse = require(\"wellknown\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Map = styled.div`\n  width: 100%;\n  height: 1000px;\n  overflow: hidden;\n`;\n\nconst MyLocationButton = styled.div`\n  position: fixed;\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  top: 55%;\n  left: 83%;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${myLocation});\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst MapWrapper = React.memo(\n  () => {\n      return <Map id=\"container\"></Map>;\n  },\n  () => true,\n);\n\nexport const Mapgl = () => {\n  const mapglStore = useMapglStore();\n  const searchStore = useSearchStore();\n  const directionsStore = useDirectionsStore();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [mapgl, setMapgl] = useState<mapglTypes.Map | null>(null);\n  const [isObjectCardOpen, setIsObjectCardOpen] = useState(false);\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isDirectionCard, setIsDirectionCard] = useState(false);\n\n  useEffect((): (() => void) => {\n    mapglStore.loadMapglAPI().then(() => {\n      setMapgl(\n        mapglStore.loadMapgl(\"container\", {\n          center: [33.36166, 35.15753],\n          zoom: 13,\n          key: process.env.REACT_APP_TWOGIS_KEY,\n        })\n      );\n      if (mapglStore.zoomControl) {\n        mapglStore.zoomControl.getContainer().id = \"zoom\";\n        let zoomControl = document.getElementById(\"zoom\");\n        if (zoomControl) {\n          zoomControl.style.marginTop = \"70%\";\n          zoomControl.style.width = \"42px\";\n          zoomControl.style.left = \"80%\";\n\n          (zoomControl.children[0] as HTMLElement).style.width = \"100%\";\n        }\n      }\n    });\n\n    return () => mapgl && mapgl.destroy();\n  }, []);\n\n  useEffect(() => {\n    handleMapClick();\n\n    return () => {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    };\n  });\n\n  const handleMapClick = () => {\n    mapgl &&\n      mapgl.on(\"click\", (data: mapglTypes.MapPointerEvent) => {\n        mapglStore.destroyPolygon();\n        mapglStore.destroyMarker();\n        mapglStore.destroyDirection();\n        mapgl && mapgl.setSelectedObjects([]);\n\n        if (data.target?.id) {\n          mapgl && mapgl.setSelectedObjects([data.target?.id]);\n          searchStore.getObjectById(data.target?.id).then((res: any) => {\n            res &&\n              searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n            setIsObjectCardOpen(true);\n          });\n        } else {\n          searchStore\n            .getObjectByGeo(data.lngLat as [number, number])\n            .then((res: any) => {\n              const parsedPolygon = parse(\n                res.data.result.items[0].geometry.selection\n              );\n              mapglStore.buildPolygon(parsedPolygon.coordinates);\n            });\n        }\n      });\n  };\n\n  const onDirectionInputBack = () => {\n    setIsObjectCardOpen(true);\n    setIsDirectionCard(false);\n  };\n\n  const findMyLocation = () => {\n    mapgl?.setCenter([33.36166, 35.15753]);\n    mapgl?.setZoom(18);\n  };\n\n  return (\n    <Wrapper>\n      {isDirectionCard ? (\n        <DirectionInput\n          searchStore={searchStore}\n          onDirectionInputBack={onDirectionInputBack}\n        />\n      ) : (\n        <SearchInput\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setOpenObjectCard={setIsObjectCardOpen}\n          setIsEnterPressed={setIsEnterPressed}\n          searchInputRef={searchInputRef}\n        />\n      )}\n\n      {!isObjectCardOpen && !isDirectionCard && (\n        <Results\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          searchInputRef={searchInputRef}\n          setOpenObjectCard={setIsObjectCardOpen}\n          isEnterPressed={isEnterPressed}\n        />\n      )}\n      {isObjectCardOpen && !isDirectionCard && (\n        <ObjectCard\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          routTime={\"7 km (16 min)\"}\n          setIsDirectionCard={setIsDirectionCard}\n        />\n      )}\n      {isDirectionCard && (\n        <DirectionCard\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          searchStore={searchStore}\n        />\n      )}\n      <MapWrapper/>\n      <MyLocationButton onClick={() => findMyLocation()} />\n    </Wrapper>\n  );\n};\n","import { AxiosInstance } from \"axios\";\n\nexport default class BaseAPI {\n  axios: AxiosInstance;\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n}\n","import BaseAPI from \"./base\";\n\nexport default class DirectionsAPI extends BaseAPI {\n\n    async getDirections(startPoint: number[], endPoint: number[], type: string): Promise<any> {\n        const options = {\n            points: [{\n                lon1: startPoint[0],\n                lat1: startPoint[1],\n                lon2: endPoint[0],\n                lat2: endPoint[1],\n            }],\n            type,\n            output: \"full\"\n        };\n        const res = await this.axios.post(`get_pairs/1.0/car?key=${process.env.REACT_APP_SEARCH_KEY}`, options)\n\n        return res;\n    }\n}\n","import BaseAPI from \"./base\";\nimport { API_VERSIONS } from \"./enums/api-versions.enum\";\nimport { SearchResponse } from \"./interfaces/search.interface\";\n\nexport default class SearchAPI extends BaseAPI {\n  async getSearchResults(\n    inputValue: string,\n    sortPoint: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?q=${inputValue}&sort_point=${sortPoint[0]},${sortPoint[1]}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getObjectById(id: string) {\n    const res = await this.axios.get(\n        `${API_VERSIONS.V3}/items/byid?id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics&key=${process.env.REACT_APP_SEARCH_KEY}`\n      );\n    return res;\n  }\n\n  async getObjectByGeo(sortPoint: [number, number]) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/geo/search?key=${process.env.REACT_APP_SEARCH_KEY}&point=${sortPoint[0]},${sortPoint[1]}&type=adm_div.city,adm_div.region,adm_div.settlement,road,adm_div.district_area,adm_div.division,adm_div.district,street,adm_div.living_area,crossroad,building,adm_div.place,attraction,parking,poi&fields=items.locale,items.flags,search_attributes,items.adm_div,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype`\n    );\n    return res;\n  }\n\n  async getDirections(startPoint: { x: number, y: number }, endPoint: { x: number, y: number }) {\n    const res = await this.axios.post(`carrouting/6.0.0/global?key=${process.env.REACT_APP_SEARCH_KEY}`, {\n      points: [startPoint, endPoint]\n    })\n\n    return res;\n  }\n\n  async getBranchesByBuildingId(id: string) {\n    const res = await this.axios.get(\n        `${API_VERSIONS.V3}/items?building_id=${id}&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )\n    return res;\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport DirectionsAPI from \"./directions\";\nimport SearchAPI from \"./search\";\n\nexport const getClient = (): AxiosInstance => {\n    return axios.create({\n        baseURL: 'https://catalog.api.2gis.com/',\n        timeout: 3000,\n        headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }\n    });\n}\n\nexport interface API {\n    search: SearchAPI;\n    directions: DirectionsAPI;\n}\n\nconst makeApi = (client: AxiosInstance): API => {\n    return {\n        search: new SearchAPI(client),\n        directions: new DirectionsAPI(client)\n    };\n};\nexport default makeApi;","import { API } from 'api/index';\nimport makeApi, { getClient } from \"api\";\n\nexport const useApi = (): API => {\n    const client = getClient();\n    return makeApi(client);\n};\n","import React from \"react\";\nimport {RootStore} from \"stores/RootStore\";\nimport {StoreProvider} from \"contexts/StoreContext\";\nimport {Mapgl} from \"components/Mapgl\";\nimport {useApi} from \"hooks/api\";\nimport \"./style.css\";\n\nexport const App = () => {\n    return <Mapgl />\n};\n\nconst StoreWrapper: React.FC = () => {\n    const api = useApi();\n    const store = new RootStore(api);\n\n    return (\n        <StoreProvider store={store}>\n            <App/>\n        </StoreProvider>\n    );\n};\n\nexport default StoreWrapper;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreWrapper from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreWrapper/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}