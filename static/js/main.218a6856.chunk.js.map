{"version":3,"sources":["enums/ResponseObjectTypes.enum.ts","stores/DirectionsStore.ts","stores/SearchStore.ts","stores/MapglStore.ts","stores/RootStore.ts","contexts/StoreContext.tsx","hooks/store.ts","assets/images/burger.svg","assets/images/search.svg","assets/images/back-arrow.svg","assets/images/cancel.svg","components/SearchInput.tsx","assets/images/marker.svg","assets/images/building.svg","assets/images/branch.svg","assets/images/geo-object.svg","components/DirectionCard.tsx","components/Results.tsx","assets/images/green-marker.svg","assets/images/share.svg","assets/images/icon-button.svg","assets/images/building-icon.svg","assets/images/buildings-green.svg","assets/images/work-time.svg","assets/images/phone.svg","assets/images/internet.svg","assets/images/arrow-right.svg","assets/images/arrow-down.svg","assets/data/places.ts","assets/images/arrow-left.svg","components/CompaniesList.tsx","components/ObjectsCard.tsx","assets/images/location.svg","components/DirectionInput.tsx","assets/images/check.svg","api/enums/api-versions.enum.ts","components/Mapgl.tsx","api/base.ts","api/directions.ts","api/search.ts","api/index.ts","hooks/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResponseObjectTypes","parse","require","DirectionsStore","rootStore","api","this","makeObservable","mapgl","directionsAPI","Directions","directionsApiKey","process","endPoint","type","directions","getDirections","getDirection","then","res","parsedDirection","data","route","mapglStore","buildDirection","coordinates","destroyDirection","observable","SearchStore","inputValue","sortPoint","search","getSearchResults","searchResults","runInAction","id","getObjectById","result","currentObject","item","getObjectByGeo","action","MapglStore","load","mapglAPI","divId","options","Map","zoomControl","addZoomControl","directionsStore","loadDirections","ZoomControl","position","currentMapglMarker","Marker","polygon","destroy","Polygon","interactive","polyline","Polyline","setCenter","getZoom","RootStore","searchStore","StoreContext","React","createContext","StoreProvider","children","store","Provider","value","useRootStore","useContext","useSearchStore","SearchInputWrapper","styled","div","BurgerWrapper","BurgerIcon","Burger","SearchIcon","Search","Input","input","BackArrowIcon","BackArrow","CancelIcon","Cancel","SearchInput","searchInputRef","setOpenObjectCard","setIsEnterPressed","useState","setIsInputFocused","setInputValue","onKeyDown","event","key","style","justifyContent","display","onClick","placeholder","onChange","current","target","ref","onFocus","destroyMarker","marginLeft","onBlur","DirectionType","Wrapper","ItemWrapper","ResultIcon","p","TextWrapper","ItemName","ItemDescription","NotFoundWrapper","NotFoundTitle","NotFoundDescription","Results","observer","isEnterPressed","items","map","setCurrentObject","loadMapglMarker","point","lon","lat","handleClick","backgroundImage","branch","Branch","admDiv","admDivCity","admDivCountry","admDivDistrict","admDivDistrictArea","admDivPlace","admDivRegion","admDivSettlement","building","Building","GeoObject","name","address_name","address","postcode","full_name","meta","code","Places","title","Header","HeaderTitle","ArrowLeftIcon","ArrowLeft","CompanyContainer","CompanyName","CompanyAdditionalInfo","CompanyButton","additionalInfo","CompaniesList","setIsOpen","indexArray","links","branches","count","i","push","companiesArray","index","toString","Divider","UpperInfo","BottomInfo","PlaceTitle","PlaceInfoWrapper","PlaceInfo","BottomText","GreenMarkerIcon","GreenMarker","BuildingIcon","BuildingsIcon","Buildings","ArrowRightIcon","ArrowRight","WorkTimeIcon","WorkTime","PhoneIcon","Phone","InternetIcon","Internet","ArrowDownIcon","ArrowDown","ShareIcon","Share","IconButtonContainer","IconButton","Button","SwipeIndicator","AdditionalInfo","Title","ObjectCard","routTime","setIsDirectionCard","isOpen","isCompaniesListOpen","setCompaniesListIsOpen","onSwipeUp","onSwipeDown","height","top","transition","flexDirection","alignItems","setType","floors","ground_count","width","borderBottom","margin","DirectionInputWrapper","StartPointWrapper","LocationIcon","Location","LocationInputWrapper","Line","EndPointWrapper","EndPoint","DirectionInput","onDirectionInputBack","DirectionCardWrapper","DirectionButtonsWrapper","DirectionButton","RouteTime","Distance","LetsGoButton","button","DirectionsLength","CheckIcon","Check","API_VERSIONS","DirectionCard","faster","selectedDirection","setSelectedDirection","setFaster","shortest","setShortest","useEffect","shorter","destroyPolygon","border","background","borderRadius","duration","toFixed","distance","Mapgl","useRef","setMapgl","isObjectCardOpen","setIsObjectCardOpen","isDirectionCard","loadMapglAPI","loadMapgl","center","zoom","handleMapClick","off","on","setSelectedObjects","lngLat","parsedPolygon","geometry","selection","buildPolygon","BaseAPI","axios","DirectionsAPI","startPoint","a","points","lon1","lat1","lon2","lat2","output","post","SearchAPI","get","V3","V2","makeApi","client","useApi","create","baseURL","timeout","headers","Accept","App","StoreWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.218a6856.chunk.js","sourcesContent":["export enum ResponseObjectTypes {\n    branch = 'branch',\n    building = 'building',\n    street = 'street',\n    parking = 'parking',\n    station = 'station',\n    stationMetro = 'station.metro',\n    stationEntrance = 'station_entrance',\n    stationPlatform = 'station_platform',\n    attraction = 'attraction',\n    crossroad = 'crossroad',\n    gate = 'gate',\n    road = 'road',\n    route = 'route',\n    admDiv = 'adm_div',\n    admDivCity = 'adm_div.city',\n    admDivCountry = 'adm_div.country',\n    admDivDistrictArea = 'adm_div.district_area',\n    admDivDistrict = 'adm_div.district',\n    admDivDivision = 'adm_div.division',\n    admDivLivingArea = 'adm_div.living_area',\n    admDivPlace = 'adm_div.place',\n    admDivRegion = 'adm_div.region',\n    admDivSettlement = 'adm_div.settlement',\n    coordinates = 'coordinates',\n}\n","import mapglTypes from \"@2gis/mapgl/types/index\";\nimport { API } from \"api/index\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { Directions } from \"@2gis/mapgl-directions\";\nvar parse = require(\"wellknown\");\n\nexport class DirectionsStore {\n    rootStore: RootStore;\n    api: API;\n\n    @observable directionsAPI: Directions | null = null;\n\n    constructor(rootStore: RootStore, api: API) {\n        this.rootStore = rootStore;\n        this.api = api;\n\n        makeObservable(this);\n    }\n\n    loadDirections(mapgl: mapglTypes.Map) {\n        this.directionsAPI = new Directions(mapgl, {\n            directionsApiKey: process.env.REACT_APP_SEARCH_KEY as string,\n        });\n    }\n\n    getDirection(endPoint: number[], type: string) {\n        return this.api.directions\n            .getDirections([33.36166, 35.15753], endPoint, type)\n    }\n\n    buildDirection(endPoint: number[], type: string) {\n        this.getDirection(endPoint, type).then((res) => {\n            const parsedDirection = parse(res.data[0].route);\n            this.rootStore.mapglStore.buildDirection(parsedDirection.coordinates);\n\n        });\n\n    }\n\n    destroyDirection() {\n        this.rootStore.mapglStore.destroyDirection();\n    }\n}\n","import { API } from \"api/index\";\nimport { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { ResultItem, SearchResponse } from \"api/interfaces/search.interface\"\n\nexport class SearchStore {\n  rootStore: RootStore;\n  api: API;\n  @observable searchResults: SearchResponse | null = null;\n  @observable currentObject: ResultItem | null = null;\n\n  constructor(rootStore: RootStore, api: API) {\n    this.rootStore = rootStore;\n    this.api = api;\n\n    makeObservable(this);\n  }\n\n  @action async getSearchResults(\n    inputValue: string,\n    sortPoint: [number, number]\n  ) {\n    const searchResults = await this.api.search.getSearchResults(\n      inputValue,\n      sortPoint\n    );\n\n    runInAction(() => {\n      this.searchResults = searchResults.data as SearchResponse;\n    });\n    return this.searchResults;\n  }\n\n  @action async getObjectById(\n    id: string\n  ) {\n    const result = await this.api.search.getObjectById(id)\n\n    runInAction(() => {\n      this.currentObject = result.data as any;\n    });\n  \n    return this.currentObject;\n  }\n\n  @action setCurrentObject(item: ResultItem): ResultItem {\n    return this.currentObject = item;\n  }\n\n  // TODO: refactored this\n  getObjectByGeo(sortPoint: [number,number]): any {\n    return this.api.search.getObjectByGeo(sortPoint);\n  }\n}\n\n","import { action, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { load } from \"@2gis/mapgl\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nexport class MapglStore {\n  rootStore: RootStore;\n  @observable mapglAPI: typeof mapglTypes | null = null;\n  @observable mapgl: mapglTypes.Map | null = null;\n  @observable currentMapglMarker: mapglTypes.Marker | null = null;\n  @observable zoomControl: mapglTypes.ZoomControl | null = null;\n  @observable polygon: mapglTypes.Polygon | null = null;\n  @observable polyline: mapglTypes.Polyline | null = null;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action async loadMapglAPI(): Promise<any> {\n    this.mapglAPI = await load();\n  }\n\n  @action loadMapgl(\n    divId: string,\n    options: mapglTypes.MapOptions\n  ): mapglTypes.Map | null {\n    this.mapgl = this.mapglAPI\n      ? new this.mapglAPI.Map(divId, { ...options, zoomControl: false })\n      : null;\n    this.addZoomControl();\n    this.mapgl && this.rootStore.directionsStore.loadDirections(this.mapgl);\n    return this.mapgl;\n  }\n\n  addZoomControl(): void {\n    this.zoomControl =\n      this.mapglAPI &&\n      this.mapgl &&\n      new this.mapglAPI.ZoomControl(this.mapgl, {\n        position: \"topRight\",\n      });\n  }\n\n  @action loadMapglMarker(\n    options: mapglTypes.MarkerOptions\n  ): mapglTypes.Marker | null {\n    return (this.currentMapglMarker =\n      this.mapgl && this.mapglAPI\n        ? new this.mapglAPI.Marker(this.mapgl, options)\n        : null);\n  }\n\n  buildPolygon(coordinates: number[][][]) {\n    this.polygon && this.polygon.destroy();\n\n    if (this.mapglAPI && this.mapgl) {\n      this.polygon = new this.mapglAPI.Polygon(this.mapgl, {\n        coordinates: coordinates,\n        interactive: false,\n      });\n    }\n  }\n\n  buildDirection(coordinates: number[][]) {\n    this.destroyDirection();\n    if (this.mapglAPI && this.mapgl) {\n      this.polyline = new this.mapglAPI.Polyline(this.mapgl, {\n        coordinates: coordinates,\n      })\n    }\n  }\n\n  destroyDirection() {\n    this.polyline?.destroy();\n  }\n\n  destroyPolygon() {\n    this.polygon?.destroy();\n  }\n\n  destroyMarker() {\n    this.currentMapglMarker?.destroy();\n  }\n\n  setCenter(coordinates: [number, number]) {\n    this.mapgl?.setCenter(coordinates);\n  }\n\n  getZoom(): number | undefined {\n    return this.mapgl?.getZoom();\n  }\n}\n","import { DirectionsStore } from './DirectionsStore';\nimport { SearchStore } from './SearchStore';\nimport { MapglStore } from \"./MapglStore\";\nimport { API } from 'api';\n\nexport class RootStore {\n  api: API;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  directionsStore: DirectionsStore;\n\n\n  constructor(api: API) {\n    this.api = api;\n    this.mapglStore = new MapglStore(this);\n    this.searchStore = new SearchStore(this, api);\n    this.directionsStore = new DirectionsStore(this, api);\n  }\n}\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\n\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\n\nexport type StoreComponent = React.FC<{\n  store: RootStore;\n  children: React.ReactNode;\n}>;\n\nexport const StoreProvider: StoreComponent = ({\n  children,\n  store,\n}): React.ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"contexts/StoreContext\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const useRootStore = (): RootStore => useContext(StoreContext);\n\nexport const useMapglStore = () => {\n    const { mapglStore } = useRootStore();\n    return mapglStore;\n};\n\nexport const useSearchStore = () => {\n    const { searchStore } = useRootStore();\n    return searchStore;\n};\n\nexport const useDirectionsStore = () => {\n    const { directionsStore } = useRootStore();\n    return directionsStore;\n};","export default __webpack_public_path__ + \"static/media/burger.e78eec97.svg\";","export default __webpack_public_path__ + \"static/media/search.7e6201e0.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.ecccce44.svg\";","export default __webpack_public_path__ + \"static/media/cancel.140bb64c.svg\";","import Burger from \"assets/images/burger.svg\";\nimport Search from \"assets/images/search.svg\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Cancel from \"assets/images/cancel.svg\";\nimport { useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 95%;\n  height: 48px;\n  background: #ffffff;\n  border-radius: 30px;\n  border: #fffff;\n  display: flex;\n  margin-top: 50px;\n`;\n\nconst BurgerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 40px;\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 20px;\n  margin: 4px;\n`;\n\nconst BurgerIcon = styled.div`\n  background-image: url(${Burger});\n  width: 18px;\n  height: 12px;\n`;\n\nconst SearchIcon = styled.div`\n  background-image: url(${Search});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  margin-left: 27px;\n  margin-top: 10px;\n  border: 0;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst CancelIcon = styled.div`\n  background-image: url(${Cancel});\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  margin-top: 17px;\n`;\n\ninterface SeacrhInputProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n}\n\nexport const SearchInput = ({\n  searchStore,\n  mapglStore,\n  searchInputRef,\n  setOpenObjectCard,\n  setIsEnterPressed,\n}: SeacrhInputProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    searchInputRef.current && setInputValue(searchInputRef.current?.value);\n    searchStore.getSearchResults(event.target.value, [33.36166, 35.15753]);\n  };\n\n  return (\n    <SearchInputWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          setIsEnterPressed(true);\n        } else {\n          setIsEnterPressed(false);\n        }\n      }}\n      style={{\n        justifyContent: inputValue ? \"space-around\" : \"\",\n      }}\n    >\n      {inputValue === \"\" && (\n        <BurgerWrapper>\n          <BurgerIcon></BurgerIcon>\n        </BurgerWrapper>\n      )}\n      {inputValue === \"\" && <SearchIcon></SearchIcon>}\n      <div style={{ display: \"flex\" }}>\n        {inputValue && (\n          <BackArrowIcon\n            onClick={() => {\n              setOpenObjectCard(false);\n            }}\n          />\n        )}\n        <Input\n          placeholder=\"Search\"\n          onChange={handleChange}\n          ref={searchInputRef}\n          onFocus={() => {\n            setIsInputFocused(true);\n            setOpenObjectCard(false);\n            mapglStore.destroyMarker();\n          }}\n          style={{\n            marginLeft: inputValue ? \"24px\" : \"27px\",\n          }}\n          onBlur={() => setIsInputFocused(false)}\n        ></Input>\n      </div>\n      {inputValue && <CancelIcon />}\n    </SearchInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/marker.3e79593d.svg\";","export default __webpack_public_path__ + \"static/media/building.33b84d52.svg\";","export default __webpack_public_path__ + \"static/media/branch.10541a47.svg\";","export default __webpack_public_path__ + \"static/media/geo-object.d4df4762.svg\";","import styled from \"styled-components\";\nimport Check from \"assets/images/check.svg\";\nimport { useEffect, useState } from \"react\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst DirectionCardWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 52;\n  width: 100%;\n  height: 220px;\n  text-align: center;\n`;\n\nconst DirectionButtonsWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: 10px 16px 0 16px;\n  margin-bottom: 24px;\n`;\n\nconst DirectionButton = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 50% 50;\n  padding: 9px;\n`;\n\nconst RouteTime = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst Distance = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst LetsGoButton = styled.button`\n  width: 315px;\n  height: 48px;\n  background: #23b064;\n  border-radius: 12px;\n  margin-bottom: 10px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst DirectionsLength = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst CheckIcon = styled.div`\n  background-image: url(${Check});\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100%;\n  height: 20px;\n`;\n\nenum DirectionType {\n  faster = \"jam\",\n  shorter = \"shortest\",\n}\n\ninterface DirectionCardProps {\n  directionsStore: DirectionsStore;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n}\n\nexport const DirectionCard = observer(\n  ({ directionsStore, searchStore, mapglStore }: DirectionCardProps) => {\n    const [selectedDirection, setSelectedDirection] = useState(\n      DirectionType.faster\n    );\n\n    const [faster, setFaster] = useState<any>(null);\n    const [shortest, setShortest] = useState<any>(null);\n\n    const buildDirection = (endPoint: number[], type: string) => {\n      directionsStore.buildDirection(endPoint, type);\n    };\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        directionsStore\n          .getDirection(\n            [\n              searchStore.currentObject.point.lon,\n              searchStore.currentObject.point.lat,\n            ],\n            DirectionType.faster\n          )\n          .then((res) => {\n            setFaster(res.data[0]);\n          });\n      searchStore.currentObject &&\n        directionsStore\n          .getDirection(\n            [\n              searchStore.currentObject.point.lon,\n              searchStore.currentObject.point.lat,\n            ],\n            DirectionType.shorter\n          )\n          .then((res) => {\n            setShortest(res.data[0]);\n          });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        buildDirection(\n          [\n            searchStore.currentObject.point.lon,\n            searchStore.currentObject.point.lat,\n          ],\n          selectedDirection\n        );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedDirection, directionsStore, searchStore.currentObject]);\n\n    return (\n      <DirectionCardWrapper>\n        <DirectionButtonsWrapper>\n          <DirectionButton\n            onClick={() => {\n\n              mapglStore.destroyPolygon();\n              mapglStore.destroyMarker();\n              mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.faster);\n            }}\n            style={\n              selectedDirection === DirectionType.faster\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(shortest?.duration / 60).toFixed(1)} min</RouteTime>\n            <CheckIcon />\n            <Distance>{(shortest?.distance / 1000).toFixed(1)} km</Distance>\n            <div>shorter </div>\n          </DirectionButton>\n          <DirectionButton\n            onClick={() => {\n              mapglStore.destroyPolygon();\n              mapglStore.destroyMarker();\n              mapglStore.destroyDirection();\n              setSelectedDirection(DirectionType.shorter);\n            }}\n            style={\n              selectedDirection === DirectionType.shorter\n                ? {\n                    border: \"1px solid  #dafae8\",\n                    background: \"#92c9ab\",\n                    borderRadius: \"3px\",\n                  }\n                : {}\n            }\n          >\n            <RouteTime>{(faster?.duration / 60).toFixed(1)} min</RouteTime>\n            <div></div>\n            <Distance>{(faster?.distance / 1000).toFixed(1)} km</Distance>\n            <div>faster </div>\n          </DirectionButton>\n        </DirectionButtonsWrapper>\n        <LetsGoButton>Let`s go</LetsGoButton>\n        <DirectionsLength>You have 28 routes left</DirectionsLength>\n      </DirectionCardWrapper>\n    );\n  }\n);\n","import Marker from \"assets/images/marker.svg\";\nimport Building from \"assets/images/building.svg\";\nimport Branch from \"assets/images/branch.svg\";\nimport GeoObject from \"assets/images/geo-object.svg\";\nimport { ResponseObjectTypes } from \"enums/ResponseObjectTypes.enum\";\nimport { observer } from \"mobx-react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  position: absolute;\n  top: 120px;\n  z-index: 2;\n  width: 100%;\n  height: 700px;\n  border-radius: 20px 20px 0px 0px;\n  overflow: scroll;\n`;\n\nconst ItemWrapper = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  border-top: 3px solid #fafafafa;\n`;\n\nconst ResultIcon = styled.p`\n  width: 14px;\n  height: 20px;\n  margin-left: 29px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemName = styled.div`\n  margin-left: 29px;\n`;\n\nconst ItemDescription = styled.div`\n  margin-left: 29px;\n  color: rgba(0, 0, 0, 0.6);\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  font-size: 14px;\n`;\n\nconst NotFoundWrapper = styled.div`\n  margin-left: 16px;\n  margin-top: 39px;\n`;\n\nconst NotFoundTitle = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #000000;\n`;\n\nconst NotFoundDescription = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #000000;\n`;\n\ninterface ResultsProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  isEnterPressed: boolean;\n}\n\nexport const Results = observer(\n  ({\n    searchStore,\n    setOpenObjectCard,\n    mapglStore,\n    searchInputRef,\n    isEnterPressed\n  }: ResultsProps) => {\n    const getIcon = (type: ResponseObjectTypes) => {\n      if (type === ResponseObjectTypes.branch) {\n        return Branch;\n      } else if (\n        type === ResponseObjectTypes.admDiv ||\n        type === ResponseObjectTypes.admDivCity ||\n        type === ResponseObjectTypes.admDivCountry ||\n        type === ResponseObjectTypes.admDivDistrict ||\n        type === ResponseObjectTypes.admDivDistrictArea ||\n        type === ResponseObjectTypes.admDivPlace ||\n        type === ResponseObjectTypes.admDivRegion ||\n        type === ResponseObjectTypes.admDivSettlement\n      ) {\n        return Marker;\n      } else if (type === ResponseObjectTypes.building) {\n        return Building;\n      } else {\n        return GeoObject;\n      }\n    };\n\n    const handleClick = (item: any) => {\n      searchStore.setCurrentObject(item);\n      mapglStore.loadMapglMarker({\n        coordinates: [item.point.lon, item.point.lat],\n      });\n      mapglStore.setCenter([item.point.lon, item.point.lat]);\n      setOpenObjectCard(true);\n    };\n    return (\n      <Wrapper\n        style={{\n          display: searchInputRef?.current?.value ? \"flex\" : \"none\",\n        }}\n      >\n        {searchStore.searchResults?.result?.items.map((item: ResultItem) => {\n          return (\n            <ItemWrapper key={item.id} onClick={() => handleClick(item)}>\n              <ResultIcon\n                style={{\n                  backgroundImage: `url(${getIcon(item.type)})`,\n                }}\n              ></ResultIcon>\n              <TextWrapper>\n                <ItemName>{item.name}</ItemName>\n                <ItemDescription>\n                  {(item.address_name &&\n                    item.address?.postcode &&\n                    item.address_name + \", \" + item.address?.postcode) ||\n                    item.name || item.full_name}\n                </ItemDescription>\n              </TextWrapper>\n            </ItemWrapper>\n          );\n        })}\n        {isEnterPressed && searchStore.searchResults?.meta.code === 404 && (\n          <NotFoundWrapper>\n            <NotFoundTitle>No Results Found</NotFoundTitle>\n            <NotFoundDescription>\n              Try searching for something else, check for typos or rephrase it\n            </NotFoundDescription>\n          </NotFoundWrapper>\n        )}\n      </Wrapper>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/green-marker.30aab809.svg\";","export default __webpack_public_path__ + \"static/media/share.4a856fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-button.510f85c7.svg\";","export default __webpack_public_path__ + \"static/media/building-icon.ba15730a.svg\";","export default __webpack_public_path__ + \"static/media/buildings-green.d86a6822.svg\";","export default __webpack_public_path__ + \"static/media/work-time.056843a8.svg\";","export default __webpack_public_path__ + \"static/media/phone.0d461ee9.svg\";","export default __webpack_public_path__ + \"static/media/internet.dab33b8c.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.a70d4ef3.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.cc14feef.svg\";","export const Places = [\n    {title: 'Company', type: 'branch'},\n    {title: 'Building', type: 'building'},\n    {title: 'Street', type: 'street'},\n    {title: 'Parking', type: 'parking'},\n    {title: 'Station', type: 'station'},\n    {title: 'Attraction', type: 'attraction'},\n    {title: 'Crossroad', type: 'crossroad'},\n    {title: 'Gate', type: 'gate'},\n    {title: 'Road', type: 'road'},\n    {title: 'Route', type: 'route'},\n    {title: 'Administrative Division', type: 'adm_div'},\n    {title: 'City', type: 'adm_div.city'},\n    {title: 'Country', type: 'adm_div.country'},\n    {title: 'District Area', type: 'adm_div.district_area'},\n    {title: 'District', type: 'adm_div.district'},\n    {title: 'Division', type: 'adm_div.division'},\n    {title: 'Living Area', type: 'adm_div.living_area'},\n    {title: 'Place', type: 'adm_div.place'},\n    {title: 'Region', type: 'adm_div.region'},\n    {title: 'Settlement', type: 'adm_div.settlement'},\n    {title: 'Coordinates', type: 'coordinates'},\n]\n","export default __webpack_public_path__ + \"static/media/arrow-left.5503f9f6.svg\";","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"assets/images/arrow-left.svg\";\nimport { useSearchStore } from \"../hooks/store\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: absolute;\n  z-index: 900;\n  background-color: #ffffff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 375px;\n  height: 64px;\n  margin-top: 10px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst HeaderTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst ArrowLeftIcon = styled.p`\n  background-image: url(${ArrowLeft});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin: 0 32px;\n`;\n\nconst CompanyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  height: 64px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst CompanyName = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-left: 16px;\n`;\n\nconst CompanyAdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-left: 16px;\n`;\n\ninterface CompanyButtonProps {\n  name: string;\n  additionalInfo: string;\n}\n\nconst CompanyButton = ({ name, additionalInfo }: CompanyButtonProps) => {\n  return (\n    <CompanyContainer>\n      <CompanyName>{`Some name ${name}`}</CompanyName>\n      <CompanyAdditionalInfo>{`Some info ${additionalInfo}`}</CompanyAdditionalInfo>\n    </CompanyContainer>\n  );\n};\n\ninterface CompaniesListProps {\n  setIsOpen: (arg0: boolean) => void;\n}\n\nexport const CompaniesList: FC<CompaniesListProps> = ({ setIsOpen }) => {\n  const searchStore = useSearchStore();\n\n  const companiesArray = () => {\n    let indexArray = [];\n    if (searchStore.currentObject?.links?.branches?.count) {\n      for (\n        let i = 0;\n        i < searchStore.currentObject?.links?.branches?.count;\n        i++\n      ) {\n        indexArray.push(i);\n      }\n    }\n\n    return indexArray;\n  };\n  return (\n    <Wrapper>\n      <Header>\n        <ArrowLeftIcon onClick={() => setIsOpen(false)} />\n        <HeaderTitle>Companies</HeaderTitle>\n      </Header>\n      {companiesArray().map((index) => (\n        <CompanyButton\n          key={index.toString()}\n          name={(index + 1).toString()}\n          additionalInfo={(index + 1).toString()}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n","import GreenMarker from \"assets/images/green-marker.svg\";\nimport Share from \"assets/images/share.svg\";\nimport Button from \"assets/images/icon-button.svg\";\nimport Building from \"assets/images/building-icon.svg\";\nimport Buildings from \"assets/images/buildings-green.svg\";\nimport WorkTime from \"assets/images/work-time.svg\";\nimport Phone from \"assets/images/phone.svg\";\nimport Internet from \"assets/images/internet.svg\";\nimport ArrowRight from \"assets/images/arrow-right.svg\";\nimport ArrowDown from \"assets/images/arrow-down.svg\";\nimport styled from \"styled-components\";\nimport { FC, useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport Swipe from \"react-easy-swipe\";\nimport { Places } from \"../assets/data/places\";\nimport { CompaniesList } from \"./CompaniesList\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  justify-content: flex-start;\n  bottom: 0;\n  position: absolute;\n  z-index: 2;\n  width: 375px;\n  border-radius: 20px 20px 0px 0px;\n  transition-property: height;\n  transition-duration: 0.3s;\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst UpperInfo = styled.div`\n  display: flex;\n  margin: 27px 24px 11px 24px;\n`;\n\nconst BottomInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 18px 24px;\n`;\n\nconst PlaceTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  margin-bottom: 1px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 250px;\n`;\n\nconst PlaceInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PlaceInfo = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst BottomText = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 68%;\n  margin-right: 11px;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-right: 16px;\n`;\n\nconst BuildingIcon = styled.p`\n  background-image: url(${Building});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nconst BuildingsIcon = styled.p`\n  background-image: url(${Buildings});\n  height: 19px;\n  width: 22px;\n  margin-right: 16px;\n  margin-left: 27px;\n  margin-bottom: 7%;\n`;\n\nconst ArrowRightIcon = styled.p`\n  background-image: url(${ArrowRight});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n`;\n\nconst WorkTimeIcon = styled.p`\n  background-image: url(${WorkTime});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nconst PhoneIcon = styled.p`\n  background-image: url(${Phone});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nconst InternetIcon = styled.p`\n  background-image: url(${Internet});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nconst ArrowDownIcon = styled.p`\n  background-image: url(${ArrowDown});\n  background-repeat: no-repeat;\n  width: 14px;\n  height: 12px;\n  margin-right: 28px;\n`;\n\nconst ShareIcon = styled.p`\n  background-image: url(${Share});\n  height: 18px;\n  width: 18px;\n`;\n\nconst IconButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst IconButton = styled.p`\n  background-image: url(${Button});\n  width: 70px;\n  height: 70px;\n  display: flex;\n  position: absolute;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  margin-right: 13px;\n`;\n\nconst SwipeIndicator = styled.div`\n  width: 36px;\n  height: 4px;\n  border-radius: 4px;\n  background: #dbdbdb;\n  margin: 8px auto;\n`;\n\nconst AdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst Title = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 1.25px;\n  text-transform: uppercase;\n  color: rgba(0, 0, 0, 0.6);\n  margin: 16px;\n`;\n\ninterface ObjectCardProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  directionsStore: DirectionsStore;\n  routTime?: string;\n  setIsDirectionCard: (value: boolean) => void;\n}\n\nexport const ObjectCard: FC<ObjectCardProps> = observer(\n  ({ searchStore, mapglStore, directionsStore, routTime, setIsDirectionCard }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isCompaniesListOpen, setCompaniesListIsOpen] = useState(false);\n\n    const setType = (type?: string) => {\n      for (let item of Places) {\n        if (type === item.type) {\n          return item.title;\n        }\n      }\n      return \"\";\n    };\n\n    return (\n      <Swipe\n        onSwipeUp={() => {\n          setIsOpen(!!searchStore.currentObject?.links?.branches?.count);\n        }}\n        onSwipeDown={() => {\n          setIsOpen(false);\n        }}\n      >\n        <Wrapper\n          style={{\n            display: searchStore.currentObject ? \"flex\" : \"none\",\n            height: isOpen ? \"600px\" : \"230px\",\n          }}\n        >\n          <IconButtonContainer\n            onClick={() => {\n              setIsDirectionCard(true);\n            }}\n          >\n            <IconButton\n              style={{\n                top: isOpen ? \"500px\" : \"-35px\",\n                transition: \"top 0.3s\",\n              }}\n            />\n          </IconButtonContainer>\n          {!!searchStore.currentObject?.links?.branches?.count ? (\n            <SwipeIndicator />\n          ) : null}\n          <UpperInfo\n            style={{\n              flexDirection: isOpen ? \"row\" : \"column\",\n              justifyContent: isOpen ? \"space-around\" : \"\",\n              alignItems: isOpen ? \"center\" : \"\",\n            }}\n          >\n            {isOpen ? <ArrowDownIcon /> : null}\n            <PlaceTitle>\n              {searchStore.currentObject?.name\n                ? searchStore.currentObject?.name\n                : \"Utility structure\"}\n            </PlaceTitle>\n            {!isOpen ? (\n              <PlaceInfoWrapper>\n                <PlaceInfo>\n                  {setType(searchStore.currentObject?.type)}\n                </PlaceInfo>\n                <PlaceInfo>{routTime}</PlaceInfo>\n              </PlaceInfoWrapper>\n            ) : (\n              <ShareIcon style={{ marginLeft: \"11px\" }} />\n            )}\n          </UpperInfo>\n          <Divider />\n          {searchStore.currentObject?.address ? (\n            <BottomInfo>\n              <GreenMarkerIcon />\n              <BottomText>\n                {searchStore.currentObject?.address?.postcode &&\n                  searchStore.currentObject.address?.postcode + \", \"}\n                {searchStore.currentObject?.address_name}\n              </BottomText>\n              {!isOpen ? <ShareIcon /> : null}\n            </BottomInfo>\n          ) : null}\n          {!!searchStore.currentObject?.links?.branches?.count ? (\n            <BottomInfo>\n              <BuildingIcon />\n              <BottomText>\n                {searchStore.currentObject?.floors\n                  ? `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies`\n                  : `${searchStore.currentObject?.links?.branches?.count} companies`}\n              </BottomText>\n            </BottomInfo>\n          ) : null}\n\n          <BottomInfo>\n            <WorkTimeIcon />\n            <BottomText>Daily 8 AM — 10 PM Open</BottomText>\n          </BottomInfo>\n          <BottomInfo>\n            <PhoneIcon />\n            <BottomText>+357 22006200</BottomText>\n          </BottomInfo>\n          <BottomInfo>\n            <InternetIcon />\n            <BottomText>www.themallofengomi.com</BottomText>\n          </BottomInfo>\n          {isOpen ? (\n            <div>\n              <Divider\n                style={{\n                  height: \"2px\",\n                }}\n              />\n              <Title>Сompanies</Title>\n              <BottomInfo\n                onClick={() => setCompaniesListIsOpen(true)}\n                style={{\n                  height: \"72px\",\n                  width: \"100%\",\n                  borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                  alignItems: \"center\",\n                  margin: \"18px 0\",\n                }}\n              >\n                <BuildingsIcon />\n                <div\n                  style={{\n                    width: \"360px\",\n                  }}\n                >\n                  <BottomText>All Companies</BottomText>\n                  <AdditionalInfo>{`${searchStore.currentObject?.links?.branches?.count} companies`}</AdditionalInfo>\n                </div>\n                <ArrowRightIcon />\n              </BottomInfo>\n            </div>\n          ) : null}\n        </Wrapper>\n        {isCompaniesListOpen && (\n          <CompaniesList setIsOpen={setCompaniesListIsOpen} />\n        )}\n      </Swipe>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/location.d2150911.svg\";","import styled from \"styled-components\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Location from \"assets/images/location.svg\";\nimport GreenMarker from \"assets/images/green-marker.svg\";\nimport { SearchStore } from \"stores/SearchStore\";\n\nconst DirectionInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 144px;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StartPointWrapper = styled.div`\n  display: flex;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 10px;\n  margin-top: 40px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  border: 0;\n  margin-left: 19px;\n`;\n\nconst LocationIcon = styled.div`\n  background-image: url(${Location});\n  width: 24px;\n  height: 24px;\n`;\n\nconst LocationInputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 16px;\n  margin-top: 36px;\n  max-height: 40px;\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  top: 87px;\n  left: 90px;\n  height: 1px;\n  width: 100%;\n  background: rgba(33, 33, 33, 0.08);\n`;\n\nconst EndPointWrapper = styled.div`\n  margin-top: 42px;\n  margin-left: 44px;\n  display: flex;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst EndPoint = styled.div`\n  margin-left: 19px;\n`;\n\ninterface DirectionInputProps {\n  searchStore: SearchStore;\n  onDirectionInputBack: () => void;\n}\n\nexport const DirectionInput = ({\n  searchStore,\n  onDirectionInputBack,\n}: DirectionInputProps) => {\n  const backHandler = () => {\n    onDirectionInputBack();\n  };\n\n  return (\n    <DirectionInputWrapper>\n      <StartPointWrapper>\n        <BackArrowIcon onClick={backHandler} />\n        <LocationInputWrapper>\n          <LocationIcon />\n          <Input placeholder=\"Your location\" />\n        </LocationInputWrapper>\n      </StartPointWrapper>\n      <Line />\n      <EndPointWrapper>\n        <GreenMarkerIcon />\n        <EndPoint>\n          {(searchStore.currentObject?.address_name &&\n            searchStore.currentObject.address?.postcode &&\n            searchStore.currentObject.address_name +\n              \", \" +\n              searchStore.currentObject.address?.postcode) ||\n            searchStore.currentObject?.name ||\n            searchStore.currentObject?.full_name}\n        </EndPoint>\n      </EndPointWrapper>\n    </DirectionInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/check.534132f2.svg\";","export enum API_VERSIONS {\n    V2 = '2.0',\n    V3 = '3.0'\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useDirectionsStore, useMapglStore, useSearchStore } from \"hooks/store\";\nimport { useEffect, useRef, useState } from \"react\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nimport { SearchInput } from \"./SearchInput\";\nimport { Results } from \"./Results\";\nimport styled from \"styled-components\";\nimport { ObjectCard } from \"./ObjectsCard\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport { DirectionInput } from \"./DirectionInput\";\nimport { DirectionCard } from \"./DirectionCard\";\nvar parse = require(\"wellknown\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Map = styled.div`\n  width: 375px;\n  height: 812px;\n`;\n\nexport const Mapgl = () => {\n  const mapglStore = useMapglStore();\n  const searchStore = useSearchStore();\n  const directionsStore = useDirectionsStore();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [mapgl, setMapgl] = useState<mapglTypes.Map | null>(null);\n  const [isObjectCardOpen, setIsObjectCardOpen] = useState(false);\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isDirectionCard, setIsDirectionCard] = useState(false);\n\n  useEffect((): (() => void) => {\n    mapglStore.loadMapglAPI().then(() => {\n      setMapgl(\n        mapglStore.loadMapgl(\"container\", {\n          center: [33.36166, 35.15753],\n          zoom: 13,\n          key: process.env.REACT_APP_TWOGIS_KEY,\n        })\n      );\n    });\n\n    return () => mapgl && mapgl.destroy();\n  }, []);\n\n  useEffect(() => {\n    handleMapClick();\n\n    return () => {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    };\n  });\n\n  const handleMapClick = () => {\n    mapgl &&\n      mapgl.on(\"click\", (data: mapglTypes.MapPointerEvent) => {\n        mapglStore.destroyPolygon();\n        mapglStore.destroyMarker();\n        mapglStore.destroyDirection();\n        mapgl && mapgl.setSelectedObjects([]);\n\n        if (data.target?.id) {\n          mapgl && mapgl.setSelectedObjects([data.target?.id]);\n          searchStore.getObjectById(data.target?.id).then((res: any) => {\n            res &&\n              searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n            setIsObjectCardOpen(true);\n          });\n        } else {\n          searchStore\n            .getObjectByGeo(data.lngLat as [number, number])\n            .then((res: any) => {\n              const parsedPolygon = parse(\n                res.data.result.items[0].geometry.selection\n              );\n              mapglStore.buildPolygon(parsedPolygon.coordinates);\n            });\n        }\n      });\n  };\n\n  const onDirectionInputBack = () => {\n    setIsObjectCardOpen(true);\n    setIsDirectionCard(false);\n  };\n\n  return (\n    <Wrapper>\n      {isDirectionCard ? (\n        <DirectionInput\n          searchStore={searchStore}\n          onDirectionInputBack={onDirectionInputBack}\n        />\n      ) : (\n        <SearchInput\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setOpenObjectCard={setIsObjectCardOpen}\n          setIsEnterPressed={setIsEnterPressed}\n          searchInputRef={searchInputRef}\n        />\n      )}\n\n      {!isObjectCardOpen && !isDirectionCard && (\n        <Results\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          searchInputRef={searchInputRef}\n          setOpenObjectCard={setIsObjectCardOpen}\n          isEnterPressed={isEnterPressed}\n        />\n      )}\n      {isObjectCardOpen && !isDirectionCard && (\n        <ObjectCard\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          routTime={\"7 km (16 min)\"}\n          setIsDirectionCard={setIsDirectionCard}\n        />\n      )}\n      {isDirectionCard && (\n        <DirectionCard\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          searchStore={searchStore}\n        />\n      )}\n      <Map id=\"container\" style={{ width: \"375px\", height: \"812px\" }}></Map>\n    </Wrapper>\n  );\n};\n","import { AxiosInstance } from \"axios\";\n\nexport default class BaseAPI {\n  axios: AxiosInstance;\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n}\n","import BaseAPI from \"./base\";\n\nexport default class DirectionsAPI extends BaseAPI {\n\n    async getDirections(startPoint: number[], endPoint: number[], type: string): Promise<any> {\n        const options = {\n            points: [{\n                lon1: startPoint[0],\n                lat1: startPoint[1],\n                lon2: endPoint[0],\n                lat2: endPoint[1],\n            }],\n            type,\n            output: \"full\"\n        };\n        const res = await this.axios.post(`get_pairs/1.0/car?key=${process.env.REACT_APP_SEARCH_KEY}`, options)\n\n        return res;\n    }\n}\n","import BaseAPI from \"./base\";\nimport { API_VERSIONS } from \"./enums/api-versions.enum\";\nimport { SearchResponse } from \"./interfaces/search.interface\";\n\nexport default class SearchAPI extends BaseAPI {\n  async getSearchResults(\n    inputValue: string,\n    sortPoint: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?q=${inputValue}&sort_point=${sortPoint[0]},${sortPoint[1]}&fields=items.point,items.address,items.links,items.floors,items.contact_groups&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getObjectById(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items/byid?id=${id}&key=${process.env.REACT_APP_SEARCH_KEY}&fields=items.point`\n    );\n    return res;\n  }\n\n  async getObjectByGeo(sortPoint: [number, number]) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/geo/search?key=${process.env.REACT_APP_SEARCH_KEY}&point=${sortPoint[0]},${sortPoint[1]}&type=adm_div.city,adm_div.region,adm_div.settlement,road,adm_div.district_area,adm_div.division,adm_div.district,street,adm_div.living_area,crossroad,building,adm_div.place,attraction,parking,poi&fields=items.locale,items.flags,search_attributes,items.adm_div,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype`\n    );\n    return res;\n  }\n\n  async getDirections(startPoint: { x: number, y: number }, endPoint: { x: number, y: number }) {\n    const res = await this.axios.post(`carrouting/6.0.0/global?key=${process.env.REACT_APP_SEARCH_KEY}`, {\n      points: [startPoint, endPoint]\n    })\n\n    return res;\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport DirectionsAPI from \"./directions\";\nimport SearchAPI from \"./search\";\n\nexport const getClient = (): AxiosInstance => {\n    return axios.create({\n        baseURL: 'https://catalog.api.2gis.com/',\n        timeout: 3000,\n        headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" }\n    });\n}\n\nexport interface API {\n    search: SearchAPI;\n    directions: DirectionsAPI;\n}\n\nconst makeApi = (client: AxiosInstance): API => {\n    return {\n        search: new SearchAPI(client),\n        directions: new DirectionsAPI(client)\n    };\n};\nexport default makeApi;","import { API } from 'api/index';\nimport makeApi, { getClient } from \"api\";\n\nexport const useApi = (): API => {\n    const client = getClient();\n    return makeApi(client);\n};\n","import React from \"react\";\nimport {RootStore} from \"stores/RootStore\";\nimport {StoreProvider} from \"contexts/StoreContext\";\nimport {Mapgl} from \"components/Mapgl\";\nimport {useApi} from \"hooks/api\";\nimport \"./style.css\";\n\nexport const App = () => {\n    return <Mapgl />\n};\n\nconst StoreWrapper: React.FC = () => {\n    const api = useApi();\n    const store = new RootStore(api);\n\n    return (\n        <StoreProvider store={store}>\n            <App/>\n        </StoreProvider>\n    );\n};\n\nexport default StoreWrapper;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreWrapper from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreWrapper/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}