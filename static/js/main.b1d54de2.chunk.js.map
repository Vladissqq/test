{"version":3,"sources":["api/enums/api-versions.enum.ts","stores/DirectionsStore.ts","stores/SearchStore.ts","stores/MapglStore.ts","stores/RootStore.ts","contexts/StoreContext.tsx","hooks/store.ts","assets/images/burger.svg","assets/images/search.svg","assets/images/back-arrow.svg","assets/images/cancel.svg","api/base.ts","api/search.ts","enums/ResponseObjectTypes.enum.ts","components/SearchInput.tsx","assets/images/black-marker.svg","assets/images/building.svg","assets/images/branch.svg","assets/images/rubric.svg","assets/images/geo-object.svg","enums/PostMessageType.enum.ts","components/Results.tsx","assets/data/places.ts","assets/images/arrow-left.svg","components/CompaniesList.tsx","assets/images/green-marker.svg","assets/images/building-icon.svg","assets/images/buildings-green.svg","assets/images/arrow-right.svg","assets/images/work-time.svg","assets/images/phone.svg","assets/images/internet.svg","assets/images/arrow-down.svg","assets/images/share.svg","assets/images/icon-button.svg","assets/images/entrance.svg","assets/images/facebook.svg","assets/images/instagram.svg","styles/cardStyles.ts","components/BuildingCard.tsx","enums/ContactTypes.enum.ts","components/AdministarativeDivisionCard.tsx","components/OrganizationCart.tsx","enums/Navigators.enum.ts","utils/SendData.ts","components/ObjectsCard.tsx","assets/images/myLocation.svg","assets/images/location.svg","components/DirectionInput.tsx","assets/images/two-gis-disabled.svg","assets/images/google.svg","assets/images/waze.svg","assets/images/osm.svg","components/DirectionCard.tsx","assets/images/zoom-plus.svg","assets/images/zoom-minus.svg","components/Mapgl.tsx","api/directions.ts","api/index.ts","hooks/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_VERSIONS","parse","require","DirectionsStore","rootStore","api","this","makeObservable","mapgl","directionsAPI","Directions","directionsApiKey","process","startPoint","endPoint","type","directions","getDirections","color","getDirection","then","res","parsedDirection","data","route","mapglStore","buildDirection","coordinates","destroyDirection","observable","SearchStore","searchValue","reqParams","push","value","idType","id","viewPoint1","viewPoint2","resLenght","search","getSearchResults","searchResults","console","warn","runInAction","result","items","inputValue","getSearchResultsByQuery","getSuggestions","suggestionsResults","sortedItems","map","item","getObjectById","currentObject","getBranchesByBuildingId","branchesInBuilding","getBranchesByOrganizationId","branchesInOrganization","address","building_id","org","sortPoint","getObjectByGeo","action","MapglStore","load","mapglAPI","divId","options","Map","zoomControl","style","directionsStore","loadDirections","locationMarker","Marker","myLocation","coords","isActive","currentMarker","icon","markers","marker","polygon","destroy","Polygon","interactive","polyline","Polyline","width","forEach","setCenter","getZoom","zoom","setZoom","currentMarkerCoords","RootStore","searchStore","StoreContext","React","createContext","StoreProvider","children","store","Provider","useRootStore","useContext","useMapglStore","useSearchStore","BaseAPI","axios","ResponseObjectTypes","ID_TYPES","district","building","city","region","rubric","metarubric","SearchAPI","a","get","V3","log","V2","post","points","SearchInputWrapper","styled","div","BurgerWrapper","BurgerIcon","Burger","SearchIcon","Search","Input","input","BackArrowIcon","BackArrow","CancelIcon","Cancel","SearchInput","searchInputRef","setOpenObjectCard","setIsEnterPressed","setIsResultsOpen","destroyAll","setIsMarkerCentred","isDirectionCard","useState","setIsInputFocused","setInputValue","handleEnter","current","name","params","setReqParams","viewPoints","getBounds","northEast","southWest","point","buildMarker","lon","lat","on","createMarkerEvent","resultItem","setCurrentObject","setIcon","setCurrentMarker","setCurrentMarkerCoords","onKeyDown","event","key","window","history","pushState","location","href","resetReqParams","index","justifyContent","onClick","focus","display","placeholder","onChange","setSearchValue","target","ref","onFocus","marginLeft","onBlur","PostMessageTypeEnum","Wrapper","ItemWrapper","ResultIcon","p","TextWrapper","ItemName","ItemDescription","NotFoundWrapper","NotFoundTitle","NotFoundDescription","Results","observer","isEnterPressed","isResultsOpen","handleClick","useEffect","length","blur","onfocus","getDescription","adm_div","full_name","hostname","marginBottom","backgroundImage","branch","organization","Branch","admDiv","admDivCity","admDivCountry","admDivDistrict","admDivDistrictArea","admDivPlace","admDivRegion","admDivSettlement","Building","Rubric","GeoObject","Places","title","Header","HeaderTitle","ArrowLeftIcon","ArrowLeft","CompanyContainer","CompanyName","CompanyAdditionalInfo","CompaniesContainer","CompanyButton","setIsOpen","address_comment","purpose_name","CompaniesList","Divider","UpperInfo","BottomInfo","PlaceTitle","PlaceInfoWrapper","PlaceInfo","BottomText","GreenMarkerIcon","GreenMarker","BuildingIcon","BuildingsIcon","Buildings","ArrowRightIcon","ArrowRight","WorkTimeIcon","WorkTime","PhoneIcon","Phone","InternetIcon","Internet","EntranceIcon","Entrance","ArrowDownIcon","ArrowDown","ShareIcon","Share","InstagramIcon","Instagram","FacebookIcon","Facebook","SocialNetworkIconsContainer","IconButtonContainer","IconButton","Button","SwipeIndicator","AdditionalInfo","Title","AllBranchesContainer","BranchesTitle","BranchesCount","CategoriesItem","CategoriesItemText","CategoriesContainer","ContactTypes","BuildingCard","isOpen","setCompaniesListIsOpen","shareData","getAddress","SHARE_INFO","links","branches","count","floors","ground_count","height","borderBottom","alignItems","margin","AdministrativeDivisionCard","NavigatorsEnum","OrganizationCart","isSwipeOpen","setSwipeIsOpen","instagramLink","facebookLink","contactTypeChecker","contactType","contact_groups","contacts","some","Contacts","arr","contact","url","Website","URL","text","workingTime","setWorkingTime","days","n","Date","getDay","schedule","working_hours","from","to","getCurrentDay","flexDirection","overflow","entrances","entrance","geometry","showEntrance","parseInt","branch_count","destroyMarkers","openCompanyCard","full_address_name","postcode","rubrics","SendData","ReactNativeWebView","postMessage","JSON","stringify","ObjectCard","setIsDirectionCard","handleMapClick","isCompaniesListOpen","canBeSwiped","twoGisLink","googleMapsLink","split","onSwipeUp","onSwipeDown","off","top","transition","subtype","setType","street","DirectionInputWrapper","StartPointWrapper","LocationIcon","Location","LocationInputWrapper","Line","EndPointWrapper","EndPoint","DirectionInput","onDirectionInputBack","address_name","DirectionType","DirectionCardWrapper","DirectionButtonsWrapper","DirectionButton","RouteTime","Distance","LetsGoButton","button","DirectionsLength","NavigatorsContainer","TwoGisIcon","TwoGisDisabled","GoogleIcon","Google","WazeIcon","Waze","OsmIcon","Osm","NaviContainer","ScreenContainer","NaviText","DirectionCard","currentGeolocation","faster","selectedDirection","setSelectedDirection","setFaster","shortest","setShortest","isNavigatorsShown","setIsNavigatorsShown","longitude","latitude","shorter","border","background","borderRadius","duration","toFixed","distance","ROUTE","navigator","TWO_GIS","currentPoint","routPoint","WAZE","GOOGLE","OSM","MyLocationButton","CustomButtonsWrapper","ZoomContainer","ZoomPlusButton","Plus","ZoomMinusButton","Minus","MapWrapper","memo","Mapgl","onpopstate","pathname","setIsObjectCardOpen","go","useRef","setMapgl","isObjectCardOpen","isMarkerCentred","isShouldGoToMyLocation","setIsShouldGoToMyLocation","myLocationClickCount","setMyLocationClickCount","loadMapglAPI","loadMapgl","center","setLocationMarker","geolocation","useGeolocation","enableHighAccuracy","onGeolocationUpdate","goToMyLocation","handleZoom","Promise","all","reqParam","response","query","destroyPolygon","setSelectedObjects","lngLat","parsedPolygon","selection","buildPolygon","currentZoom","backgroundColor","setTimeout","DirectionsAPI","lon1","lat1","lon2","lat2","output","makeApi","client","useApi","create","baseURL","timeout","headers","Accept","App","StoreWrapper","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1d54de2.chunk.js","sourcesContent":["export enum API_VERSIONS {\n  V2 = \"2.0\",\n  V3 = \"3.0\",\n}\n","import mapglTypes from \"@2gis/mapgl/types/index\";\nimport { API } from \"api/index\";\nimport { makeObservable, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { Directions } from \"@2gis/mapgl-directions\";\nvar parse = require(\"wellknown\");\n\nexport class DirectionsStore {\n  rootStore: RootStore;\n  api: API;\n\n  @observable directionsAPI: Directions | null = null;\n\n  constructor(rootStore: RootStore, api: API) {\n    this.rootStore = rootStore;\n    this.api = api;\n\n    makeObservable(this);\n  }\n\n  loadDirections(mapgl: mapglTypes.Map) {\n    this.directionsAPI = new Directions(mapgl, {\n      directionsApiKey: process.env.REACT_APP_SEARCH_KEY as string,\n    });\n  }\n\n  getDirection(startPoint: number[], endPoint: number[], type: string) {\n    return this.api.directions.getDirections(startPoint, endPoint, type);\n  }\n\n  buildDirection(\n    startPoint: number[],\n    endPoint: number[],\n    type: string,\n    color: string\n  ): Promise<any> {\n    return this.getDirection(startPoint, endPoint, type).then((res) => {\n      const parsedDirection = parse(res.data[0].route);\n      if (parsedDirection) {\n        this.rootStore.mapglStore.buildDirection(\n          parsedDirection.coordinates,\n          color\n        );\n      }\n      return res;\n    });\n  }\n\n  destroyDirection() {\n    this.rootStore.mapglStore.destroyDirection();\n  }\n}\n","import { API } from \"api/index\";\nimport { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { ResultItem, SearchResponse } from \"api/interfaces/search.interface\";\n\nexport class SearchStore {\n  rootStore: RootStore;\n  api: API;\n  @observable searchResults: ResultItem[] = [];\n  @observable currentObject: ResultItem | null = null;\n  //TODO: Replace any with the type\n  @observable branchesInBuilding: any | null = null;\n  @observable branchesInOrganization: SearchResponse | null = null;\n  @observable suggestionsResults: any[] = [];\n  searchValue: string | null = null;\n  reqParams: any[] = [];\n\n  constructor(rootStore: RootStore, api: API) {\n    this.rootStore = rootStore;\n    this.api = api;\n\n    makeObservable(this);\n  }\n\n  setReqParams(reqParams: any): any[] {\n    this.reqParams.push(reqParams);\n    return this.reqParams;\n  }\n\n  resetReqParams(): void {\n    this.reqParams = []\n  }\n\n  setSearchValue(value: string) {\n    this.searchValue = value;\n  }\n\n  @action\n  async getSearchResults(\n    idType: string,\n    id: number,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number],\n    resLenght: number\n  ) {\n    const searchResults = await this.api.search.getSearchResults(\n      idType,\n      id,\n      viewPoint1,\n      viewPoint2,\n      resLenght\n    );\n\n    console.warn(searchResults);\n\n    runInAction(() => {\n      this.searchResults = searchResults.data?.result?.items as ResultItem[];\n    });\n\n    return searchResults.data?.result?.items || [];\n  }\n\n  @action async getSearchResultsByQuery(\n    inputValue: string,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number]\n  ) {\n    const res = await this.api.search.getSearchResultsByQuery(\n      inputValue,\n      viewPoint1,\n      viewPoint2\n    );\n    runInAction(() => {\n      this.searchResults = (res.data?.result?.items as ResultItem[]) || [];\n    });\n\n    return res.data?.result?.items || [];\n  }\n\n  @action async getSuggestions(\n    inputValue: string,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number]\n  ) {\n    const suggestionsResults = await this.api.search.getSuggestions(\n      inputValue,\n      viewPoint1,\n      viewPoint2,\n    );\n\n    const sortedItems: any[] = [];\n\n    if (suggestionsResults.data.result) {\n      // eslint-disable-next-line array-callback-return\n      suggestionsResults.data.result.items?.map((item: any) => {\n        if (item.type !== \"user_query\") {\n          sortedItems.push(item);\n        }\n      });\n    }\n\n    runInAction(() => {\n      this.suggestionsResults = sortedItems;\n    });\n\n    return this.suggestionsResults;\n  }\n\n  @action\n  async getObjectById(id: string) {\n    const result = await this.api.search.getObjectById(id);\n\n    runInAction(() => {\n      this.currentObject = result.data as any;\n    });\n\n    return this.currentObject;\n  }\n\n  @action\n  async getBranchesByBuildingId(id: string) {\n    const result = await this.api.search.getBranchesByBuildingId(id);\n\n    runInAction(() => {\n      this.branchesInBuilding = result.data as any;\n    });\n    return this.branchesInBuilding;\n  }\n\n  @action\n  async getBranchesByOrganizationId(id: string) {\n    const result = await this.api.search.getBranchesByOrganizationId(id);\n\n    runInAction(() => {\n      this.branchesInOrganization = result.data as any;\n    });\n    return this.branchesInBuilding;\n  }\n\n  @action setCurrentObject(item: ResultItem): ResultItem {\n    if (item && item.address) {\n      this.getBranchesByBuildingId(item.address.building_id);\n      if (item.org) {\n        this.getBranchesByOrganizationId(item.org.id);\n      }\n    }\n    return (this.currentObject = item);\n  }\n\n  // TODO: refactored this\n  getObjectByGeo(sortPoint: [number, number]): any {\n    return this.api.search.getObjectByGeo(sortPoint);\n  }\n}\n","import { action, observable } from \"mobx\";\nimport { RootStore } from \"./RootStore\";\nimport { load } from \"@2gis/mapgl\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nexport class MapglStore {\n  rootStore: RootStore;\n  @observable mapglAPI: typeof mapglTypes | null = null;\n  @observable mapgl: mapglTypes.Map | null = null;\n  @observable markers: mapglTypes.Marker[] | [] = [];\n  @observable polygon: mapglTypes.Polygon | null = null;\n  @observable polyline: mapglTypes.Polyline | null = null;\n  @observable currentMarkerCoords: number[] | null = null;\n  @observable currentMarker: mapglTypes.Marker | null = null;\n  @observable locationMarker: mapglTypes.Marker | null = null;\n  @observable myLocation: number[] = [33.36166, 35.15753];\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action async loadMapglAPI(): Promise<any> {\n    this.mapglAPI = await load();\n  }\n\n  @action loadMapgl(\n    divId: string,\n    options: mapglTypes.MapOptions\n  ): mapglTypes.Map | null {\n    this.mapgl = this.mapglAPI\n      ? new this.mapglAPI.Map(divId, { ...options, zoomControl: false, style: '1d8f661e-60aa-4eee-bf40-d4d911436fe7' })\n      : null;\n    this.mapgl && this.rootStore.directionsStore.loadDirections(this.mapgl);\n    return this.mapgl;\n  }\n\n  @action setLocationMarker(coordinates: number[]) {\n    if (this.mapgl && this.mapglAPI) {\n      this.locationMarker = new this.mapglAPI.Marker(this.mapgl, {\n        coordinates,\n      });\n    }\n  }\n\n  @action setMyLocation(coordinates: number[]): number[] {\n    return (this.myLocation = coordinates);\n  }\n\n  @action buildMarker(\n    coords: number[],\n    isActive: boolean = false\n  ): mapglTypes.Marker | null {\n    if (this.mapgl && this.mapglAPI) {\n      const currentMarker = new this.mapglAPI.Marker(this.mapgl, {\n        coordinates: coords,\n        icon: isActive ? \"./red-marker.svg\" : \"./marker.svg\",\n      });\n      this.markers.push(currentMarker as never);\n      return currentMarker;\n    }\n    return null;\n  }\n\n  @action setCurrentMarker(marker: mapglTypes.Marker): mapglTypes.Marker {\n    return (this.currentMarker = marker);\n  }\n\n  @action buildPolygon(coordinates: number[][][]) {\n    this.polygon && this.polygon.destroy();\n\n    if (this.mapglAPI && this.mapgl) {\n      this.polygon = new this.mapglAPI.Polygon(this.mapgl, {\n        coordinates: coordinates,\n        interactive: false,\n      });\n    }\n  }\n\n  @action buildDirection(coordinates: number[][], color: string) {\n    this.destroyDirection();\n    if (this.mapglAPI && this.mapgl) {\n      this.polyline = new this.mapglAPI.Polyline(this.mapgl, {\n        coordinates: coordinates,\n        color,\n        width: 6,\n      })\n    }\n  }\n\n  @action destroyDirection() {\n    this.polyline?.destroy();\n    this.polyline = null;\n  }\n\n  @action destroyPolygon() {\n    this.polygon?.destroy();\n    this.polygon = null;\n  }\n\n  @action destroyMarkers() {\n    this.markers.forEach((marker) => {\n      marker.destroy();\n    });\n    this.markers = [];\n    this.currentMarker?.destroy()\n  }\n\n  setCenter(coordinates: [number, number]) {\n    this.mapgl?.setCenter(coordinates, {});\n  }\n\n  getZoom(): number | undefined {\n    return this.mapgl?.getZoom();\n  }\n\n  setZoom(zoom: number) {\n    this.mapgl?.setZoom(zoom);\n  }\n\n  @action setCurrentMarkerCoords(coords: number[]): number[] {\n    return (this.currentMarkerCoords = coords);\n  }\n}\n","import { DirectionsStore } from \"./DirectionsStore\";\nimport { SearchStore } from \"./SearchStore\";\nimport { MapglStore } from \"./MapglStore\";\nimport { API } from \"api\";\n\nexport class RootStore {\n  api: API;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  directionsStore: DirectionsStore;\n\n  constructor(api: API) {\n    this.api = api;\n    this.mapglStore = new MapglStore(this);\n    this.searchStore = new SearchStore(this, api);\n    this.directionsStore = new DirectionsStore(this, api);\n  }\n}\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\n\nexport type StoreComponent = React.FC<{\n  store: RootStore;\n  children: React.ReactNode;\n}>;\n\nexport const StoreProvider: StoreComponent = ({\n  children,\n  store,\n}): React.ReactElement => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { StoreContext } from \"contexts/StoreContext\";\nimport { RootStore } from \"stores/RootStore\";\n\nexport const useRootStore = (): RootStore => useContext(StoreContext);\n\nexport const useMapglStore = () => {\n  const { mapglStore } = useRootStore();\n  return mapglStore;\n};\n\nexport const useSearchStore = () => {\n  const { searchStore } = useRootStore();\n  return searchStore;\n};\n\nexport const useDirectionsStore = () => {\n  const { directionsStore } = useRootStore();\n  return directionsStore;\n};\n","export default __webpack_public_path__ + \"static/media/burger.e78eec97.svg\";","export default __webpack_public_path__ + \"static/media/search.7e6201e0.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.ecccce44.svg\";","export default __webpack_public_path__ + \"static/media/cancel.140bb64c.svg\";","import { AxiosInstance } from \"axios\";\n\nexport default class BaseAPI {\n  axios: AxiosInstance;\n  constructor(axios: AxiosInstance) {\n    this.axios = axios;\n  }\n}\n","import BaseAPI from \"./base\";\nimport { API_VERSIONS } from \"./enums/api-versions.enum\";\nimport { SearchResponse } from \"./interfaces/search.interface\";\n\nexport const ID_TYPES: any = {\n  district: \"district_id\",\n  building: \"building_id\",\n  city: \"city_id\",\n  region: \"region_id\",\n  rubric: \"rubric_id\",\n  metarubric: \"rubric_id\",\n  org: \"org_id\",\n  id: \"id\",\n};\n\nexport default class SearchAPI extends BaseAPI {\n  async getSearchResults(\n    idType: string,\n    id: number,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number],\n    resLenght: number\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?page=1&page_size=${resLenght}&${idType}=${id}&viewpoint1=${viewPoint2[0]},${viewPoint1[1]}&viewpoint2=${viewPoint1[0]},${viewPoint2[1]}&fields=items.locale,items.flags,search_attributes,items.adm_div,items.city_alias,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.for_trucks,items.is_incentive,items.paving_type,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype,filters,widgets&key=${process.env.REACT_APP_SEARCH_KEY}&locale=en_CY`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getSearchResultsByQuery(\n    inputValue: string,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number]\n  ): Promise<any> {\n    const res = (await this.axios.get(\n      `${API_VERSIONS.V3}/items?q=${inputValue}&viewpoint1=${viewPoint2[0]},${viewPoint1[1]}&viewpoint2=${viewPoint1[0]},${viewPoint2[1]}&fields=items.locale,items.flags,search_attributes,items.adm_div,items.city_alias,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.for_trucks,items.is_incentive,items.paving_type,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype,filters,widgets&type=adm_div.city,adm_div.district,adm_div.district_area,adm_div.division,adm_div.living_area,adm_div.place,adm_div.region,adm_div.settlement,attraction,branch,building,crossroad,foreign_city,gate,parking,road,route,station,street,coordinates&page_size=20&page=1&key=${process.env.REACT_APP_SEARCH_KEY}`\n    )) as SearchResponse;\n    return res;\n  }\n\n  async getSuggestions(inputValue: string,\n    viewPoint1: [number, number],\n    viewPoint2: [number, number]): Promise<any> {\n    const res = this.axios\n      .get(\n        `${API_VERSIONS.V3}/suggests?key=${process.env.REACT_APP_SEARCH_KEY}&q=${inputValue}&viewpoint1=${viewPoint2[0]},${viewPoint1[1]}&viewpoint2=${viewPoint1[0]},${viewPoint2[1]}&page_size=20&fields=items.name_ex,items.address,items.full_address_name,items.rubrics,items.org,items.adm_div,items.routes,items.type,items.subtype,items.address,items.search_attributes.personal_priority,items.search_attributes.dgis_source_type,items.segment_id,items.region_id,items.locale,items.group,items.context,search_attributes,items.flags,items.has_exchange&type=adm_div.region,adm_div.district_area,adm_div.city,adm_div.settlement,adm_div.district,adm_div.living_area,adm_div.division,adm_div.place,street,branch,building,road,attraction,crossroad,route,route_type,station,station.metro,user_queries,attribute,rubric,meta_rubric,org,market.category,market.attribute,market.suggestor_category`\n      )\n\n    return res;\n  }\n\n  async getObjectById(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items/byid?id=${id}&fields=items.point,items.adm_div,items.address,items.full_address_name,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org&key=${process.env.REACT_APP_SEARCH_KEY}`\n    );\n    console.log(res);\n    return res;\n  }\n\n  async getObjectByGeo(sortPoint: [number, number]) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/geo/search?key=${process.env.REACT_APP_SEARCH_KEY}&point=${sortPoint[0]},${sortPoint[1]}&type=adm_div.city,adm_div.region,adm_div.settlement,road,adm_div.district_area,adm_div.division,adm_div.district,street,adm_div.living_area,crossroad,building,adm_div.place,attraction,parking,poi&fields=items.locale,items.flags,search_attributes,items.adm_div,items.region_id,items.segment_id,items.reviews,items.point,request_type,context_rubrics,query_context,items.links,items.name_ex,items.org,items.group,items.external_content,items.comment,items.ads.options,items.email_for_sending.allowed,items.stat,items.description,items.geometry.centroid,items.geometry.selection,items.geometry.style,items.timezone_offset,items.context,items.address,items.is_paid,items.access,items.access_comment,items.capacity,items.schedule,items.floors,dym,ad,items.rubrics,items.routes,items.reply_rate,items.purpose,items.route_logo,items.has_goods,items.has_apartments_info,items.has_pinned_goods,items.has_realty,items.has_payments,items.is_promoted,items.delivery,items.order_with_cart,search_type,items.has_discount,items.metarubrics,broadcast,items.detailed_subtype`\n    );\n    return res;\n  }\n\n  async getDirections(\n    startPoint: { x: number; y: number },\n    endPoint: { x: number; y: number }\n  ) {\n    const res = await this.axios.post(\n      `carrouting/6.0.0/global?key=${process.env.REACT_APP_SEARCH_KEY}`,\n      {\n        points: [startPoint, endPoint],\n      }\n    );\n\n    return res;\n  }\n\n  async getBranchesByBuildingId(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V3}/items?building_id=${id}&key=${process.env.REACT_APP_SEARCH_KEY}`\n    );\n    return res;\n  }\n\n  async getBranchesByOrganizationId(id: string) {\n    const res = await this.axios.get(\n      `${API_VERSIONS.V2}/catalog/branch/list?org_id=${id}&fields=items.point,items.address,items.links,items.floors,items.contact_groups,items.schedule,items.rubrics,items.org,items.full_address_name&key=${process.env.REACT_APP_SEARCH_KEY}`\n    );\n    return res;\n  }\n}\n","export enum ResponseObjectTypes {\n  branch = \"branch\",\n  building = \"building\",\n  street = \"street\",\n  parking = \"parking\",\n  station = \"station\",\n  stationMetro = \"station.metro\",\n  stationEntrance = \"station_entrance\",\n  stationPlatform = \"station_platform\",\n  attraction = \"attraction\",\n  crossroad = \"crossroad\",\n  gate = \"gate\",\n  road = \"road\",\n  route = \"route\",\n  admDiv = \"adm_div\",\n  admDivCity = \"adm_div.city\",\n  admDivCountry = \"adm_div.country\",\n  admDivDistrictArea = \"adm_div.district_area\",\n  admDivDistrict = \"adm_div.district\",\n  admDivDivision = \"adm_div.division\",\n  admDivLivingArea = \"adm_div.living_area\",\n  admDivPlace = \"adm_div.place\",\n  admDivRegion = \"adm_div.region\",\n  admDivSettlement = \"adm_div.settlement\",\n  coordinates = \"coordinates\",\n  rubric = \"rubric\",\n  metarubric = \"metarubric\",\n  organization = \"org\",\n}\n","/* eslint-disable  */\nimport Burger from \"assets/images/burger.svg\";\nimport Search from \"assets/images/search.svg\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Cancel from \"assets/images/cancel.svg\";\nimport { useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ID_TYPES } from \"api/search\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 95%;\n  height: 48px;\n  background: #ffffff;\n  border-radius: 30px;\n  border: #fffff;\n  display: flex;\n  margin: 0 auto;\n  margin-top: 50px;\n  left: 0;\n  right: 0;\n  margin-top: 50px;\n`;\n\nconst BurgerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 40px;\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 20px;\n  margin: 4px;\n`;\n\nconst BurgerIcon = styled.div`\n  background-image: url(${Burger});\n  width: 18px;\n  height: 12px;\n`;\n\nconst SearchIcon = styled.div`\n  background-image: url(${Search});\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  margin-left: 27px;\n  margin-top: 10px;\n  border: 0;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 7px;\n  margin-top: 15px;\n`;\n\nconst CancelIcon = styled.div`\n  background-image: url(${Cancel});\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  margin-top: 17px;\n`;\n\ninterface SeacrhInputProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n  setIsResultsOpen: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  destroyAll: () => void;\n  setIsMarkerCentred: (val: boolean) => void;\n  isDirectionCard: boolean;\n}\n\nexport const SearchInput = ({\n  searchStore,\n  mapglStore,\n  searchInputRef,\n  setOpenObjectCard,\n  setIsEnterPressed,\n  setIsResultsOpen,\n  destroyAll,\n  setIsMarkerCentred,\n  isDirectionCard,\n}: SeacrhInputProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (searchInputRef.current?.value) {\n      searchInputRef.current && setInputValue(searchInputRef.current?.value);\n      searchStore.setSearchValue(searchInputRef.current?.value);\n    }\n    const viewPoints = mapglStore.mapgl?.getBounds();\n\n    searchStore.getSuggestions(\n      event.target.value,\n      viewPoints?.northEast as [number, number],\n      viewPoints?.southWest as [number, number]\n    );\n  };\n\n  const handleEnter = async (item: any) => {\n    if (searchInputRef.current) {\n      searchInputRef.current.value = item.name;\n    }\n\n    if (\n      item.type === \"rubric\" ||\n      item.type === \"metarubric\" ||\n      item.type === \"org\"\n    ) {\n      const reqParams = {\n        type: \"id\",\n        params: {\n          idType: ID_TYPES[item.type],\n          id: item.id,\n        },\n      };\n\n      searchStore.setReqParams(reqParams as any);\n\n      const viewPoints = mapglStore.mapgl?.getBounds();\n\n      const res = await searchStore.getSearchResults(\n        reqParams.params.idType,\n        reqParams.params.id,\n        viewPoints?.northEast as [number, number],\n        viewPoints?.southWest as [number, number],\n        50\n      );\n\n      res.map((item: any) => {\n        if (item.point) {\n          const marker = mapglStore.buildMarker([\n            item.point.lon,\n            item.point.lat,\n          ]);\n          marker?.on(\"click\", () => {\n            createMarkerEvent(marker, item);\n          });\n        }\n      });\n      setIsResultsOpen(false);\n      // TODO fix types\n    } else {\n      const res: any = await searchStore.getObjectById(item.id);\n      const resultItem: ResultItem = res.result?.items[0];\n\n      searchStore.setCurrentObject(resultItem);\n      mapglStore.buildMarker([resultItem.point.lon, resultItem.point.lat]);\n      mapglStore.setCenter([resultItem.point.lon, resultItem.point.lat]);\n      setOpenObjectCard(true);\n    }\n  };\n\n  const createMarkerEvent = (marker: mapglTypes.Marker, item: ResultItem) => {\n    if (!isDirectionCard) {\n      mapglStore.markers.map((marker: mapglTypes.Marker) => {\n        marker.setIcon({ icon: \"./marker.svg\" });\n      });\n      mapglStore.setCurrentMarker(marker);\n      marker.setIcon({ icon: \"./red-marker.svg\" });\n      searchStore.setCurrentObject(item);\n      setOpenObjectCard(true);\n      mapglStore.setCurrentMarkerCoords([item.point.lon, item.point.lat]);\n      mapglStore.setCenter([item.point.lon, item.point.lat]);\n    }\n  };\n\n  return (\n    <SearchInputWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          window.history.pushState(\n            null,\n            \"\",\n            window.location.href + \"/results\"\n          );\n          searchStore.resetReqParams();\n          if (searchInputRef.current?.value) {\n            setIsMarkerCentred(false);\n            destroyAll();\n            searchStore.suggestionsResults.map((item: any, index) => {\n              handleEnter(item);\n            });\n          }\n        } else {\n          setIsEnterPressed(false);\n        }\n      }}\n      style={{\n        justifyContent: inputValue ? \"space-around\" : \"\",\n      }}\n      onClick={() => {\n        searchInputRef.current && searchInputRef.current.focus();\n      }}\n    >\n      {inputValue === \"\" && (\n        <BurgerWrapper>\n          <BurgerIcon></BurgerIcon>\n        </BurgerWrapper>\n      )}\n      {inputValue === \"\" && <SearchIcon></SearchIcon>}\n      <div style={{ display: \"flex\" }}>\n        {inputValue && (\n          <BackArrowIcon\n            onClick={() => {\n              if (searchInputRef?.current?.value && searchStore.searchValue) {\n                searchInputRef.current.value = searchStore.searchValue;\n              }\n              setOpenObjectCard(false);\n            }}\n          />\n        )}\n        <Input\n          placeholder=\"Search\"\n          onChange={handleChange}\n          ref={searchInputRef}\n          onFocus={() => {\n            setIsInputFocused(true);\n            setIsResultsOpen(true);\n            setOpenObjectCard(false);\n            setIsEnterPressed(false);\n            destroyAll();\n          }}\n          style={{\n            marginLeft: inputValue ? \"24px\" : \"27px\",\n          }}\n          onBlur={() => setIsInputFocused(false)}\n        ></Input>\n      </div>\n      {inputValue && (\n        <CancelIcon\n          onClick={() => {\n            if (searchInputRef.current?.value) {\n              searchInputRef.current.value = \"\";\n              destroyAll();\n              setOpenObjectCard(false);\n              setIsResultsOpen(false);\n            }\n          }}\n        />\n      )}\n    </SearchInputWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/black-marker.953d3c77.svg\";","export default __webpack_public_path__ + \"static/media/building.33b84d52.svg\";","export default __webpack_public_path__ + \"static/media/branch.267d7457.svg\";","export default __webpack_public_path__ + \"static/media/rubric.6ae348e4.svg\";","export default __webpack_public_path__ + \"static/media/geo-object.ccba00f5.svg\";","export enum PostMessageTypeEnum {\n  URL = \"url\",\n  ROUTE = \"route\",\n  SHARE_INFO = \"share_info\",\n}\n","/* eslint-disable  */\nimport Marker from \"assets/images/black-marker.svg\";\nimport Building from \"assets/images/building.svg\";\nimport Branch from \"assets/images/branch.svg\";\nimport Rubric from \"assets/images/rubric.svg\";\nimport GeoObject from \"assets/images/geo-object.svg\";\nimport { ResponseObjectTypes } from \"enums/ResponseObjectTypes.enum\";\nimport { observer } from \"mobx-react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport styled from \"styled-components\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport { useEffect } from \"react\";\nimport { ID_TYPES } from \"api/search\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\n\nconst Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  position: absolute;\n  top: 120px;\n  z-index: 60;\n  width: 100%;\n  height: 100%;\n  border-radius: 20px 20px 0px 0px;\n  overflow: scroll;\n`;\n\nconst ItemWrapper = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  border-top: 3px solid #fafafafa;\n`;\n\nconst ResultIcon = styled.p`\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-left: 22px;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemName = styled.div`\n  margin-left: 29px;\n`;\n\nconst ItemDescription = styled.div`\n  margin-left: 29px;\n  color: rgba(0, 0, 0, 0.6);\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  font-size: 14px;\n`;\n\nconst NotFoundWrapper = styled.div`\n  margin-left: 16px;\n  margin-top: 39px;\n`;\n\nconst NotFoundTitle = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #000000;\n`;\n\nconst NotFoundDescription = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #000000;\n`;\n\ninterface ResultsProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setOpenObjectCard: (value: boolean) => void;\n  searchInputRef: React.RefObject<HTMLInputElement>;\n  isEnterPressed: boolean;\n  destroyAll: () => void;\n  isResultsOpen: boolean;\n  setIsResultsOpen: (val: boolean) => void;\n  isDirectionCard: boolean;\n  setIsMarkerCentred: (val: boolean) => void;\n  setIsEnterPressed: (value: boolean) => void;\n}\n\nexport const Results = observer(\n  ({\n    searchStore,\n    setOpenObjectCard,\n    mapglStore,\n    searchInputRef,\n    isEnterPressed,\n    destroyAll,\n    isResultsOpen,\n    setIsResultsOpen,\n    isDirectionCard,\n    setIsMarkerCentred,\n    setIsEnterPressed,\n  }: ResultsProps) => {\n    const getIcon = (type: ResponseObjectTypes) => {\n      if (\n        type === ResponseObjectTypes.branch ||\n        type === ResponseObjectTypes.organization\n      ) {\n        return Branch;\n      } else if (\n        type === ResponseObjectTypes.admDiv ||\n        type === ResponseObjectTypes.admDivCity ||\n        type === ResponseObjectTypes.admDivCountry ||\n        type === ResponseObjectTypes.admDivDistrict ||\n        type === ResponseObjectTypes.admDivDistrictArea ||\n        type === ResponseObjectTypes.admDivPlace ||\n        type === ResponseObjectTypes.admDivRegion ||\n        type === ResponseObjectTypes.admDivSettlement\n      ) {\n        return Marker;\n      } else if (type === ResponseObjectTypes.building) {\n        return Building;\n      } else if (\n        type === ResponseObjectTypes.metarubric ||\n        type === ResponseObjectTypes.rubric\n      ) {\n        return Rubric;\n      } else {\n        return GeoObject;\n      }\n    };\n\n    const handleClick = async (item: any) => {\n      if (searchInputRef.current) {\n        searchInputRef.current.value = item.name;\n      }\n\n      if (\n        item.type === \"rubric\" ||\n        item.type === \"metarubric\" ||\n        item.type === \"org\"\n      ) {\n        const reqParams = {\n          type: \"id\",\n          params: {\n            idType: ID_TYPES[item.type],\n            id: item.id,\n          },\n        };\n\n        searchStore.setReqParams(reqParams);\n\n        const viewPoints = mapglStore.mapgl?.getBounds();\n\n        const res = await searchStore.getSearchResults(\n          reqParams.params.idType,\n          reqParams.params.id,\n          viewPoints?.northEast as [number, number],\n          viewPoints?.southWest as [number, number],\n          50\n        );\n\n        res.map((item: any) => {\n          if (item.point) {\n            const marker = mapglStore.buildMarker([\n              item.point.lon,\n              item.point.lat,\n            ]);\n            marker?.on(\"click\", () => {\n              createMarkerEvent(marker, item);\n            });\n          }\n        });\n        setIsResultsOpen(false);\n        // TODO fix types\n      } else {\n        const res: any = await searchStore.getObjectById(item.id);\n        const resultItem: ResultItem = res.result?.items[0];\n\n        searchStore.setCurrentObject(resultItem);\n        mapglStore.buildMarker([resultItem.point.lon, resultItem.point.lat]);\n        mapglStore.setCenter([resultItem.point.lon, resultItem.point.lat]);\n        setOpenObjectCard(true);\n      }\n    };\n\n    const createMarkerEvent = (marker: mapglTypes.Marker, item: ResultItem) => {\n      if (!isDirectionCard) {\n        mapglStore.markers.map((marker: mapglTypes.Marker) => {\n          marker.setIcon({ icon: \"./marker.svg\" });\n        });\n        mapglStore.setCurrentMarker(marker);\n        marker.setIcon({ icon: \"./red-marker.svg\" });\n        searchStore.setCurrentObject(item);\n        setOpenObjectCard(true);\n        mapglStore.setCurrentMarkerCoords([item.point.lon, item.point.lat]);\n        mapglStore.setCenter([item.point.lon, item.point.lat]);\n      }\n    };\n\n    useEffect(() => {\n      if (isEnterPressed && searchStore.searchResults.length) {\n        searchStore.searchResults.map((item: ResultItem) => {\n          const marker =\n            item?.point &&\n            mapglStore.buildMarker([item.point.lon, item.point.lat]);\n\n          marker?.on(\"click\", () => {\n            createMarkerEvent(marker, item);\n          });\n        });\n        setIsResultsOpen(false);\n        searchInputRef.current?.blur();\n      }\n    }, [isEnterPressed]);\n\n    useEffect(() => {\n      if (!isResultsOpen && searchInputRef.current?.onfocus) {\n        searchInputRef.current.onfocus = () => {\n          !isResultsOpen && setIsResultsOpen(true);\n        };\n      }\n    }, [isResultsOpen, searchInputRef]);\n\n    const getDescription = (item: any) => {\n      if (item.type === \"org\") {\n        return \"organization\";\n      } else if (item.type === \"branch\") {\n        return (\n          item?.type +\n            \", \" +\n            (item?.adm_div?.length &&\n              item?.adm_div[item.adm_div?.length - 1].name) +\n            \", \" +\n            item?.adm_div[item.adm_div?.length - 2].name || item?.full_name\n        );\n      } else if (item.type === \"rubric\") {\n        return item.type;\n      } else {\n        return (\n          item?.type +\n            \", \" +\n            (item?.adm_div?.length &&\n              item?.adm_div[item.adm_div?.length - 1].name) || item?.full_name\n        );\n      }\n    };\n    return (\n      <>\n        {isResultsOpen && (\n          <Wrapper\n            style={{\n              display: searchInputRef?.current?.value ? \"flex\" : \"none\",\n            }}\n          >\n            {searchStore.suggestionsResults.map((item: any, index) => {\n              return (\n                <ItemWrapper\n                  key={item.id}\n                  onClick={() => {\n                    window.history.pushState(\n                      null,\n                      \"\",\n                      window.location.hostname + \"/results\"\n                    );\n                    searchStore.resetReqParams();\n                    setIsMarkerCentred(false);\n                    destroyAll();\n                    handleClick(item);\n                  }}\n                  style={{\n                    marginBottom:\n                      searchStore.suggestionsResults.length - 1 === index\n                        ? \"200px\"\n                        : \"0\",\n                  }}\n                >\n                  <ResultIcon\n                    style={{\n                      backgroundImage: `url(${getIcon(item.type)})`,\n                    }}\n                  ></ResultIcon>\n                  <TextWrapper>\n                    <ItemName>{item?.name}</ItemName>\n                    <ItemDescription>{getDescription(item)}</ItemDescription>\n                  </TextWrapper>\n                </ItemWrapper>\n              );\n            })}\n            {isEnterPressed && (\n              //  && searchStore.searchResults?.meta.code === 404 &&\n              <NotFoundWrapper>\n                <NotFoundTitle>No Results Found</NotFoundTitle>\n                <NotFoundDescription>\n                  Try searching for something else, check for typos or rephrase\n                  it\n                </NotFoundDescription>\n              </NotFoundWrapper>\n            )}\n          </Wrapper>\n        )}\n      </>\n    );\n  }\n);\n","export const Places = [\n  { title: \"Company\", type: \"branch\" },\n  { title: \"Building\", type: \"building\" },\n  { title: \"Street\", type: \"street\" },\n  { title: \"Parking\", type: \"parking\" },\n  { title: \"Station\", type: \"station\" },\n  { title: \"Attraction\", type: \"attraction\" },\n  { title: \"Crossroad\", type: \"crossroad\" },\n  { title: \"Gate\", type: \"gate\" },\n  { title: \"Road\", type: \"road\" },\n  { title: \"Route\", type: \"route\" },\n  { title: \"Administrative Division\", type: \"adm_div\" },\n  { title: \"City\", type: \"adm_div.city\" },\n  { title: \"Country\", type: \"adm_div.country\" },\n  { title: \"District Area\", type: \"adm_div.district_area\" },\n  { title: \"District\", type: \"adm_div.district\" },\n  { title: \"Division\", type: \"adm_div.division\" },\n  { title: \"Living Area\", type: \"adm_div.living_area\" },\n  { title: \"Place\", type: \"adm_div.place\" },\n  { title: \"Region\", type: \"adm_div.region\" },\n  { title: \"Settlement\", type: \"adm_div.settlement\" },\n  { title: \"Coordinates\", type: \"coordinates\" },\n];\n","export default __webpack_public_path__ + \"static/media/arrow-left.5503f9f6.svg\";","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"assets/images/arrow-left.svg\";\nimport { useMapglStore, useSearchStore } from \"../hooks/store\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport { MapglStore } from \"stores/MapglStore\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  position: absolute;\n  z-index: 900;\n  background-color: #ffffff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 375px;\n  height: 64px;\n  margin-top: 10px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst HeaderTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst ArrowLeftIcon = styled.p`\n  background-image: url(${ArrowLeft});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin: 0 32px;\n`;\n\nconst CompanyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  height: 64px;\n  border-bottom: solid 1px rgba(33, 33, 33, 0.08);\n  border-bottom-color: rgba(33, 33, 33, 0.08);\n`;\n\nconst CompanyName = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-left: 16px;\n`;\n\nconst CompanyAdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-left: 16px;\n`;\n\nconst CompaniesContainer = styled.div`\n  width: 100%;\n  height: 800px;\n  overflow: scroll;\n`;\n\ninterface CompanyButtonProps {\n  setIsOpen: (arg0: boolean) => void;\n  searchStore: SearchStore;\n  item: ResultItem;\n  mapglStore: MapglStore;\n}\n\nconst CompanyButton: FC<CompanyButtonProps> = ({\n  setIsOpen,\n  searchStore,\n  item,\n}) => {\n  const openCompanyCard = () => {\n    searchStore.getObjectById(item.id).then((res: any) => {\n      res && searchStore.setCurrentObject(res.result?.items[0]);\n      setIsOpen(false);\n    });\n  };\n  return (\n    <CompanyContainer onClick={() => openCompanyCard()}>\n      <CompanyName>{`${item.name}`}</CompanyName>\n      <CompanyAdditionalInfo>{`${\n        item.address_comment || item.purpose_name\n      }`}</CompanyAdditionalInfo>\n    </CompanyContainer>\n  );\n};\n\ninterface CompaniesListProps {\n  setIsOpen: (arg0: boolean) => void;\n}\n\nexport const CompaniesList: FC<CompaniesListProps> = ({ setIsOpen }) => {\n  const searchStore = useSearchStore();\n  const mapglStore = useMapglStore();\n  return (\n    <Wrapper>\n      <Header>\n        <ArrowLeftIcon onClick={() => setIsOpen(false)} />\n        <HeaderTitle>Companies</HeaderTitle>\n      </Header>\n      <CompaniesContainer>\n        {searchStore.branchesInBuilding.result.items.map((item: any) => (\n          <CompanyButton\n            key={item.id}\n            item={item}\n            setIsOpen={setIsOpen}\n            searchStore={searchStore}\n            mapglStore={mapglStore}\n          />\n        ))}\n      </CompaniesContainer>\n    </Wrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/green-marker.30aab809.svg\";","export default __webpack_public_path__ + \"static/media/building-icon.ba15730a.svg\";","export default __webpack_public_path__ + \"static/media/buildings-green.d86a6822.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.a70d4ef3.svg\";","export default __webpack_public_path__ + \"static/media/work-time.056843a8.svg\";","export default __webpack_public_path__ + \"static/media/phone.0d461ee9.svg\";","export default __webpack_public_path__ + \"static/media/internet.dab33b8c.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.cc14feef.svg\";","export default __webpack_public_path__ + \"static/media/share.4a856fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-button.510f85c7.svg\";","export default __webpack_public_path__ + \"static/media/entrance.4362b935.svg\";","export default __webpack_public_path__ + \"static/media/facebook.5e19df6c.svg\";","export default __webpack_public_path__ + \"static/media/instagram.a062d315.svg\";","import styled from \"styled-components\";\nimport GreenMarker from \"../assets/images/green-marker.svg\";\nimport Building from \"../assets/images/building-icon.svg\";\nimport Buildings from \"../assets/images/buildings-green.svg\";\nimport ArrowRight from \"../assets/images/arrow-right.svg\";\nimport WorkTime from \"../assets/images/work-time.svg\";\nimport Phone from \"../assets/images/phone.svg\";\nimport Internet from \"../assets/images/internet.svg\";\nimport ArrowDown from \"../assets/images/arrow-down.svg\";\nimport Share from \"../assets/images/share.svg\";\nimport Button from \"../assets/images/icon-button.svg\";\nimport Entrance from \"../assets/images/entrance.svg\";\nimport Facebook from \"../assets/images/facebook.svg\";\nimport Instagram from \"../assets/images/instagram.svg\";\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  background: #ffffff;\n  justify-content: flex-start;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  border-radius: 20px 20px 0px 0px;\n  transition-property: height;\n  transition-duration: 0.3s;\n  z-index: 60;\n`;\n\nexport const Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: rgba(33, 33, 33, 0.08);\n`;\n\nexport const UpperInfo = styled.div`\n  display: flex;\n  margin: 9px 24px 11px 24px;\n`;\n\nexport const BottomInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 18px 24px;\n`;\n\nexport const PlaceTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  margin-bottom: 1px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 250px;\n`;\n\nexport const PlaceInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const PlaceInfo = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const BottomText = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: rgba(0, 0, 0, 0.87);\n  width: 68%;\n  margin-right: 11px;\n`;\n\nexport const GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  margin-right: 16px;\n`;\n\nexport const BuildingIcon = styled.p`\n  background-image: url(${Building});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const BuildingsIcon = styled.p`\n  background-image: url(${Buildings});\n  height: 19px;\n  width: 22px;\n  margin-right: 16px;\n  margin-left: 27px;\n  margin-bottom: 7%;\n`;\n\nexport const ArrowRightIcon = styled.p`\n  background-image: url(${ArrowRight});\n  background-repeat: no-repeat;\n  width: 12px;\n  height: 12px;\n  margin-right: 24px;\n`;\n\nexport const WorkTimeIcon = styled.p`\n  background-image: url(${WorkTime});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const PhoneIcon = styled.p`\n  background-image: url(${Phone});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const InternetIcon = styled.p`\n  background-image: url(${Internet});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const EntranceIcon = styled.p`\n  background-image: url(${Entrance});\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n`;\n\nexport const ArrowDownIcon = styled.p`\n  background-image: url(${ArrowDown});\n  background-repeat: no-repeat;\n  width: 14px;\n  height: 12px;\n  margin-right: 28px;\n`;\n\nexport const ShareIcon = styled.p`\n  background-image: url(${Share});\n  height: 18px;\n  width: 18px;\n`;\n\nexport const InstagramIcon = styled.p`\n  background-image: url(${Instagram});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const FacebookIcon = styled.p`\n  background-image: url(${Facebook});\n  height: 66px;\n  width: 66px;\n  margin: 4px;\n`;\n\nexport const SocialNetworkIconsContainer = styled.div`\n  display: flex;\n`;\n\nexport const IconButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const IconButton = styled.p`\n  background-image: url(${Button});\n  width: 70px;\n  height: 70px;\n  display: flex;\n  position: absolute;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  margin-right: 13px;\n`;\n\nexport const SwipeIndicator = styled.div`\n  width: 36px;\n  min-height: 4px;\n  border-radius: 4px;\n  background: #dbdbdb;\n  margin: 8px auto;\n`;\n\nexport const AdditionalInfo = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const Title = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 1.25px;\n  text-transform: uppercase;\n  color: rgba(0, 0, 0, 0.6);\n  margin: 16px;\n`;\n\nexport const CompanyContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 32px;\n`;\nexport const AllBranchesContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: solid 2px rgba(33, 33, 33, 0.08);\n`;\nexport const BranchesTitle = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 6px 16px 11px 16px;\n`;\nexport const BranchesCount = styled.div`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: 0.1px;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CategoriesItem = styled.div`\n  background: rgba(33, 33, 33, 0.08);\n  border-radius: 16px;\n  height: 32px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n`;\n\nexport const CategoriesItemText = styled.div`\n  font-family: Intel;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.87);\n  margin: 6px 12px;\n`;\n\nexport const CategoriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 16px 100px 16px;\n`;\n","/* eslint-disable no-mixed-operators */\nimport React, { FC } from \"react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport {\n  AdditionalInfo,\n  ArrowRightIcon,\n  BottomInfo,\n  BottomText,\n  BuildingIcon,\n  BuildingsIcon,\n  Divider,\n  GreenMarkerIcon,\n  ShareIcon,\n  Title,\n} from \"../styles/cardStyles\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\n\ninterface BuildingCardProps {\n  isOpen: boolean;\n  searchStore: SearchStore;\n  setCompaniesListIsOpen: (arg0: boolean) => void;\n  shareData: (arg0: PostMessageData) => void;\n  mapglStore: MapglStore;\n  coordinates: [number, number];\n  getAddress: () => string | undefined;\n}\n\nexport const BuildingCard: FC<BuildingCardProps> = ({\n  isOpen,\n  searchStore,\n  setCompaniesListIsOpen,\n  shareData,\n  mapglStore,\n  coordinates,\n  getAddress,\n}) => {\n  return (\n    <>\n      {searchStore.currentObject?.address ? (\n        <BottomInfo>\n          <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)} />\n          <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n            {getAddress()}\n          </BottomText>\n        </BottomInfo>\n      ) : (\n        <BottomInfo>\n          <GreenMarkerIcon />\n          <BottomText>{searchStore.currentObject?.full_name}</BottomText>\n          {!isOpen ? (\n            <ShareIcon\n              onClick={() =>\n                shareData({\n                  type: PostMessageTypeEnum.SHARE_INFO,\n                  data: searchStore.currentObject\n                    ? searchStore.currentObject?.address.building_id\n                    : \"\",\n                })\n              }\n            />\n          ) : null}\n        </BottomInfo>\n      )}\n      {!!searchStore.currentObject?.links?.branches?.count ? (\n        <BottomInfo>\n          <BuildingIcon />\n          <BottomText>\n            {(searchStore.currentObject?.floors &&\n              searchStore.currentObject?.links?.branches?.count &&\n              `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies`) ||\n              (searchStore.currentObject?.floors &&\n                `${searchStore.currentObject?.floors.ground_count} floor`) ||\n              (searchStore.currentObject?.links?.branches?.count &&\n                `${searchStore.currentObject?.links?.branches?.count} companies`)}\n          </BottomText>\n        </BottomInfo>\n      ) : null}\n      {searchStore.currentObject?.links?.branches?.count && isOpen ? (\n        <div>\n          <Divider\n            style={{\n              height: \"2px\",\n            }}\n          />\n          <Title>Сompanies</Title>\n          <BottomInfo\n            onClick={() => setCompaniesListIsOpen(true)}\n            style={{\n              height: \"72px\",\n              width: \"100%\",\n              borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n              alignItems: \"center\",\n              margin: \"18px 0\",\n            }}\n          >\n            <BuildingsIcon />\n            <div\n              style={{\n                width: \"360px\",\n              }}\n            >\n              <BottomText>All Companies</BottomText>\n              <AdditionalInfo>{`${searchStore.currentObject?.links?.branches?.count} companies`}</AdditionalInfo>\n            </div>\n            <ArrowRightIcon />\n          </BottomInfo>\n        </div>\n      ) : null}\n    </>\n  );\n};\n","export enum ContactTypes {\n  Email = \"email\",\n  Website = \"website\",\n  Phone = \"phone\",\n  Fax = \"fax\",\n  Icq = \"icq\",\n  Jabber = \"jabber\",\n  Skype = \"skype\",\n  Vkontakte = \"vkontakte\",\n  Twitter = \"twitter\",\n  Instagram = \"instagram\",\n  Facebook = \"facebook\",\n  Pobox = \"pobox\",\n  Youtube = \"youtube\",\n  Odnoklassniki = \"odnoklassniki\",\n  Googleplus = \"googleplus\",\n  Linkedin = \"linkedin\",\n  Pinterest = \"pinterest\",\n  Whatsapp = \"whatsapp\",\n  Telegram = \"telegram\",\n  Viber = \"viber\",\n}\n","import {\n  BottomInfo,\n  BottomText,\n  GreenMarkerIcon,\n} from \"../styles/cardStyles\";\nimport { FC } from \"react\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\n\ninterface AdministrativeDivisionCardProps {\n  isOpen: boolean;\n  searchStore: SearchStore;\n  shareData: (arg0: PostMessageData) => void;\n  mapglStore: MapglStore;\n  coordinates: [number, number];\n  getAddress: () => string | undefined;\n}\n\nexport const AdministrativeDivisionCard: FC<AdministrativeDivisionCardProps> =\n  ({ isOpen, searchStore, mapglStore, coordinates, getAddress }) => {\n    return (\n      <>\n        {searchStore.currentObject?.address ? (\n          <BottomInfo>\n            <GreenMarkerIcon />\n            <BottomText>{getAddress()}</BottomText>\n          </BottomInfo>\n        ) : (\n          <BottomInfo>\n            <GreenMarkerIcon\n              onClick={() => mapglStore.setCenter(coordinates)}\n            />\n            <BottomText onClick={() => mapglStore.setCenter(coordinates)}>\n              {searchStore.currentObject?.full_name}\n            </BottomText>\n          </BottomInfo>\n        )}\n      </>\n    );\n  };\n","import { FC, useEffect, useState } from \"react\";\nimport { SearchStore } from \"../stores/SearchStore\";\nimport {\n  AllBranchesContainer,\n  ArrowDownIcon,\n  ArrowRightIcon,\n  BottomInfo,\n  BottomText,\n  BranchesCount,\n  BranchesTitle,\n  BuildingIcon,\n  BuildingsIcon,\n  CategoriesContainer,\n  CategoriesItem,\n  CategoriesItemText,\n  CompanyContainer,\n  Divider,\n  EntranceIcon,\n  FacebookIcon,\n  GreenMarkerIcon,\n  InstagramIcon,\n  InternetIcon,\n  PhoneIcon,\n  SocialNetworkIconsContainer,\n  Title,\n  WorkTimeIcon,\n} from \"../styles/cardStyles\";\nimport { MapglStore } from \"../stores/MapglStore\";\nimport { ContactTypes } from \"../enums/ContactTypes.enum\";\nimport { Contact, ResultItem } from \"../api/interfaces/search.interface\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\n\nvar parse = require(\"wellknown\");\n\ninterface OrganizationCartProps {\n  searchStore: SearchStore;\n  isSwipeOpen: boolean;\n  setSwipeIsOpen: (arg0: boolean) => void;\n  setCompaniesListIsOpen: (arg0: boolean) => void;\n  mapglStore: MapglStore;\n  shareData: (arg0: PostMessageData) => void;\n  coordinates: [number, number];\n  getAddress: () => string | undefined;\n}\n\nexport const OrganizationCart: FC<OrganizationCartProps> = ({\n  searchStore,\n  isSwipeOpen,\n  setCompaniesListIsOpen,\n  mapglStore,\n  setSwipeIsOpen,\n  shareData,\n  coordinates,\n  getAddress,\n}) => {\n  let instagramLink = \"\";\n  let facebookLink = \"\";\n  const showEntrance = () => {\n    let entrance = parse(\n      searchStore.currentObject?.links?.entrances[0].geometry.points[0]\n    ).coordinates;\n    mapglStore.buildMarker(entrance);\n    mapglStore.setCenter(entrance);\n    mapglStore.setZoom(18);\n    setSwipeIsOpen(false);\n  };\n\n  const contactTypeChecker = (contactType: ContactTypes) => {\n    if (searchStore.currentObject?.contact_groups)\n      return searchStore.currentObject?.contact_groups[0].contacts.some(\n        (item) => item.type === contactType\n      );\n  };\n\n  const Contacts = (contactType: ContactTypes) => {\n    //TODO:: Refactor this function\n    let arr: Contact[] = [];\n    if (!!searchStore.currentObject?.contact_groups) {\n      searchStore.currentObject?.contact_groups.forEach((item) =>\n        item.contacts.forEach((contact) => {\n          if (contact.type === ContactTypes.Instagram) {\n            instagramLink = contact.url;\n          }\n          if (contact.type === ContactTypes.Facebook) {\n            facebookLink = contact.url;\n          }\n          arr.push(contact);\n        })\n      );\n      return arr.map((item: any, index) => {\n        if (item.type === contactType) {\n          if (item.type === ContactTypes.Website) {\n            return (\n              <BottomText\n                onClick={() =>\n                  shareData({ type: PostMessageTypeEnum.URL, data: item.url })\n                }\n                key={item.value}\n              >{`${item.text}`}</BottomText>\n            );\n          }\n          return <BottomText key={item.value}>{`${item.text}`}</BottomText>;\n        }\n\n        //TODO refactor\n        return <div></div>\n      });\n    }\n  };\n\n  const openCompanyCard = (id: string) => {\n    searchStore.getObjectById(id).then((res: any) => {\n      res && searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n      setSwipeIsOpen(false);\n    });\n    if (searchStore.currentObject) {\n      mapglStore.destroyMarkers();\n      mapglStore.buildMarker([\n        searchStore.currentObject?.point.lon,\n        searchStore.currentObject?.point.lat,\n      ]);\n      mapglStore.setCenter([\n        searchStore.currentObject?.point.lon,\n        searchStore.currentObject?.point.lat,\n      ]);\n    }\n  };\n\n  const [workingTime, setWorkingTime] = useState<any>([]);\n\n  const getCurrentDay = () => {\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    let d = new Date();\n    let n = d.getDay();\n\n    searchStore.currentObject?.schedule &&\n      setWorkingTime([\n        searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.from,\n        searchStore.currentObject?.schedule[days[n]]?.working_hours[0]?.to,\n      ]);\n  };\n\n  useEffect(() => {\n    getCurrentDay();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchStore.currentObject?.schedule]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: isSwipeOpen ? \"scroll\" : \"hidden\",\n      }}\n    >\n      <BottomInfo>\n        <GreenMarkerIcon onClick={() => mapglStore.setCenter(coordinates)} />\n        <BottomText\n          style={{ width: \"85%\" }}\n          onClick={() => mapglStore.setCenter(coordinates)}\n        >\n          {getAddress()}\n        </BottomText>\n      </BottomInfo>\n      {!!searchStore.currentObject?.links?.branches?.count ? (\n        <BottomInfo>\n          <BuildingIcon />\n          <BottomText>\n            {(searchStore.currentObject?.floors &&\n              searchStore.currentObject?.links?.branches?.count &&\n              `${searchStore.currentObject?.floors.ground_count} floor | ${searchStore.currentObject?.links?.branches?.count} companies`) ||\n              (searchStore.currentObject?.floors &&\n                `${searchStore.currentObject?.floors.ground_count} floor`) ||\n              (searchStore.currentObject?.links?.branches?.count &&\n                `${searchStore.currentObject?.links?.branches?.count} companies`)}\n          </BottomText>\n        </BottomInfo>\n      ) : null}\n      {isSwipeOpen ? (\n        <>\n          {searchStore.currentObject?.links?.entrances ? (\n            <BottomInfo onClick={() => showEntrance()}>\n              <EntranceIcon />\n              <BottomText\n                style={{\n                  color: \"#23B064\",\n                }}\n              >\n                Show entrance on map\n              </BottomText>\n            </BottomInfo>\n          ) : null}\n          {searchStore.currentObject?.schedule ? (\n            <BottomInfo>\n              <WorkTimeIcon />\n              <BottomText>{`Daily ${workingTime[0]} — \n                        ${workingTime[1]} Open`}</BottomText>\n            </BottomInfo>\n          ) : null}\n          {contactTypeChecker(ContactTypes.Phone) ? (\n            <BottomInfo>\n              <PhoneIcon />\n              <div\n                style={{\n                  width: \"100%\",\n                }}\n              >\n                {Contacts(ContactTypes.Phone)}\n              </div>\n            </BottomInfo>\n          ) : null}\n          {contactTypeChecker(ContactTypes.Website) ? (\n            <BottomInfo>\n              <InternetIcon />\n              <div>\n                {Contacts(ContactTypes.Website)}\n                <SocialNetworkIconsContainer>\n                  {contactTypeChecker(ContactTypes.Instagram) ? (\n                    <InstagramIcon\n                      onClick={() =>\n                        shareData({\n                          type: PostMessageTypeEnum.URL,\n                          data: instagramLink,\n                        })\n                      }\n                    />\n                  ) : null}\n                  {contactTypeChecker(ContactTypes.Facebook) ? (\n                    <FacebookIcon\n                      onClick={() =>\n                        shareData({\n                          type: PostMessageTypeEnum.URL,\n                          data: facebookLink,\n                        })\n                      }\n                    />\n                  ) : null}\n                </SocialNetworkIconsContainer>\n              </div>\n            </BottomInfo>\n          ) : null}\n          {parseInt(searchStore.currentObject?.org?.branch_count as string) >\n          1 ? (\n            <div>\n              <Divider\n                style={{\n                  height: \"2px\",\n                }}\n              />\n              <Title>other branches</Title>\n              <BottomInfo\n                style={{\n                  width: \"100%\",\n                  borderBottom: \"solid 1px rgba(33, 33, 33, 0.08)\",\n                  margin: \"18px 0 6px 0\",\n                }}\n              >\n                <BuildingsIcon />\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  {searchStore.branchesInOrganization?.result.items.map(\n                    (item: any) => {\n                      return (\n                        <CompanyContainer\n                          key={item.id}\n                          onClick={() => {\n                            openCompanyCard(item.id);\n                          }}\n                        >\n                          <BottomText>{`${item.full_address_name}, ${item.address.postcode}`}</BottomText>\n                          <ArrowRightIcon />\n                        </CompanyContainer>\n                      );\n                    }\n                  )}\n                </div>\n              </BottomInfo>\n            </div>\n          ) : null}\n          {!!searchStore.currentObject?.links?.branches ? (\n            <>\n              <AllBranchesContainer\n                onClick={() => {\n                  setCompaniesListIsOpen(true);\n                  setSwipeIsOpen(false);\n                }}\n              >\n                <BranchesTitle>All companies</BranchesTitle>\n                <BranchesCount>\n                  <div\n                    style={{\n                      margin: \"0 8px\",\n                    }}\n                  >\n                    {searchStore.currentObject?.links?.branches?.count}\n                  </div>\n                  <ArrowDownIcon />\n                </BranchesCount>\n              </AllBranchesContainer>\n            </>\n          ) : null}\n          <Title>categories</Title>\n          {searchStore.currentObject?.rubrics ? (\n            <CategoriesContainer>\n              {searchStore.currentObject.rubrics.map((item) => {\n                return (\n                  <CategoriesItem key={item.id}>\n                    <CategoriesItemText>{item.name}</CategoriesItemText>\n                  </CategoriesItem>\n                );\n              })}\n            </CategoriesContainer>\n          ) : null}\n        </>\n      ) : null}\n    </div>\n  );\n};\n","export enum NavigatorsEnum {\n  GOOGLE = \"Google Maps\",\n  WAZE = \"Waze\",\n  TWO_GIS = \"2GIS\",\n  OSM = \"OSM\",\n}\n","import { PostMessageData } from \"../api/interfaces/postMassage.interface\";\n\ndeclare global {\n  interface Window {\n    ReactNativeWebView: any;\n  }\n}\n\nexport const SendData = (data: PostMessageData): void => {\n  window.ReactNativeWebView &&\n    window.ReactNativeWebView.postMessage(JSON.stringify(data));\n};\n","import { FC, useEffect, useState } from \"react\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport Swipe from \"react-easy-swipe\";\nimport { Places } from \"../assets/data/places\";\nimport { CompaniesList } from \"./CompaniesList\";\nimport { ResponseObjectTypes } from \"../enums/ResponseObjectTypes.enum\";\nimport { BuildingCard } from \"./BuildingCard\";\nimport { AdministrativeDivisionCard } from \"./AdministarativeDivisionCard\";\nimport {\n  ArrowDownIcon,\n  Divider,\n  IconButton,\n  IconButtonContainer,\n  PlaceInfo,\n  PlaceInfoWrapper,\n  PlaceTitle,\n  ShareIcon,\n  SwipeIndicator,\n  UpperInfo,\n  Wrapper,\n} from \"../styles/cardStyles\";\nimport { OrganizationCart } from \"./OrganizationCart\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\nimport { SendData } from \"../utils/SendData\";\nimport { PostMessageData } from \"../api/interfaces/postMassage.interface\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\n\ninterface ObjectCardProps {\n  searchStore: SearchStore;\n  mapglStore: MapglStore;\n  setIsDirectionCard: (value: boolean) => void;\n  handleMapClick: (data: mapglTypes.MapPointerEvent) => void;\n}\n\nexport const ObjectCard: FC<ObjectCardProps> = observer(\n  ({ searchStore, mapglStore, setIsDirectionCard, handleMapClick }) => {\n    useEffect(() => {\n      window.history.pushState(null, \"\", window.location.href + \"/object\");\n    }, []);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isCompaniesListOpen, setCompaniesListIsOpen] = useState(false);\n\n    const canBeSwiped =\n      searchStore.currentObject?.type === ResponseObjectTypes.branch ||\n      searchStore.currentObject?.type === ResponseObjectTypes.building;\n\n    const setType = (type?: string) => {\n      for (let item of Places) {\n        if (type === item.type) {\n          return item.title;\n        }\n      }\n      return \"\";\n    };\n\n    const shareData = (data: PostMessageData) => {\n      if (PostMessageTypeEnum.SHARE_INFO === data.type) {\n        const twoGisLink = `https://2gis.com.cy/cyprus/${\n          searchStore.currentObject?.type === ResponseObjectTypes.branch\n            ? \"firm\"\n            : \"geo\"\n        }/${data.data}`;\n        const googleMapsLink = `https://www.google.com/maps/search/?api=1&query=${searchStore.currentObject?.point.lat}%2C${searchStore.currentObject?.point.lon}`;\n        SendData({\n          type: PostMessageTypeEnum.SHARE_INFO,\n          data: `For NaviCY:\\n${twoGisLink}\\n\\nFor Google maps:\\n${googleMapsLink}`,\n        });\n      } else {\n        SendData(data);\n      }\n    };\n\n    const getAddress = () => {\n      return (\n        searchStore.currentObject?.address &&\n        searchStore.currentObject?.full_address_name?.split(\",\")[1] +\n          \",\" +\n          searchStore.currentObject?.full_address_name?.split(\",\")[2] +\n          \", \" +\n          searchStore.currentObject.adm_div[\n            searchStore.currentObject.adm_div.length - 1\n          ].name +\n          \", \" +\n          searchStore.currentObject.address?.postcode +\n          \", \" +\n          searchStore.currentObject?.full_address_name?.split(\",\")[0]\n      );\n    };\n\n    //TODO:: Remove later if something went wrong\n    // const cardHeight = searchStore.currentObject?.floors || searchStore.currentObject?.links?.branches?.count ? \"28%\" : \"24%\"\n    return (\n      <>\n        <Wrapper\n          style={{\n            display: searchStore.currentObject ? \"flex\" : \"none\",\n            height: isOpen ? \"95%\" : \"\",\n          }}\n        >\n          <Swipe\n            onSwipeUp={() => {\n              setIsOpen(canBeSwiped);\n            }}\n            onSwipeDown={() => {\n              setIsOpen(false);\n            }}\n          >\n            <IconButtonContainer\n              onClick={() => {\n                mapglStore.mapgl?.off(\"click\", handleMapClick);\n                console.log(mapglStore.mapgl);\n\n                setIsDirectionCard(true);\n              }}\n            >\n              <IconButton\n                style={{\n                  top: isOpen ? \"75vh\" : \"-35px\",\n                  transition: \"top 0.3s\",\n                }}\n              />\n            </IconButtonContainer>\n            {canBeSwiped ? <SwipeIndicator /> : null}\n            <UpperInfo\n              style={{\n                flexDirection: isOpen ? \"row\" : \"column\",\n                justifyContent: isOpen ? \"space-around\" : \"\",\n                alignItems: isOpen ? \"center\" : \"\",\n              }}\n            >\n              {isOpen ? (\n                <ArrowDownIcon onClick={() => setIsOpen(false)} />\n              ) : null}\n              <PlaceTitle>\n                {searchStore.currentObject?.name\n                  ? searchStore.currentObject?.name\n                  : \"Utility structure\"}\n              </PlaceTitle>\n              {!isOpen ? (\n                <PlaceInfoWrapper>\n                  <PlaceInfo>\n                    {searchStore.currentObject?.subtype ||\n                      searchStore.currentObject?.purpose_name ||\n                      setType(searchStore.currentObject?.type)}\n                  </PlaceInfo>\n                  {!isOpen ? (\n                    <ShareIcon\n                      onClick={() =>\n                        shareData({\n                          type: PostMessageTypeEnum.SHARE_INFO,\n                          data: searchStore.currentObject\n                            ? searchStore.currentObject.id\n                            : \"\",\n                        })\n                      }\n                    />\n                  ) : null}\n                </PlaceInfoWrapper>\n              ) : (\n                <ShareIcon\n                  onClick={() =>\n                    shareData({\n                      type: PostMessageTypeEnum.SHARE_INFO,\n                      data: searchStore.currentObject\n                        ? searchStore.currentObject.type ===\n                          ResponseObjectTypes.building\n                          ? searchStore.currentObject?.address.building_id\n                          : searchStore.currentObject.id\n                        : \"\",\n                    })\n                  }\n                  style={{ marginLeft: \"11px\" }}\n                />\n              )}\n            </UpperInfo>\n            <Divider />\n          </Swipe>\n          {searchStore.currentObject?.type === ResponseObjectTypes.building ? (\n            <BuildingCard\n              getAddress={getAddress}\n              shareData={shareData}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[\n                searchStore.currentObject.point?.lon,\n                searchStore.currentObject.point?.lat,\n              ]}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.admDiv ||\n          searchStore.currentObject?.type === ResponseObjectTypes.street ? (\n            <AdministrativeDivisionCard\n              getAddress={getAddress}\n              shareData={shareData}\n              isOpen={isOpen}\n              searchStore={searchStore}\n              mapglStore={mapglStore}\n              coordinates={[\n                searchStore.currentObject.point?.lon,\n                searchStore.currentObject.point?.lat,\n              ]}\n            />\n          ) : null}\n          {searchStore.currentObject?.type === ResponseObjectTypes.branch ? (\n            <OrganizationCart\n              getAddress={getAddress}\n              shareData={shareData}\n              setSwipeIsOpen={setIsOpen}\n              mapglStore={mapglStore}\n              searchStore={searchStore}\n              isSwipeOpen={isOpen}\n              setCompaniesListIsOpen={setCompaniesListIsOpen}\n              coordinates={[\n                searchStore.currentObject.point?.lon,\n                searchStore.currentObject.point?.lat,\n              ]}\n            />\n          ) : null}\n        </Wrapper>\n        {isCompaniesListOpen && (\n          <CompaniesList setIsOpen={setCompaniesListIsOpen} />\n        )}\n      </>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/myLocation.ff902024.svg\";","export default __webpack_public_path__ + \"static/media/location.d2150911.svg\";","import styled from \"styled-components\";\nimport BackArrow from \"assets/images/back-arrow.svg\";\nimport Location from \"assets/images/location.svg\";\nimport GreenMarker from \"assets/images/green-marker.svg\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\n\nconst DirectionInputWrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 144px;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StartPointWrapper = styled.div`\n  display: flex;\n`;\n\nconst BackArrowIcon = styled.div`\n  background-image: url(${BackArrow});\n  background-repeat: no-repeat;\n  width: 18px;\n  height: 18px;\n  margin-left: 10px;\n  margin-top: 40px;\n`;\n\nconst Input = styled.input`\n  height: 24px;\n  width: 190px;\n  border: 0;\n  margin-left: 19px;\n`;\n\nconst LocationIcon = styled.div`\n  background-image: url(${Location});\n  width: 24px;\n  height: 24px;\n`;\n\nconst LocationInputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 16px;\n  margin-top: 36px;\n  max-height: 40px;\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  top: 87px;\n  left: 90px;\n  height: 1px;\n  width: 100%;\n  background: rgba(33, 33, 33, 0.08);\n`;\n\nconst EndPointWrapper = styled.div`\n  margin-top: 42px;\n  margin-left: 44px;\n  display: flex;\n`;\n\nconst GreenMarkerIcon = styled.p`\n  background-image: url(${GreenMarker});\n  height: 24px;\n  width: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst EndPoint = styled.div`\n  margin-left: 19px;\n`;\n\ninterface DirectionInputProps {\n  searchStore: SearchStore;\n  onDirectionInputBack: () => void;\n}\n\nexport const DirectionInput = observer(\n  ({ searchStore, onDirectionInputBack }: DirectionInputProps) => {\n    const backHandler = () => {\n      onDirectionInputBack();\n    };\n\n    return (\n      <DirectionInputWrapper>\n        <StartPointWrapper>\n          <BackArrowIcon onClick={backHandler} />\n          <LocationInputWrapper>\n            <LocationIcon />\n            <Input placeholder=\"Your location\" />\n          </LocationInputWrapper>\n        </StartPointWrapper>\n        <Line />\n        <EndPointWrapper>\n          <GreenMarkerIcon />\n          <EndPoint>\n            {(searchStore.currentObject?.address_name &&\n              searchStore.currentObject.address?.postcode &&\n              searchStore.currentObject.address_name +\n                \", \" +\n                searchStore.currentObject.address?.postcode) ||\n              searchStore.currentObject?.name ||\n              searchStore.currentObject?.full_name}\n          </EndPoint>\n        </EndPointWrapper>\n      </DirectionInputWrapper>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/two-gis-disabled.62eb014c.svg\";","export default __webpack_public_path__ + \"static/media/google.9c3e727e.svg\";","export default __webpack_public_path__ + \"static/media/waze.42aec150.svg\";","export default __webpack_public_path__ + \"static/media/osm.3f290348.svg\";","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { DirectionsStore } from \"stores/DirectionsStore\";\nimport { SearchStore } from \"stores/SearchStore\";\nimport { observer } from \"mobx-react\";\nimport { MapglStore } from \"stores/MapglStore\";\nimport { EnrichedGeolocationCoordinates } from \"react-hook-geolocation\";\nimport { SendData } from \"../utils/SendData\";\nimport { PostMessageTypeEnum } from \"../enums/PostMessageType.enum\";\nimport TwoGisDisabled from \"assets/images/two-gis-disabled.svg\";\nimport Google from \"assets/images/google.svg\";\nimport Waze from \"assets/images/waze.svg\";\nimport Osm from \"assets/images/osm.svg\";\nimport { NavigatorsEnum } from \"enums/Navigators.enum\";\n\nconst DirectionCardWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 52;\n  width: 100%;\n  height: 220px;\n  text-align: center;\n`;\n\nconst DirectionButtonsWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: 10px 16px 0 16px;\n  margin-bottom: 24px;\n`;\n\nconst DirectionButton = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 50% 50;\n  padding: 9px;\n`;\n\nconst RouteTime = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nconst Distance = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst LetsGoButton = styled.button`\n  width: 315px;\n  height: 48px;\n  background: #23b064;\n  border-radius: 12px;\n  margin-bottom: 10px;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-align: center;\n  color: #ffffff;\n`;\n\nconst DirectionsLength = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst NavigatorsContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  background: #ffffff;\n  z-index: 54;\n  width: 100%;\n  height: 20%;\n  text-align: center;\n  border-radius: 16px 16px 0 0;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst TwoGisIcon = styled.div`\n  background-image: url(${TwoGisDisabled});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #ebebeb;\n  border-radius: 17px;\n  width: 48px;\n  height: 48px;\n`;\nconst GoogleIcon = styled.div`\n  background-image: url(${Google});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #ebebeb;\n  border-radius: 17px;\n  width: 48px;\n  height: 48px;\n`;\n\nconst WazeIcon = styled.div`\n  background-image: url(${Waze});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #ebebeb;\n  border-radius: 17px;\n  width: 48px;\n  height: 48px;\n`;\n\nconst OsmIcon = styled.div`\n  background-image: url(${Osm});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #ebebeb;\n  border-radius: 17px;\n  width: 48px;\n  height: 48px;\n`;\n\nconst NaviContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ScreenContainer = styled.div`\n  z-index: 53;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nconst NaviText = styled.div`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 15px;\n  line-height: 19px;\n  align-items: center;\n  text-align: center;\n`;\n\nenum DirectionType {\n  faster = \"jam\",\n  shorter = \"shortest\",\n}\n\ninterface DirectionCardProps {\n  directionsStore: DirectionsStore;\n  mapglStore: MapglStore;\n  searchStore: SearchStore;\n  currentGeolocation: EnrichedGeolocationCoordinates;\n}\n\nexport const DirectionCard = observer(\n  ({\n    directionsStore,\n    searchStore,\n    mapglStore,\n    currentGeolocation,\n  }: DirectionCardProps) => {\n    useEffect(() => {\n      window.history.pushState(\n        null,\n        \"\",\n        window.location.href + \"/direction\"\n      );\n    }, []);\n\n    const [selectedDirection, setSelectedDirection] = useState(\n      DirectionType.faster\n    );\n\n    const [faster, setFaster] = useState<any>(null);\n    const [shortest, setShortest] = useState<any>(null);\n    const [isNavigatorsShown, setIsNavigatorsShown] = useState(false);\n\n    const buildDirection = (\n      endPoint: number[],\n      type: string,\n      color: string\n    ): Promise<any> => {\n      return directionsStore.buildDirection(\n        [currentGeolocation.longitude, currentGeolocation.latitude],\n        endPoint,\n        type,\n        color\n      );\n    };\n\n    useEffect(() => {\n      searchStore.currentObject &&\n        (mapglStore.currentMarkerCoords || searchStore.currentObject.point) &&\n        buildDirection(\n          mapglStore.currentMarkerCoords || [\n            searchStore.currentObject.point.lon,\n            searchStore.currentObject.point.lat,\n          ],\n          selectedDirection,\n          selectedDirection === DirectionType.faster ? \"#23B064\" : \"#0090FF\"\n        ).then((res) => {\n          searchStore.currentObject &&\n            (mapglStore.currentMarkerCoords ||\n              searchStore.currentObject.point) &&\n            directionsStore\n              .getDirection(\n                [currentGeolocation.longitude, currentGeolocation.latitude],\n                mapglStore.currentMarkerCoords || [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.faster\n              )\n              .then((res) => {\n                setFaster(res.data[0]);\n              });\n\n          searchStore.currentObject &&\n            (mapglStore.currentMarkerCoords ||\n              searchStore.currentObject.point) &&\n            directionsStore\n              .getDirection(\n                [currentGeolocation.longitude, currentGeolocation.latitude],\n                mapglStore.currentMarkerCoords || [\n                  searchStore.currentObject.point.lon,\n                  searchStore.currentObject.point.lat,\n                ],\n                DirectionType.shorter\n              )\n              .then((res) => {\n                setShortest(res.data[0]);\n              });\n        });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedDirection, directionsStore, searchStore.currentObject]);\n\n    return (\n      <>\n        <DirectionCardWrapper>\n          <DirectionButtonsWrapper>\n            <DirectionButton\n              onClick={() => {\n                selectedDirection !== DirectionType.faster &&\n                  mapglStore.destroyDirection();\n                setSelectedDirection(DirectionType.faster);\n              }}\n              style={\n                selectedDirection === DirectionType.faster\n                  ? {\n                      border: \"1px solid  #dafae8\",\n                      background: \"#92c9ab\",\n                      borderRadius: \"3px\",\n                    }\n                  : {}\n              }\n            >\n              <RouteTime>{(shortest?.duration / 60).toFixed(1)} min</RouteTime>\n              <div> </div>\n              <Distance>{(shortest?.distance / 1000).toFixed(1)} km</Distance>\n              <div>shorter </div>\n            </DirectionButton>\n            <DirectionButton\n              onClick={() => {\n                selectedDirection !== DirectionType.shorter &&\n                  mapglStore.destroyDirection();\n                setSelectedDirection(DirectionType.shorter);\n              }}\n              style={\n                selectedDirection === DirectionType.shorter\n                  ? {\n                      border: \"1px solid  #dafae8\",\n                      background: \"#92c9ab\",\n                      borderRadius: \"3px\",\n                    }\n                  : {}\n              }\n            >\n              <RouteTime>{(faster?.duration / 60).toFixed(1)} min</RouteTime>\n              <div></div>\n              <Distance>{(faster?.distance / 1000).toFixed(1)} km</Distance>\n              <div>faster </div>\n            </DirectionButton>\n          </DirectionButtonsWrapper>\n          <LetsGoButton onClick={() => setIsNavigatorsShown(true)}>\n            Let`s go\n          </LetsGoButton>\n          <DirectionsLength>You have 28 routes left</DirectionsLength>\n        </DirectionCardWrapper>\n        {isNavigatorsShown && (\n          <ScreenContainer onClick={() => setIsNavigatorsShown(false)}>\n            <NavigatorsContainer>\n              <NaviContainer\n                onClick={() =>\n                  SendData({\n                    type: PostMessageTypeEnum.ROUTE,\n                    data: {\n                      navigator: NavigatorsEnum.TWO_GIS,\n                      currentPoint: `${currentGeolocation.latitude},${currentGeolocation.longitude}`,\n                      routPoint: `${searchStore.currentObject?.point.lat},${searchStore.currentObject?.point.lon}`,\n                    },\n                  })\n                }\n              >\n                <TwoGisIcon />\n                <NaviText style={{ color: \"#9D9D9D\" }}>\n                  {NavigatorsEnum.TWO_GIS}\n                </NaviText>\n              </NaviContainer>\n              <NaviContainer\n                onClick={() =>\n                  SendData({\n                    type: PostMessageTypeEnum.ROUTE,\n                    data: {\n                      navigator: NavigatorsEnum.WAZE,\n                      currentPoint: `${currentGeolocation.latitude},${currentGeolocation.longitude}`,\n                      routPoint: `${searchStore.currentObject?.point.lat},${searchStore.currentObject?.point.lon}`,\n                    },\n                  })\n                }\n              >\n                <WazeIcon />\n                <NaviText>{NavigatorsEnum.WAZE}</NaviText>\n              </NaviContainer>\n              <NaviContainer\n                onClick={() =>\n                  SendData({\n                    type: PostMessageTypeEnum.ROUTE,\n                    data: {\n                      navigator: NavigatorsEnum.GOOGLE,\n                      currentPoint: `${currentGeolocation.latitude},${currentGeolocation.longitude}`,\n                      routPoint: `${searchStore.currentObject?.point.lat},${searchStore.currentObject?.point.lon}`,\n                    },\n                  })\n                }\n              >\n                <GoogleIcon />\n                <NaviText>{NavigatorsEnum.GOOGLE}</NaviText>\n              </NaviContainer>\n              <NaviContainer\n                onClick={() =>\n                  SendData({\n                    type: PostMessageTypeEnum.ROUTE,\n                    data: {\n                      navigator: NavigatorsEnum.OSM,\n                      currentPoint: `${currentGeolocation.latitude},${currentGeolocation.longitude}`,\n                      routPoint: `${searchStore.currentObject?.point.lat},${searchStore.currentObject?.point.lon}`,\n                    },\n                  })\n                }\n              >\n                <OsmIcon />\n                <NaviText>{NavigatorsEnum.OSM}</NaviText>\n              </NaviContainer>\n            </NavigatorsContainer>\n          </ScreenContainer>\n        )}\n      </>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/zoom-plus.b4f42d51.svg\";","export default __webpack_public_path__ + \"static/media/zoom-minus.29cdd6d7.svg\";","/* eslint-disable  */\nimport { useDirectionsStore, useMapglStore, useSearchStore } from \"hooks/store\";\nimport { useEffect, useRef, useState } from \"react\";\nimport mapglTypes from \"@2gis/mapgl/types/index\";\nimport { SearchInput } from \"./SearchInput\";\nimport { Results } from \"./Results\";\nimport styled from \"styled-components\";\nimport { ObjectCard } from \"./ObjectsCard\";\nimport { ResultItem } from \"api/interfaces/search.interface\";\nimport myLocation from \"../assets/images/myLocation.svg\";\nimport { DirectionInput } from \"./DirectionInput\";\nimport { DirectionCard } from \"./DirectionCard\";\nimport Plus from \"../assets/images/zoom-plus.svg\";\nimport Minus from \"../assets/images/zoom-minus.svg\";\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nimport useGeolocation from \"react-hook-geolocation\";\nimport { debounce } from \"@material-ui/core/utils\";\nvar parse = require(\"wellknown\");\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Map = styled.div`\n  width: 100vh;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst MyLocationButton = styled.div`\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  top: 55%;\n  left: 83%;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${myLocation});\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.1))\n    drop-shadow(2px 2px 10px rgba(0, 0, 0, 0.08));\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst CustomButtonsWrapper = styled.div`\n  position: fixed;\n  left: 83%;\n  height: 165px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ZoomContainer = styled.div`\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.15))\n    drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.06));\n`;\n\nconst ZoomPlusButton = styled.div`\n  width: 46px;\n  height: 46px;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${Plus});\n  border-radius: 10px 10px 0px 0px;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst ZoomMinusButton = styled.div`\n  width: 46px;\n  height: 46px;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${Minus});\n  border-radius: 0px 0px 10px 10px;\n  margin-top: 4px;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst MapWrapper = React.memo(\n  () => {\n    return <Map id=\"container\"></Map>;\n  },\n  () => true\n);\nexport const Mapgl = observer(() => {\n  useEffect(() => {\n    window.history.pushState(null, \"\", window.location.href + \"/main\");\n    window.onpopstate = function (event) {\n      if (window.location.pathname === \"/object\") {\n        onDirectionInputBack();\n      } else if (window.location.pathname === \"/results\") {\n        if (searchInputRef?.current?.value && searchStore.searchValue) {\n          searchInputRef.current.value = searchStore.searchValue;\n        }\n        setIsObjectCardOpen(false);\n        setIsResultsOpen(true);\n      } else {\n        window.history.go(0);\n        searchStore.resetReqParams();\n        window.history.pushState(null, \"\", window.location.href + \"/main\");\n      }\n    };\n  }, []);\n\n  const mapglStore = useMapglStore();\n  const searchStore = useSearchStore();\n  const directionsStore = useDirectionsStore();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [mapgl, setMapgl] = useState<mapglTypes.Map | null>(null);\n  const [isObjectCardOpen, setIsObjectCardOpen] = useState(false);\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isDirectionCard, setIsDirectionCard] = useState(false);\n  const [isResultsOpen, setIsResultsOpen] = useState(false);\n  const [isMarkerCentred, setIsMarkerCentred] = useState(false);\n  const [isShouldGoToMyLocation, setIsShouldGoToMyLocation] = useState(true);\n  const [myLocationClickCount, setMyLocationClickCount] = useState(1);\n  const [isLocationEvent, setIsLocationEvent] = useState(false);\n\n  useEffect((): (() => void) => {\n    mapglStore.loadMapglAPI().then(() => {\n      setMapgl(\n        mapglStore.loadMapgl(\"container\", {\n          center: mapglStore.myLocation as [number, number],\n          zoom: 13,\n          key: process.env.REACT_APP_TWOGIS_KEY,\n        })\n      );\n      mapglStore.setLocationMarker(mapglStore.myLocation as [number, number]);\n    });\n\n    return () => mapgl && mapgl.destroy();\n  }, []);\n\n  const onGeolocationUpdate = (geolocation: any) => {\n    if (mapglStore.locationMarker) {\n      mapglStore.locationMarker.destroy();\n    }\n    if (isMarkerCentred) {\n      mapglStore.setCenter([geolocation.longitude, geolocation.latitude]);\n    }\n    mapglStore.setLocationMarker([geolocation.longitude, geolocation.latitude]);\n  };\n\n  const geolocation = useGeolocation({ enableHighAccuracy: true });\n\n  useEffect(() => {\n    if (isMarkerCentred) {\n      onGeolocationUpdate(geolocation);\n    }\n    if (isShouldGoToMyLocation) {\n      goToMyLocation();\n    }\n  }, [geolocation]);\n\n  useEffect(() => {\n    if (!isDirectionCard) {\n      mapgl && mapgl.on(\"click\", handleMapClick);\n    } else {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    }\n\n    return () => {\n      mapgl && mapgl.off(\"click\", handleMapClick);\n    };\n  }, [mapgl, isDirectionCard]);\n\n  // useEffect(() => {\n  //   mapgl && mapgl.on(\"zoomend\", handleZoom);\n\n  //   return () => {\n  //     mapgl && mapgl.off(\"zoomend\", handleZoom);\n  //   };\n  // }, [mapgl]);\n\n  useEffect(() => {\n    mapgl && mapgl.on(\"moveend\", handleZoom);\n    return () => {\n      mapgl && mapgl.off(\"moveend\", handleZoom);\n    };\n  }, [mapgl]);\n\n  const handleZoom = async (event: any) => {\n    console.log(\"searchStore.reqParams\");\n\n    if (mapglStore.markers.length > 1) {\n      mapglStore.markers && mapglStore.destroyMarkers();\n      const reqParams = searchStore.reqParams;\n      const viewPoints = mapgl?.getBounds();\n      let res: any[] = [];\n\n      await Promise.all(\n        reqParams.map(async (reqParam) => {\n          if (reqParam?.type === \"id\") {\n            console.log(\"id\");\n\n            const response = await searchStore.getSearchResults(\n              reqParam.params.idType,\n              reqParam.params.id,\n              viewPoints?.northEast as [number, number],\n              viewPoints?.southWest as [number, number],\n              50\n            );\n\n            res.push(...response);\n          } else if (reqParam?.type === \"query\") {\n            const response = await searchStore.getSearchResultsByQuery(\n              reqParam.params.query,\n              viewPoints?.northEast as [number, number],\n              viewPoints?.southWest as [number, number]\n            );\n            res.push(...response);\n          }\n        })\n      );\n\n      await res.map((item: any) => {\n        if (item.point) {\n          console.log(\"point\");\n\n          const marker = mapglStore.buildMarker([\n            item.point.lon,\n            item.point.lat,\n          ]);\n          if (\n            mapglStore &&\n            mapglStore?.currentMarkerCoords &&\n            item.point.lon === mapglStore?.currentMarkerCoords[0] &&\n            item.point.lat === mapglStore?.currentMarkerCoords[1]\n          ) {\n            marker?.setIcon({ icon: \"./red-marker.svg\" });\n          }\n          marker?.on(\"click\", () => {\n            createMarkerEvent(marker, item);\n          });\n        }\n      });\n\n      console.log(res);\n\n      setIsResultsOpen(false);\n    }\n  };\n\n  const createMarkerEvent = (marker: mapglTypes.Marker, item: ResultItem) => {\n    if (!isDirectionCard) {\n      mapglStore.markers.map((marker: mapglTypes.Marker) => {\n        marker.setIcon({ icon: \"./marker.svg\" });\n      });\n      mapglStore.setCurrentMarker(marker);\n      marker.setIcon({ icon: \"./red-marker.svg\" });\n      searchStore.setCurrentObject(item);\n      setIsObjectCardOpen(true);\n      mapglStore.setCurrentMarkerCoords([item.point.lon, item.point.lat]);\n      mapglStore.setCenter([item.point.lon, item.point.lat]);\n    }\n  };\n\n  const destroyAll = () => {\n    mapglStore.destroyPolygon();\n    mapglStore.destroyMarkers();\n    mapglStore.destroyDirection();\n    mapgl && mapgl.setSelectedObjects([]);\n  };\n\n  const handleMapClick = (data: mapglTypes.MapPointerEvent) => {\n    setMyLocationClickCount(myLocationClickCount + 3);\n    window.history.pushState(null, \"\", window.location.href + \"/map\");\n\n    if (!isDirectionCard) {\n      searchStore.resetReqParams();\n      searchInputRef && searchInputRef.current?.blur();\n      destroyAll();\n\n      if (searchInputRef.current?.value) {\n        searchInputRef.current.value = \"\";\n      }\n\n      mapglStore.buildMarker(data.lngLat);\n\n      mapglStore.setCurrentMarkerCoords(data.lngLat);\n\n      if (data.target?.id) {\n        mapgl && mapgl.setSelectedObjects([data.target?.id]);\n        searchStore.getObjectById(data.target?.id).then((res: any) => {\n          res &&\n            searchStore.setCurrentObject(res.result?.items[0] as ResultItem);\n          setIsMarkerCentred(false);\n          setIsObjectCardOpen(true);\n        });\n      } else {\n        searchStore\n          .getObjectByGeo(data.lngLat as [number, number])\n          .then((res: any) => {\n            if (res.data?.result?.items) {\n              const parsedPolygon = parse(\n                res.data?.result?.items[0]?.geometry?.selection\n              );\n              searchStore.setCurrentObject(\n                res.data?.result?.items[0] as ResultItem\n              );\n              setIsMarkerCentred(false);\n              setIsObjectCardOpen(true);\n\n              if (typeof parsedPolygon.coordinates[0] !== \"number\") {\n                mapglStore.buildPolygon(parsedPolygon.coordinates);\n              }\n            }\n          });\n      }\n    }\n  };\n\n  const onDirectionInputBack = () => {\n    mapglStore.destroyDirection();\n    setIsObjectCardOpen(true);\n    setIsDirectionCard(false);\n  };\n\n  const goToMyLocation = (): void => {\n    mapglStore.locationMarker?.destroy();\n    mapglStore.setLocationMarker([geolocation.longitude, geolocation.latitude]);\n    mapgl?.setCenter([geolocation.longitude, geolocation.latitude]);\n\n    if (isShouldGoToMyLocation && geolocation.longitude !== null) {\n      setIsShouldGoToMyLocation(false);\n    }\n  };\n\n  const onClickLocationHandler = (): void => {\n    setMyLocationClickCount(myLocationClickCount + 1);\n    if (myLocationClickCount === 1 || myLocationClickCount === 2) {\n      setTimeout(() => {\n        if (myLocationClickCount === 1) {\n          if (isMarkerCentred) {\n            setIsMarkerCentred(false);\n          } else {\n            goToMyLocation();\n          }\n        } else {\n          setIsMarkerCentred(true);\n        }\n        setMyLocationClickCount(1);\n      }, 500);\n    }\n  };\n\n  const zoomPlus = () => {\n    const currentZoom = mapgl?.getZoom();\n    if (currentZoom) mapgl?.setZoom(currentZoom + 1);\n  };\n\n  const zoomMinus = () => {\n    const currentZoom = mapgl?.getZoom();\n    if (currentZoom && currentZoom > 1) mapgl?.setZoom(currentZoom - 1);\n  };\n\n  return (\n    <Wrapper>\n      {isDirectionCard ? (\n        <DirectionInput\n          searchStore={searchStore}\n          onDirectionInputBack={onDirectionInputBack}\n        />\n      ) : (\n        <SearchInput\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setOpenObjectCard={setIsObjectCardOpen}\n          setIsEnterPressed={setIsEnterPressed}\n          setIsResultsOpen={setIsResultsOpen}\n          searchInputRef={searchInputRef}\n          destroyAll={destroyAll}\n          isDirectionCard={isDirectionCard}\n          setIsMarkerCentred={setIsMarkerCentred}\n        />\n      )}\n\n      {!isObjectCardOpen && !isDirectionCard && (\n        <Results\n          searchStore={searchStore}\n          destroyAll={destroyAll}\n          mapglStore={mapglStore}\n          searchInputRef={searchInputRef}\n          setIsMarkerCentred={setIsMarkerCentred}\n          setOpenObjectCard={setIsObjectCardOpen}\n          isEnterPressed={isEnterPressed}\n          isResultsOpen={isResultsOpen}\n          setIsResultsOpen={setIsResultsOpen}\n          isDirectionCard={isDirectionCard}\n          setIsEnterPressed={setIsEnterPressed}\n        />\n      )}\n      {isObjectCardOpen && !isDirectionCard && (\n        <ObjectCard\n          searchStore={searchStore}\n          mapglStore={mapglStore}\n          setIsDirectionCard={setIsDirectionCard}\n          handleMapClick={handleMapClick}\n        />\n      )}\n      {isDirectionCard && (\n        <DirectionCard\n          currentGeolocation={geolocation}\n          mapglStore={mapglStore}\n          directionsStore={directionsStore}\n          searchStore={searchStore}\n        />\n      )}\n      <MapWrapper />\n\n      <CustomButtonsWrapper\n        style={{\n          top: isObjectCardOpen ? \"27%\" : \"40%\",\n          transition: \"top 0.3s\",\n        }}\n      >\n        <ZoomContainer>\n          <ZoomPlusButton onClick={zoomPlus} />\n          <ZoomMinusButton onClick={zoomMinus} />\n        </ZoomContainer>\n        <MyLocationButton\n          style={isMarkerCentred ? { backgroundColor: \"#23B064\" } : {}}\n          onClick={() => onClickLocationHandler()}\n        />\n      </CustomButtonsWrapper>\n    </Wrapper>\n  );\n});\n","import BaseAPI from \"./base\";\n\nexport default class DirectionsAPI extends BaseAPI {\n  async getDirections(\n    startPoint: number[],\n    endPoint: number[],\n    type: string\n  ): Promise<any> {\n    const options = {\n      points: [\n        {\n          lon1: startPoint[0],\n          lat1: startPoint[1],\n          lon2: endPoint[0],\n          lat2: endPoint[1],\n        },\n      ],\n      type,\n      output: \"full\",\n    };\n    const res = await this.axios.post(\n      `get_pairs/1.0/car?key=${process.env.REACT_APP_SEARCH_KEY}`,\n      options\n    );\n\n    return res;\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport DirectionsAPI from \"./directions\";\nimport SearchAPI from \"./search\";\n\nexport const getClient = (): AxiosInstance => {\n  return axios.create({\n    baseURL: \"https://catalog.api.2gis.com/\",\n    timeout: 3000,\n    headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\n  });\n};\n\nexport interface API {\n  search: SearchAPI;\n  directions: DirectionsAPI;\n}\n\nconst makeApi = (client: AxiosInstance): API => {\n  return {\n    search: new SearchAPI(client),\n    directions: new DirectionsAPI(client),\n  };\n};\nexport default makeApi;\n","import { API } from \"api/index\";\nimport makeApi, { getClient } from \"api\";\n\nexport const useApi = (): API => {\n  const client = getClient();\n  return makeApi(client);\n};\n","import React from \"react\";\nimport { RootStore } from \"stores/RootStore\";\nimport { StoreProvider } from \"contexts/StoreContext\";\nimport { Mapgl } from \"components/Mapgl\";\nimport { useApi } from \"hooks/api\";\nimport \"./style.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nexport const App = () => {\n  return <Mapgl />;\n};\n\nconst StoreWrapper: React.FC = () => {\n  const api = useApi();\n  const store = new RootStore(api);\n  return (\n    <HashRouter basename=\"/\">\n      <StoreProvider store={store}>\n        <App />\n      </StoreProvider>\n    </HashRouter>\n  );\n};\n\nexport default StoreWrapper;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport StoreWrapper from \"App\";\nimport reportWebVitals from \"reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}